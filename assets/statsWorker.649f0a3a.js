import{fR as a,X as e,fJ as i}from"./vendor.7103ff48.js";import{o as t,i as n,r as o,u as l,s}from"./utils.eaa56ffd.js";let r=null;async function u(a){const{attribute:e,featuresJSON:i}=a,{normalizationType:s,normalizationField:r,minValue:u,maxValue:m,fieldType:c}=e,p=await f({field:e.field,valueExpression:e.valueExpression,normalizationType:s,normalizationField:r,normalizationTotal:e.normalizationTotal,viewInfoParams:e.viewInfoParams},i),d=t({normalizationType:s,normalizationField:r,minValue:u,maxValue:m}),v="string"===c?n({values:p,supportsNullCount:d}):o({values:p,minValue:u,maxValue:m,useSampleStdDev:!s,supportsNullCount:d});return l(v,"date"===c)}async function f(t,n){if(!n)return[];const o=t.field,l=t.valueExpression,u=t.normalizationType,f=t.normalizationField,m=t.normalizationTotal,c=[],p=t.viewInfoParams;let d=null,v=null;if(l){if(!r){const{arcadeUtils:e}=await a();r=e}d=r.createFunction(l),v=p&&r.getViewInfo({viewingMode:p.viewingMode,scale:p.scale,spatialReference:new e(p.spatialReference)})}return n.forEach((a=>{const e=a.attributes;let t;if(l){const e=r.createExecContext(a,v);t=r.executeFunction(d,e)}else e&&(t=e[o]);if(u&&i(t)){const a=e&&parseFloat(e[f]);t=s(t,u,a,m)}c.push(t)})),c}export{f as getDataValues,u as summaryStatistics};
//# sourceMappingURL=statsWorker.649f0a3a.js.map
