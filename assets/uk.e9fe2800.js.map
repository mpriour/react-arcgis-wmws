{"version":3,"file":"uk.e9fe2800.js","sources":["../../node_modules/moment/locale/uk.js"],"sourcesContent":["//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                    '_'\n                ),\n                accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                    '_'\n                ),\n                genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                    '_'\n                ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n            ? 'genitive'\n            : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural,\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: 'годину',\n            hh: relativeTimeWithPlural,\n            d: 'день',\n            dd: relativeTimeWithPlural,\n            M: 'місяць',\n            MM: relativeTimeWithPlural,\n            y: 'рік',\n            yy: relativeTimeWithPlural,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    return uk;\n\n})));\n"],"names":["global","this","moment2","number","withoutSuffix","key","num","forms","ss","mm","hh","dd","MM","yy","split","str","hours","defineLocale","months","format","standalone","monthsShort","weekdays","m","nominative","accusative","genitive","slice","concat","test","day","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","processHoursFunction","nextDay","lastDay","nextWeek","lastWeek","call","sameElse","relativeTime","future","past","s","relativeTimeWithPlural","h","d","M","y","meridiemParse","isPM","input","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy","factory","require","require$$0","moment"],"mappings":"gWAKYA,iBAAAA,EAKVC,EAAO,SAAUC,cAYiBC,EAAQC,EAAeC,OARjCC,EACdC,QAgBQ,MAARF,EACOD,EAAgB,UAAY,UACpB,MAARC,EACAD,EAAgB,SAAW,SAE3BD,EAAS,KAtBFG,GAsB6BH,EArB3CI,EAQS,CACTC,GAAIJ,EAAgB,yBAA2B,yBAC/CK,GAAIL,EAAgB,yBAA2B,yBAC/CM,GAAIN,EAAgB,sBAAwB,sBAC5CO,GAAI,gBACJC,GAAI,wBACJC,GAAI,kBAOgCR,GArBvBS,MAAM,KAChBR,EAAM,IAAO,GAAKA,EAAM,KAAQ,GACjCC,EAAM,GACND,EAAM,IAAM,GAAKA,EAAM,IAAM,MAAY,IAAM,IAAMA,EAAM,KAAO,IAClEC,EAAM,GACNA,EAAM,eAiDcQ,UACnB,kBACIA,EAAM,KAAwB,UAAZC,QAAiB,IAAM,IAAM,QAIrDd,EAAOe,aAAa,KAAM,CAC/BC,OAAQ,CACJC,OAAQ,yFAAyFL,MAC7F,KAEJM,WAAY,iGAAiGN,MACzG,MAGRO,YAAa,yDAAyDP,MAClE,KAEJQ,kBAhDyBC,EAAGJ,OACxBG,EAAW,CACPE,WAAY,0DAA0DV,MAClE,KAEJW,WAAY,0DAA0DX,MAClE,KAEJY,SAAU,4DAA4DZ,MAClE,aAKF,IAANS,EACOD,aACFK,MAAM,EAAG,GACTC,OAAON,aAAuBK,MAAM,EAAG,IAE3CJ,EASED,EALI,qBAAqBO,KAAKV,GAC/B,aACA,sCAAsCU,KAAKV,GAC3C,WACA,cACoBI,EAAEO,OARjBR,cA6BXS,cAAe,uBAAuBjB,MAAM,KAC5CkB,YAAa,uBAAuBlB,MAAM,KAC1CmB,eAAgB,CACZC,GAAI,QACJC,IAAK,WACLC,EAAG,aACHC,GAAI,iBACJC,IAAK,wBACLC,KAAM,+BAEVC,SAAU,CACNC,QAASC,EAAqB,cAC9BC,QAASD,EAAqB,YAC9BE,QAASF,EAAqB,WAC9BG,SAAUH,EAAqB,cAC/BI,SAAU,kBACE7C,KAAK6B,YACJ,OACA,OACA,OACA,SACMY,EAAqB,oBAAoBK,KAAK9C,WACpD,OACA,OACA,SACMyC,EAAqB,qBAAqBK,KAAK9C,QAGlE+C,SAAU,KAEdC,aAAc,CACVC,OAAQ,QACRC,KAAM,UACNC,EAAG,kBACH5C,GAAI6C,EACJ9B,EAAG8B,EACH5C,GAAI4C,EACJC,EAAG,SACH5C,GAAI2C,EACJE,EAAG,OACH5C,GAAI0C,EACJG,EAAG,SACH5C,GAAIyC,EACJI,EAAG,MACH5C,GAAIwC,GAGRK,cAAe,wBACfC,KAAM,SAAUC,SACL,iBAAiB/B,KAAK+B,IAEjCC,SAAU,SAAUC,EAAMC,EAAQC,UAC1BF,EAAO,EACA,OACAA,EAAO,GACP,QACAA,EAAO,GACP,MAEA,UAGfG,uBAAwB,iBACxBC,QAAS,SAAU/D,EAAQgE,UACfA,OACC,QACA,QACA,UACA,QACA,WACMhE,EAAS,SACf,WACMA,EAAS,qBAETA,IAGnBiE,KAAM,CACFC,IAAK,EACLC,IAAK,KAhKyBC,CAAb,mBAAZC,EAAiCC,UAEvCzE,EAAO0E"}