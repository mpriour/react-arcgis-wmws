{"version":3,"file":"ElevationQuery.d277c3a2.js","sources":["../../node_modules/@arcgis/core/layers/support/ElevationTile.js","../../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.21/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as a}from\"../../core/maybe.js\";class e{constructor(a,e=null){if(this.tile=a,t(e)){const t=a.extent;this.samplerData={pixelData:e.values,width:e.width,height:e.height,safeWidth:.99999999*(e.width-1),noDataValue:e.noDataValue,dx:(e.width-1)/(t[2]-t[0]),dy:(e.width-1)/(t[3]-t[1]),x0:t[0],y1:t[3]}}}sample(t,e){if(a(this.samplerData))return;const{safeWidth:s,width:h,pixelData:l,noDataValue:o,dx:r,dy:n,y1:d,x0:u}=this.samplerData,f=i(n*(d-e),0,s),c=i(r*(t-u),0,s),p=Math.floor(f),x=Math.floor(c),D=p*h+x,m=D+h,w=l[D],y=l[m],V=l[D+1],g=l[m+1];if(w!==o&&y!==o&&V!==o&&g!==o){const t=c-x,a=w+(V-w)*t;return a+(y+(g-y)*t-a)*(f-p)}}}function i(t,a,e){return t<a?a:t>e?e:t}export{e as ElevationTile,e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.21/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{isSome as i,isNone as o}from\"../../core/maybe.js\";import{whenOrAbort as s,throwIfAbortError as l,eachAlways as n}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as a}from\"../../core/unitUtils.js\";import r from\"../../geometry/Multipoint.js\";import c from\"../../geometry/Point.js\";import u from\"../../geometry/Polyline.js\";import{initializeProjection as h,project as p}from\"../../geometry/projection.js\";import{fromExtent as m,create as f,contains as d}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await h([{source:l,dest:n}],{signal:s}),t=p(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>m(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=o):e.length&&(l.push(s[c]),n.push(c))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await h([{source:i.spatialReference,dest:l}],{signal:o}),s=p(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const o=e.x,s=e.y;(o<i.xmin||o>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/a(e.spatialReference);let o=e.lods[0],s=0;for(let l=1;l<e.lods.length;l++){const t=e.lods[l];Math.abs(t.resolution-i)<Math.abs(o.resolution-i)&&(o=t,s=l)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,o){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:o})))),o);else if(await this._populateElevationTiles(e,o),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,o)}}async _populateElevationTiles(e,t){const o=e.getTilesToFetch(),l={},a=e.options.cache,r=e.options.noDataValue,c=o.map((async o=>{const s=`${e.layer.uid}:${o.id}:${r}`,n=i(a)?a.get(s):null,c=i(n)?n:await e.layer.fetchTile(o.level,o.row,o.col,{noDataValue:r,signal:t});i(a)&&a.put(s,c),l[o.id]=new T(o,c)}));await s(n(c),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const o=t.layer.tilemapCache;if(!o)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const s={id:null,level:0,row:0,col:0,extent:f()},n=await e(o.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1===n.ok?l(n.error):a[t.id]=s}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const o=t.elevationTile;let s=e.options.noDataValue;if(o){const e=o.sample(t.x,t.y);i(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=a(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await h([{source:this.spatialReference,dest:e}],{signal:t});const i=new r({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new c(t[0].x,t[0].y,t[0].z,t[0].m,i):new c(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new r({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new u({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(o(i))return-1;for(let o=t.lods.length-1;o>=0;o--){const s=t.lods[o],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(i.width/l)*Math.ceil(i.height/n)<=e)return o}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const l of e)i[l.id]?t&&t(l):(i[l.id]=l,o.push(l));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(d(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.extent;if(o(t))return;const i=this.layer.tileInfo,s=i.lods[e],l=i.tileAt(s.level,t.xmin,t.ymin),n=s.resolution*i.size[0],a=s.resolution*i.size[1],r=Math.ceil((t.xmax-l.extent[0])/n),c=Math.ceil((t.ymax-l.extent[1])/a);for(let o=0;o<c;o++)for(let e=0;e<r;e++){const t={id:null,level:l.level,row:l.row-o,col:l.col+e};i.updateTileInfo(t),this._tileIsMasked(t)||this.candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>d(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{v as ElevationQuery,x as GeometryDescriptor,v as default,E as getFinestLodIndex};\n"],"names":["constructor","a2","e2","this","tile","t","t2","extent","samplerData","pixelData","values","width","height","safeWidth","noDataValue","dx","dy","x0","y1","sample","a","s2","h","l","o","r2","n","d2","u2","f","i","c","p","Math","floor","x2","D","m2","w2","y","V","g2","i2","ignoreInvisibleLayers","filter","e3","visible","slice","length","s","x","fromGeometry","returnSampleInfo","__spreadProps","R","query","_queryAllContinue","geometry","export","sampleInfo","type","__spreadValues","w","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","_createSampler","_createSamplerAllContinue","tileInfo","equals","source","dest","_","elevationTiles","layer","options","pop","samplers","map","m","concat","coordinates","i3","demResolution","push","clone","forEach","z","project","outSpatialReference","_extractSampleInfo","elevationTile","wkid","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","e","T","outsideExtentTile","fullExtent","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","lods","t3","abs","resolution","E","minDemResolution","_selectTilesFinestContiguousAt","tilemapCache","getTilesToFetch","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","cache","r","async","o2","uid","id","get","c2","fetchTile","put","populateElevationTiles","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","n2","fetchAvailabilityUpsample","ok","error","remapTiles","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","lodAt","_exporter","_cloneCoordinate","points","s3","hasZ","hasM","spatiaReference","paths","l2","u","g","tileAt","some","candidateTiles","fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","min","_selectCandidateTilesCoveringExtentAt","size","ceil","clear","add","_uniqueNonOverlappingTiles","has","sort","d","updateTileInfo","_tileIsMasked","findIndex"],"mappings":"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"}