import{ex as e,c7 as t,cI as s}from"./vendor.7103ff48.js";import{x as r}from"./Bitmap.8c3290a1.js";import{G as i}from"./brushes.b64b90a9.js";import{I as a}from"./Utils.8f00ae04.js";import{o as n}from"./TileContainer.555234dd.js";class o extends e{constructor(e,t,s,i,a,n=null){super(e,t,s,i,a),this.bitmap=new r(n,"standard",!1),this.bitmap.coordScale=[i,a],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(e){super.beforeRender(e),this.bitmap.beforeRender(e)}afterRender(e){super.afterRender(e),this.bitmap.afterRender(e)}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:t(),tileMat3:t()}}setTransform(e,t){super.setTransform(e,t),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}class d extends n{get requiresDedicatedFBO(){return this.children.some((e=>"additive"===e.bitmap.blendFunction))}createTile(e){const t=this._tileInfoView.getTileBounds(s(),e),[r,i]=this._tileInfoView.tileInfo.size;return new o(e,t[0],t[3],r,i)}destroyTile(){}prepareRenderPasses(e){const t=e.registerRenderPass({name:"bitmap (tile)",brushes:[i.bitmap],target:()=>this.children.map((e=>e.bitmap)),drawPhase:a.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===a.MAP&&super.doRender(e)}}export{d as n};
//# sourceMappingURL=BitmapTileContainer.79d2ec63.js.map
