import{bb as e,F as t,G as i,b8 as s,H as a,bq as r,nT as o,J as n,P as h,B as l,bv as p,bJ as d,D as c,N as u,bt as m,mt as y,ih as g}from"./vendor.7103ff48.js";import{l as v}from"./LayerView2D.3bec42c6.js";import{b as x}from"./rasterProjectionHelper.d2fb66f4.js";import{m as w}from"./vectorFieldUtils.7ace4039.js";import{n as f}from"./Container.f525a10f.js";import{r as b}from"./GraphicContainer.aef7333c.js";import{e as j}from"./BaseGraphicContainer.8758663f.js";import{d as _}from"./pixelUtils.5eddfa69.js";import{t as V}from"./BitmapContainer.f66ff0c9.js";import{i as R}from"./Bitmap.8c3290a1.js";import{S as q}from"./ExportStrategy.b9685efa.js";import{u as E}from"./ImageryLayerView.444cfe29.js";import{a as P}from"./RefreshableLayerView.7b9ab281.js";import"./Utils.8f00ae04.js";import"./projectionSupport.c5c55ada.js";import"./json.62026198.js";import"./Matcher.4dbcd4b5.js";import"./definitions.e5e12ce7.js";import"./ComputedAttributeStorage.c6915def.js";import"./FeatureSetReader.bfb25a2d.js";import"./centroid.f07ef5b9.js";import"./visualVariablesUtils.7196204b.js";import"./visualVariablesUtils.f42dea16.js";import"./tileUtils.2adb3da0.js";import"./TileClipper.507f8905.js";import"./GeometryUtils.1bcb906c.js";import"./schemaUtils.c28cd36f.js";import"./MaterialKey.8df623c8.js";import"./CIMSymbolHelper.da5834c9.js";import"./Rect.db562a93.js";import"./BidiEngine.af5bfcbd.js";import"./MD5.86afbcc5.js";import"./cimAnalyzer.07de9cca.js";import"./FeatureContainer.c8d6e93f.js";import"./TileContainer.555234dd.js";import"./WGLContainer.6f073475.js";import"./brushes.b64b90a9.js";import"./ShaderCompiler.6905b522.js";import"./GraphicsView.45ff2c67.js";import"./popupUtils.99eeb504.js";const U=e.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let D=class extends r{constructor(){super(...arguments),this.attached=!1,this.container=new f,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this._dataParameters={exportParametersVersion:0,extents:[],tileResolution:0,time:""},this.type="Graphics",this._graphics=new o,this._updateGraphics=n((async(e,t)=>{if(!e.stationary)return;const i=e.state,s=new h({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),[a,r]=e.state.size,o={};o.timeExtent=this.timeExtent,o.requestAsImageElement=!1,o.signal=t,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(s.spatialReference));const n="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,p=await this._projectFullExtentPromise,{extent:d,resolution:c,width:u,height:m}=w(s,a,r,n,p),y=await this.layer.fetchImage(d,u,m,o),g=this.layer.renderer;if("vector-field"===g.type){const t=y.pixelData.pixelBlock,i=g.sizeVariables[0];!l(t)||i.minDataValue&&i.maxDataValue||(i.minDataValue=t.statistics[0].minValue,i.maxDataValue=t.statistics[0].maxValue),this._pixelData={extent:d,pixelBlock:t};const s=d.clone().normalize(),a={exportParametersVersion:this.layer.exportImageServiceParameters.version,extents:s,tileResolution:c,time:JSON.stringify(this.timeExtent||"")},r=this._canReuseVectorFieldData(a)?this._dataParameters.extents:[],o=await g.getGraphicsFromPixelData(y.pixelData,"vector-uv"===this.layer.rasterInfo.dataType,r);if(r.length){const e=this._graphics.items.filter((e=>l(e.geometry)&&r.some((t=>t.intersects(e.geometry)))&&!s.some((t=>t.intersects(e.geometry)))));this._graphics.removeMany(e),this._graphics.addMany(o)}else this._graphics.set("items",o);this._graphicsView.update(e),this._dataParameters=a}}))}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this._updateGraphics(e).catch((e=>{p(e)||U.error(e)}))}hitTest(e,t){const i=this.view.toMap(d(e,t));return Promise.resolve(new c({attributes:{},geometry:i,layer:this.layer}))}attach(){this._graphicsView=new j({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme)}),this.attached=!0}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}async _getProjectedFullExtent(e){try{return await x(this.layer.fullExtent,e)}catch(t){try{const t=(await u(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?h.fromJSON(t):null}catch{return null}}}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,i=this._dataParameters.time===e.time,s=Math.abs(this._dataParameters.tileResolution-e.tileResolution)/e.tileResolution<.01,a=this._dataParameters.extents.some((t=>e.extents.some((e=>t.intersects(e)))));return t&&i&&s&&a}};t([i()],D.prototype,"attached",void 0),t([i()],D.prototype,"container",void 0),t([i()],D.prototype,"layer",void 0),t([i()],D.prototype,"timeExtent",void 0),t([i()],D.prototype,"view",void 0),t([i()],D.prototype,"updateRequested",void 0),t([i()],D.prototype,"updating",null),t([s({graphics:"Graphics"})],D.prototype,"type",void 0),D=t([a("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],D);var C=D;const I=e.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let S=class extends r{constructor(){super(...arguments),this.attached=!1,this.container=new f,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{p(e)||I.error(e)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e,t){const i=this.view.toMap(d(e,t));return Promise.resolve(new c({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new V,this.strategy=new q({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),s=_(i,t);return l(s)?{extent:s.extent,pixelBlock:s.pixelBlock}:null}return null}_fetchImage(e,t,i,s){return(s=s||{}).timeExtent=this.timeExtent,s.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,s).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:s.signal}).then((t=>{const i=new R(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return i.filter=e=>this.layer.applyFilter(e),i}))))}};t([i()],S.prototype,"attached",void 0),t([i()],S.prototype,"container",void 0),t([i()],S.prototype,"layer",void 0),t([i()],S.prototype,"strategy",void 0),t([i()],S.prototype,"timeExtent",void 0),t([i()],S.prototype,"view",void 0),t([i()],S.prototype,"updateRequested",void 0),t([i()],S.prototype,"updating",null),t([s({imagery:"Imagery"})],S.prototype,"type",void 0),S=t([a("esri.views.2d.layers.imagery.ImageryView2D")],S);var B=S;let M=class extends(E(P(v(g)))){constructor(){super(...arguments),this._exportImageVersion=-1}initialize(){this.handles.add([m(this,["layer.blendMode","layer.effects"],(e=>{this.subview&&(this.subview.container.blendMode=e)}),!0),m(this,["layer.effect"],(e=>{this.subview&&(this.subview.container.effect=e)}),!0)])}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return!(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?Promise.resolve(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([m(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate()})),this.layer.on("redraw",(()=>this.subview.redraw())),y(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||!this.suspended&&this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var i,s;"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t||(null==(i=this.subview)||i.uninstall(this.container),null==(s=this.subview)||s.destroy(),this.subview="Imagery"===t?new B({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new C({layer:this.layer,view:this.view,timeExtent:this.timeExtent}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode,this.subview.container.effect=this.layer.effect),this.requestUpdate()}};t([i()],M.prototype,"pixelData",null),t([i({readOnly:!0})],M.prototype,"updating",null),t([i()],M.prototype,"subview",void 0),M=t([a("esri.views.2d.layers.ImageryLayerView2D")],M);var k=M;export{k as default};
//# sourceMappingURL=ImageryLayerView2D.397fda43.js.map
