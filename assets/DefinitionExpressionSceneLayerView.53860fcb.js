import{bb as i,F as e,G as r,H as s}from"./vendor.7103ff48.js";import{WhereClause as n}from"./WhereClause.fd3015dd.js";import{i as o}from"./I3SUtil.fa3bb0fc.js";const t=i.getLogger("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView"),a=i=>{let a=class extends i{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=i=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&t.error("Error while evaluating definitionExpression: "+i),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&t.error("Further errors are ignored")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const i=n.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!i.isStandardized)return t.error("definitionExpression is using non standard function"),null;const e=[],r=i.fieldNames;return o(r,this.i3slayer.fields,{missingFields:e}),e.length>0?(t.error(`definitionExpression references unknown fields: ${e.join(", ")}`),null):(this._definitionExpressionErrors=0,i)}catch(i){return t.error("Failed to parse definitionExpression: "+i),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:null}_evaluateClause(i,e){try{return i.testFeature(e)}catch(r){return this.logError(r),!1}}_addDefinitionExpressionToQuery(i){if(!this.parsedDefinitionExpression)return i;const e=this.i3slayer.definitionExpression,r=i.clone();return r.where?r.where=`(${e}) AND (${r.where})`:r.where=e,r}};return e([r()],a.prototype,"i3slayer",void 0),e([r({readOnly:!0})],a.prototype,"parsedDefinitionExpression",null),e([r({readOnly:!0})],a.prototype,"definitionExpressionFields",null),a=e([s("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],a),a};export{a as p};
//# sourceMappingURL=DefinitionExpressionSceneLayerView.53860fcb.js.map
