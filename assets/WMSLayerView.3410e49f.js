import{F as e,G as t,k_ as r,H as o,z as s}from"./vendor.7103ff48.js";import{l as a}from"./ExportWMSImageParameters.4c82f1d3.js";const i=i=>{let p=class extends i{initialize(){this.exportImageParameters=new a({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:t}=this;if(!e)return Promise.reject(new s("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:r}=t;if(!r)return Promise.reject(new s("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:r}));const o=this.createFetchPopupFeaturesQuery(e);if(!o)return Promise.resolve([]);const{extent:a,width:i,height:p,x:n,y:m}=o;if(!(a&&i&&p))throw new s("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:i,height:p});const u=t.fetchFeatureInfo(a,i,p,n,m);return Promise.resolve(u?[u]:[])}};return e([t()],p.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],p.prototype,"exportImageVersion",null),e([t()],p.prototype,"layer",void 0),e([t(r)],p.prototype,"timeExtent",void 0),p=e([o("esri.layers.mixins.WMSLayerView")],p),p};export{i as a};
//# sourceMappingURL=WMSLayerView.3410e49f.js.map
