var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,o=(t,r,a)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a,n=(e,t)=>{for(var r in t||(t={}))i.call(t,r)&&o(e,r,t[r]);if(a)for(var r of a(t))s.call(t,r)&&o(e,r,t[r]);return e};import{bb as l,F as p,G as d,p5 as u,X as c,b3 as y,P as h,bk as m,bl as f,dU as v,H as g,J as w,p6 as S,au as b,B as x,p7 as I,p8 as _,p9 as O,af as j,z as N,N as R,ax as P,aA as A,pa as T,pb as E}from"./vendor.7103ff48.js";import{n as K}from"./I3SIndexInfo.27dc4373.js";const U=l.getLogger("esri.layers.mixins.SceneService"),L=e=>{let a=class extends e{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=w((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return c.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,a=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=a?new c(a):null}}readFullExtent(e,a,i){if(null!=e&&"object"==typeof e){const l=null==e.spatialReference?(s=n({},e),o={spatialReference:this._readSpatialReference(a)},t(s,r(o))):e;return h.fromJSON(l,i)}var s,o;const l=a.store,p=this._readSpatialReference(a);return null==p||null==l||null==l.extent||!Array.isArray(l.extent)||l.extent.some((e=>e<q))?null:new h({xmin:l.extent[0],ymin:l.extent[1],xmax:l.extent[2],ymax:l.extent[3],spatialReference:p})}readVersion(e,t){const r=t.store,a=null!=r.version?r.version.toString():"",i={major:Number.NaN,minor:Number.NaN,versionString:a},s=a.split(".");return s.length>=2&&(i.major=parseInt(s[0],10),i.minor=parseInt(s[1],10)),i}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return S(this.url,t.name);let a=t.name;if(!a&&this.url){const e=b(this.url);x(e)&&(a=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(a=r+" - "+a),I(a)}set url(e){const t=_({layer:this,url:e,nonStandardUrlAllowed:!1,logger:U});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,a){O(this,e,"layers",t,a)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=j(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=K(this.parsedUrl.path,this.rootNode,e,this.apiKey,U,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===(null==e?void 0:e.type)){var t,r;const a=e.rootIndex%e.pageSize,i=null==(t=e.rootPage)||null==(r=t.nodes)?void 0:r[a];if(null==i||null==i.obb||null==i.obb.center||null==i.obb.halfSize)throw new N("sceneservice:invalid-node-page","Invalid node page.");if(i.obb.center[0]<q||null==this.fullExtent||this.fullExtent.hasZ)return;const s=i.obb.halfSize,o=i.obb.center[2],n=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);this.fullExtent.zmin=o-n,this.fullExtent.zmax=o+n}else if("node"===(null==e?void 0:e.type)){var a;const t=null==(a=e.rootNode)?void 0:a.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<q)return;const r=t[2],i=t[3];this.fullExtent.zmin=r-i,this.fullExtent.zmax=r+i}}async _fetchService(e){if(null==this.url)throw new N("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await R(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await R(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const a=t.getTypeKeywords();for(const i of a)e.typeKeywords.push(i);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r=n(n({},F),t);let a=P.from(e);a||(U.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new N("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),a.id&&(a=a.clone(),a.id=null);const i=a.portal||A.getDefault();await this._ensureLoadBeforeSave(),a.type=M,a.portal=i;const s={origin:"portal-item",url:null,messages:[],portal:i,portalItem:a,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write(null,s)]};return await Promise.all(s.resources.pendingOperations),await this._validateAgainstJSONSchema(o,s,r),a.url=this.url,a.title||(a.title=this.title),this._updateTypeKeywords(a,r,1),await i._signIn(),await i.user.addItem({item:a,folder:r&&r.folder,data:o}),await T(this.resourceReferences,s,null),this.portalItem=a,E(s),s.portalItem=a,a}async _save(e){const t=n(n({},F),e);this.portalItem||(U.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new N("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==M&&(U.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+M),await Promise.reject(new N("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${M}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&j(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||A.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},a={layers:[this.write(null,r)]};return await Promise.all(r.resources.pendingOperations),await this._validateAgainstJSONSchema(a,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:a}),await T(this.resourceReferences,r,null),E(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let a=t.messages.filter((e=>"error"===e.type)).map((e=>new N(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(a=a.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||z){const t=(await import("./schemaValidator.9c51f91a.js")).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(U.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new N("sceneservice:schema-validation",e))).concat(a);throw new N("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(a.length>0)throw new N("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:a})}};return p([d(u)],a.prototype,"id",void 0),p([d({type:c})],a.prototype,"spatialReference",void 0),p([y("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],a.prototype,"readSpatialReference",null),p([d({type:h})],a.prototype,"fullExtent",void 0),p([y("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],a.prototype,"readFullExtent",null),p([d({readOnly:!0,type:m})],a.prototype,"heightModelInfo",void 0),p([d({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],a.prototype,"minScale",void 0),p([d({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],a.prototype,"maxScale",void 0),p([d({readOnly:!0})],a.prototype,"version",void 0),p([y("version",["store.version"])],a.prototype,"readVersion",null),p([d({type:String,json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),p([d({type:String,json:{read:!1}})],a.prototype,"sublayerTitleMode",void 0),p([d({type:String})],a.prototype,"title",void 0),p([y("portal-item","title")],a.prototype,"readTitlePortalItem",null),p([y("service","title",["name"])],a.prototype,"readTitleService",null),p([d({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],a.prototype,"layerId",void 0),p([d(f)],a.prototype,"url",null),p([v("url")],a.prototype,"writeUrl",null),p([d()],a.prototype,"parsedUrl",null),p([d({readOnly:!0})],a.prototype,"store",void 0),p([d({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],a.prototype,"rootNode",void 0),a=p([g("esri.layers.mixins.SceneService")],a),a},q=-1e38,z=!1,M="Scene Service",F={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{L as N};
//# sourceMappingURL=SceneService.80256ad0.js.map
