var e,t=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,a=(e,r,i)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[r]=i,l=(e,t)=>{for(var r in t||(t={}))n.call(t,r)&&a(e,r,t[r]);if(s)for(var r of s(t))o.call(t,r)&&a(e,r,t[r]);return e},u=(e,t)=>r(e,i(t));import{F as p,G as c,b3 as d,dU as m,b8 as h,H as y,aa as f,x as g,dV as v,b7 as R,h_ as w,bp as b,aL as x,pi as S,b4 as I,b5 as N,N as O,C as T,B as _,bB as j,b9 as F,k1 as P,Z as C,S as D,bx as M,aQ as A,bb as V,aT as J,P as z,pj as E,X as q,bl as L,e6 as Q,af as U,M as k,z as H,pk as B,pl as G,a1 as W,eQ as X,pm as $,pn as Y,po as K,aO as Z,D as ee,pp as te,nr as re,oU as ie,pq as se,o$ as ne,oV as oe,bd as ae,be as le,pr as ue,bc as pe,bf as ce,b as de,bi as me,jv as he,pd as ye,jy as fe,jz as ge}from"./vendor.7103ff48.js";import{n as ve,a as Re,o as we,i as be,d as xe,b as Se,p as Ie,k as Ne,S as Oe,j as Te,X as _e,t as je}from"./rasterRendererHelper.4ad10a61.js";import{f as Fe,n as Pe,l as Ce,N as De,T as Me,v as Ae}from"./RasterSymbolizer.fba0606b.js";import{u as Ve}from"./pixelUtils.5eddfa69.js";import{c as Je}from"./vectorFieldUtils.7ace4039.js";import"./LercCodec.1de5a3c5.js";const ze=new Set(["raster","raster2","dem","fillraster"]),Ee=new Set(["rasters"]),qe=e=>e&&e.rasterFunction?Be.fromJSON(e):e,Le=e=>e&&e instanceof Be?e.toJSON():e,Qe=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,Ue=e=>Qe(e)?new Be(e):e;var ke,He;(He=ke||(ke={}))[He.MOSAIC=0]="MOSAIC",He[He.GROUP=1]="GROUP",He[He.ITEM=2]="ITEM";let Be=e=class extends f{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some((t=>ze.has(t.toLowerCase())&&Qe(e[t])))||t.some((t=>Ee.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some((e=>Qe(e)))))){e=g(e);for(const r of t)ze.has(r.toLowerCase())?e[r]=Ue(e[r]):Ee.has(r.toLowerCase())&&Array.isArray(e[r])&&(e[r]=e[r].map((e=>Ue(e))))}}this._set("functionArguments",e)}readFunctionArguments(e,t){return(e=>{if(null==e)return null;e=g(e);const t={};for(const r of Object.keys(e))ze.has(r.toLowerCase())?t[r]=qe(e[r]):Ee.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(qe):t[r]=e[r];return t})(t.arguments||t.rasterFunctionArguments)}writeFunctionArguments(e,t,r){const i={};for(const s of Object.keys(e))ze.has(s.toLowerCase())?i[s]=Le(e[s]):Ee.has(s.toLowerCase())&&Array.isArray(e[s])?i[s]=e[s].map(Le):i[s]=Le(e[s]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return ke[e]}writeFunctionType(e,t,r){t[r]=ke[e]}clone(){return new e({functionName:this.functionName,functionArguments:g(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};p([c({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],Be.prototype,"functionArguments",null),p([d("functionArguments",["rasterFunctionArguments","arguments"])],Be.prototype,"readFunctionArguments",null),p([m("functionArguments")],Be.prototype,"writeFunctionArguments",null),p([c({json:{type:String,write:{target:"rasterFunction"}}})],Be.prototype,"functionName",void 0),p([d("functionName",["rasterFunction","rasterFunctionInfos","name"])],Be.prototype,"readFunctionName",null),p([m("functionName")],Be.prototype,"writeFunctionName",null),p([h({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),c({json:{default:"unknown"}})],Be.prototype,"outputPixelType",void 0),p([c({type:String,json:{read:!0,write:!0}})],Be.prototype,"variableName",void 0),p([c({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],Be.prototype,"description",void 0),p([c({json:{origins:{"web-document":{read:!1,write:!1}}}})],Be.prototype,"functionType",void 0),p([d("functionType")],Be.prototype,"readFunctionType",null),p([m("functionType")],Be.prototype,"writeFunctionType",null),p([c({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],Be.prototype,"functionDefinition",void 0),p([c({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],Be.prototype,"thumbnail",void 0),Be=e=p([y("esri.layers.support.RasterFunction")],Be);var Ge=Be;const We={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},Xe={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},$e=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Ye(e){return $e.has(e.type)}function Ke(e,t){if(!e||!t)return g(e||t);const r=g(e);return"none"!==t.functionName.toLowerCase()&&(et(r.functionArguments).Raster=t),r}function Ze(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new Ge;r.functionName="Stretch";const i=tt[ve.toJSON(e.stretchType)],s="u8",n={StretchType:i,Statistics:st(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(n.Min=e.outputMin),null!=e.outputMax&&(n.Max=e.outputMax),i===tt.standardDeviation?(n.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=s):i===tt.percentClip?(n.MinPercent=e.minPercent,n.MaxPercent=e.maxPercent,r.outputPixelType=s):i===tt.minMax?r.outputPixelType=s:i===tt.sigmoid&&(n.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=n,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,s=new Ge,n=Pe(i);return n?s.functionArguments={colorRamp:n}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?s.functionArguments={colorRamp:e.colorRamp.toJSON()}:s.functionArguments={Colormap:Fe(i,256)},s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=r,s}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],s=[],n=[],o=1e-6,{pixelType:a,rasterAttributeTable:l}=t,u=l&&l.features,p=it(l);if(u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let s;i.a&&u.forEach((o=>{s=o.attributes[e.field],(s>=t.minValue&&s<t.maxValue||r===e.classBreakInfos.length-1&&s>=t.minValue)&&n.push([o.attributes[p],i.r,i.g,i.b])}))}));const t=a?rt(n,a):n,r=new Ge;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const a=e.symbol&&e.symbol.color;a.a?(0===t?r.push(e.minValue,e.maxValue+o):r.push(e.minValue+o,e.maxValue+o),i.push(t),n.push([t,a.r,a.g,a.b])):s.push(e.minValue,e.maxValue)}));const c=a?rt(n,a):n,d=new Ge;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:s},d.variableName="Raster";const m=new Ge;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},m}(e,t);case"unique-value":return function(e,t){var r;const i=[],{pixelType:s,rasterAttributeTable:n}=t,o=n&&n.features,a=it(n),l=null==(r=e.defaultSymbol)?void 0:r.color;let u=!1;if(e.uniqueValueInfos&&(o?o.forEach((t=>{var r;const s=null==(r=e.uniqueValueInfos.find((r=>String(t.attributes[e.field])===String(r.value))))?void 0:r.symbol.color;s?i.push([t.attributes[a],s.r,s.g,s.b]):l&&i.push([t.attributes[a],l.r,l.g,l.b])})):e.uniqueValueInfos.forEach((e=>{var t;if(null==(t=e.symbol.color)||!t.a)return;const r=e.symbol.color;isNaN(+e.value)?u=!0:i.push([+e.value,r.r,r.g,r.b])}))),u)return null;const p=s&&i.length>0?rt(i,s):i,c=new Ge;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=p,c.variableName="Raster",c}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,s=i?rt(r,i):r,n=new Ge;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=s,n}(e,t);case"vector-field":return function(e,t){const r=new Ge;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:s}=t,n="vector-uv"===i;let o,a;s&&2===s.length&&(o=s.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),a=s.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new v,c={magnitudeBandID:o,directionBandID:a,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Xe[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=c,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new Ge;const r=new Ge;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,n={HillshadeType:i,SlopeType:s,ZFactor:e.zFactor};return 0===i&&(n.Azimuth=e.azimuth,n.Altitude=e.altitude),3===s&&(n.PSPower=e.pixelSizePower,n.PSZFactor=e.pixelSizeFactor),r.functionArguments=n,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",n.Colormap=Fe(e.colorRamp,256)),r}(e,t)}}function et(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?et(t.functionArguments):e}const tt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function rt(e,t){const r=We[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function it(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function st(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}var nt;const ot=R()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),at=R()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let lt=nt=class extends f{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return at.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),s=r||(i?ot.toJSON(i):null);return ot.fromJSON(s)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new nt({ascending:this.ascending,itemRenderingRule:g(this.itemRenderingRule),lockRasterIds:g(this.lockRasterIds),method:this.method,multidimensionalDefinition:g(this.multidimensionalDefinition),objectIds:g(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:g(this.viewpoint),where:this.where})}};p([c({type:Boolean,json:{write:!0}})],lt.prototype,"ascending",void 0),p([d("ascending",["ascending","sortAscending"])],lt.prototype,"readAscending",null),p([c({type:Ge,json:{write:!0}})],lt.prototype,"itemRenderingRule",void 0),p([c({type:[w],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],lt.prototype,"lockRasterIds",void 0),p([c({type:String,json:{type:at.jsonValues,write:{target:"mosaicMethod",writer:at.write}}})],lt.prototype,"method",void 0),p([d("method",["mosaicMethod","defaultMosaicMethod"])],lt.prototype,"readMethod",null),p([c({type:[Re],json:{write:!0}})],lt.prototype,"multidimensionalDefinition",void 0),p([c({type:[w],json:{name:"fids",write:!0}})],lt.prototype,"objectIds",void 0),p([c({json:{type:ot.jsonValues,read:{reader:ot.read},write:{target:"mosaicOperation",writer:ot.write}}})],lt.prototype,"operation",void 0),p([d("operation",["mosaicOperation","mosaicOperator"])],lt.prototype,"readOperation",null),p([c({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],lt.prototype,"sortField",void 0),p([c({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],lt.prototype,"sortValue",void 0),p([b("sortValue")],lt.prototype,"castSortValue",null),p([c({type:x,json:{write:!0}})],lt.prototype,"viewpoint",void 0),p([c({type:String,json:{write:!0}})],lt.prototype,"where",void 0),lt=nt=p([y("esri.layers.support.MosaicRule")],lt);var ut=lt;let pt=class extends f{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new ut({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:s}=t;return s&&Ye(s)?Ke(Ze(s,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;return Ke(new Ge({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}),e)}};p([c()],pt.prototype,"layer",void 0),p([c({json:{write:!0}})],pt.prototype,"adjustAspectRatio",void 0),p([m("adjustAspectRatio")],pt.prototype,"writeAdjustAspectRatio",null),p([c({json:{write:!0}}),S("layer.bandIds")],pt.prototype,"bandIds",void 0),p([c({json:{write:!0}})],pt.prototype,"compression",void 0),p([c({json:{write:!0}}),S("layer.compressionQuality")],pt.prototype,"compressionQuality",void 0),p([m("compressionQuality")],pt.prototype,"writeCompressionQuality",null),p([c({json:{write:!0}}),S("layer.compressionTolerance")],pt.prototype,"compressionTolerance",void 0),p([m("compressionTolerance")],pt.prototype,"writeCompressionTolerance",null),p([c({json:{write:!0}}),S("layer.format")],pt.prototype,"format",void 0),p([c({type:String,json:{read:{reader:we.read},write:{writer:we.write}}}),S("layer.interpolation")],pt.prototype,"interpolation",void 0),p([c({json:{write:!0}}),S("layer.noData")],pt.prototype,"noData",void 0),p([c({type:String,json:{read:{reader:be.read},write:{writer:be.write}}}),S("layer.noDataInterpretation")],pt.prototype,"noDataInterpretation",void 0),p([c({json:{write:!0}})],pt.prototype,"pixelType",void 0),p([c({json:{write:!0}})],pt.prototype,"lercVersion",void 0),p([m("lercVersion")],pt.prototype,"writeLercVersion",null),p([c({type:Number})],pt.prototype,"version",null),p([c({json:{write:!0}})],pt.prototype,"mosaicRule",null),p([c({json:{write:!0}})],pt.prototype,"renderingRule",null),pt=p([y("esri.layers.mixins.ExportImageServiceParameters")],pt);let ct=class extends f{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};p([c({json:{write:!0}})],ct.prototype,"catalogItemVisibilities",void 0),p([c({type:I,json:{write:!0}})],ct.prototype,"catalogItems",void 0),p([c({type:x,json:{write:!0}})],ct.prototype,"location",void 0),p([c({json:{write:!0}})],ct.prototype,"name",void 0),p([c({json:{write:!0}})],ct.prototype,"objectId",void 0),p([c({json:{write:!0}})],ct.prototype,"processedValues",void 0),p([c({json:{write:!0}})],ct.prototype,"properties",void 0),p([c({json:{write:!0}})],ct.prototype,"value",void 0),ct=p([y("esri.rest.support.ImageIdentifyResult")],ct);var dt=ct;let mt=class extends f{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};p([c({json:{write:!0}})],mt.prototype,"attributes",void 0),p([c({type:x,json:{write:!0}})],mt.prototype,"location",void 0),p([c({json:{write:!0}})],mt.prototype,"locationId",void 0),p([c({json:{write:!0}})],mt.prototype,"rasterId",void 0),p([c({json:{write:!0}})],mt.prototype,"resolution",void 0),p([c({json:{write:!0}})],mt.prototype,"pixelValue",void 0),mt=p([y("esri.rest.support.ImageSample")],mt);var ht=mt;let yt=class extends f{constructor(){super(...arguments),this.samples=null}};p([c({type:[ht],json:{write:!0}})],yt.prototype,"samples",void 0),yt=p([y("esri.rest.support.ImageSampleResult")],yt);var ft,gt=yt;function vt(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}async function Rt(e,t,r){const i=N(e),s=t.geometry?[t.geometry]:[],n=await T(s),o=t.toJSON();vt(o);const a=n&&n[0];_(a)&&(o.geometry=a.toJSON());const p=j(l(u(l({},i.query),{f:"json"}),o));return F(p,r)}async function wt(e,t,r){const i=N(e),s=t.geometry?[t.geometry]:[];return T(s).then((e=>{const s=t.toJSON(),n=e&&e[0];_(n)&&(s.geometry=JSON.stringify(n.toJSON()));const o=j(l(u(l({},i.query),{f:"json"}),s)),a=F(o,r);return O(i.path+"/identify",a)})).then((e=>dt.fromJSON(e.data)))}let bt=ft=class extends f{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}clone(){return new ft(g({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};p([c({types:P,json:{read:C}})],bt.prototype,"geometry",void 0),p([m("geometry")],bt.prototype,"writeGeometry",null),p([c({type:ut,json:{write:!0}})],bt.prototype,"mosaicRule",void 0),p([c({type:Ge,json:{write:!0}})],bt.prototype,"renderingRule",void 0),p([c({type:x,json:{write:!0}})],bt.prototype,"pixelSize",void 0),p([c({json:{write:!0}})],bt.prototype,"raster",void 0),p([c({type:D,json:{read:{source:"time"},write:{target:"time"}}})],bt.prototype,"timeExtent",void 0),bt=ft=p([y("esri.rest.support.ImageHistogramParameters")],bt);var xt,St=bt;let It=xt=class extends f{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ut.fromJSON(u(l({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=Ge.fromJSON(u(l({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=_(e.start)?e.start.getTime():null,s=_(e.end)?e.end.getTime():null;t[r]=null!=i?null!=s?`${i},${s}`:`${i}`:null}}clone(){return new xt(g({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};p([c({json:{write:!0}})],It.prototype,"geometry",void 0),p([m("geometry")],It.prototype,"writeGeometry",null),p([c({type:ut,json:{write:!0}})],It.prototype,"mosaicRule",null),p([m("mosaicRule")],It.prototype,"writeMosaicRule",null),p([c({type:Ge,json:{write:!0}})],It.prototype,"renderingRule",null),p([m("renderingRule")],It.prototype,"writeRenderingRule",null),p([c({type:[Ge],json:{write:!0}})],It.prototype,"renderingRules",void 0),p([m("renderingRules")],It.prototype,"writeRenderingRules",null),p([c({type:x,json:{write:!0}})],It.prototype,"pixelSize",void 0),p([m("pixelSize")],It.prototype,"writePixelSize",null),p([c({type:Boolean,json:{write:!0}})],It.prototype,"returnGeometry",void 0),p([c({type:Boolean,json:{write:!0}})],It.prototype,"returnCatalogItems",void 0),p([c({type:Boolean,json:{write:!0}})],It.prototype,"returnPixelValues",void 0),p([c({type:Number,json:{write:!0}})],It.prototype,"maxItemCount",void 0),p([c({type:D,json:{write:{target:"time"}}})],It.prototype,"timeExtent",void 0),p([m("timeExtent")],It.prototype,"writeTimeExtent",null),p([c({json:{write:!0}})],It.prototype,"raster",void 0),p([c({json:{write:!0}})],It.prototype,"viewId",void 0),It=xt=p([y("esri.rest.support.ImageIdentifyParameters")],It);var Nt,Ot=It;let Tt=Nt=class extends f{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=M(e),t[r]=e.toJSON())}set locations(e){if(null!=e&&e.length){const t=new A({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new Nt(g({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};p([c({types:P,json:{read:C}})],Tt.prototype,"geometry",void 0),p([m("geometry")],Tt.prototype,"writeGeometry",null),p([c({type:String,json:{type:we.jsonValues,read:we.read,write:we.write}})],Tt.prototype,"interpolation",void 0),p([c({type:ut,json:{write:!0}})],Tt.prototype,"mosaicRule",void 0),p([c({type:[String],json:{write:!0}})],Tt.prototype,"outFields",void 0),p([c({type:x,json:{write:!0}})],Tt.prototype,"pixelSize",void 0),p([c({type:String,json:{write:!0}})],Tt.prototype,"raster",void 0),p([c({type:Boolean,json:{write:!0}})],Tt.prototype,"returnFirstValueOnly",void 0),p([c({type:Number,json:{write:!0}})],Tt.prototype,"sampleDistance",void 0),p([c({type:Number,json:{write:!0}})],Tt.prototype,"sampleCount",void 0),p([c({type:Number,json:{write:!0}})],Tt.prototype,"sliceId",void 0),p([c({type:D,json:{read:{source:"time"},write:{target:"time"}}})],Tt.prototype,"timeExtent",void 0),Tt=Nt=p([y("esri.rest.support.ImageSampleParameters")],Tt);var _t=Tt;const jt=V.getLogger("esri.layers.mixins.ArcGISImageService"),Ft=R()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Pt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ct=te(re,{min:0,max:255});const Dt=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new pt({layer:this}))}readDefaultServiceMosaicRule(e,t){return ut.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new Q(this.fields):null}set format(e){e&&Pt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ut.fromJSON(u(l({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){return ut.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new ut({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Ct(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?U(this.url):null}readRenderer(e,t,r){var i,s;const n=null==t||null==(i=t.layerDefinition)||null==(s=i.drawingInfo)?void 0:s.renderer,o=Ie(n,r);return null==o?null:("vector-field"===o.type&&t.symbolTileSize&&!n.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),Ye(o)||jt.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),o)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new J({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new J({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new J({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let s=this.fields?g(this.fields):[];s.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&s.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{s.push(new J({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(s.push(new J({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),s.push(new J({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=g(t);return r.name=e+t.name,r}));s=s.concat(t)}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=Ge.fromJSON(u(l({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?Ge.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?q.fromJSON(r):null}readPixelType(e){return Ft.fromJSON(e)||e}writePixelType(e,t,r){(k(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Ft.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this._symbolizer.bind(),await s.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const o=await s.symbolize(l({bandIds:n},e),t);r={extent:e.extent,pixelBlock:o}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize(l({bandIds:n},e))}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new H("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=B(St,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function(e,t,r){const i=await Rt(e,t,r),s=N(e),{data:n}=await O(`${s.path}/computeHistograms`,i);return{histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new H("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=B(St,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function(e,t,r){const i=await Rt(e,t,r),s=N(e),{data:n}=await O(`${s.path}/computeStatisticsHistograms`,i),{statistics:o}=n;return null!=o&&o.length&&o.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:o,histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return _(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new H("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return G(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return O(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new H("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):O(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>I.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=O(this.parsedUrl.path+"/"+e+"/info",l({query:this._getQueryParams()},t)).then((e=>e.data)),i=O(this.parsedUrl.path+"/"+e+"/info/keyProperties",l({query:this._getQueryParams()},t)).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const n=z.fromJSON(s[0].extent),o=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new Ce({bandCount:s[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new x({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:n.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:o,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await O(this.parsedUrl.path+"/"+e+"/info/ics",l({query:this._getQueryParams()},t)),i=r&&r.ics;if(!i)return;let s=null;try{s=(await O(this.parsedUrl.path+"/"+e+"/info",l({query:this._getQueryParams()},t))).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?O(this.parsedUrl.path+"/"+e+"/info/icstopixel",l({query:this._getQueryParams()},t)).then((e=>e.data)).catch((()=>({}))):{},o=s.spatialReference,a={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},u=O(this.parsedUrl.path+"/project",l({query:this._getQueryParams(a)},t)).then((e=>e.data)).catch((()=>({}))),p=(s.xmin+s.xmax)/2,c=(s.ymax-s.ymin)/6,d=s.ymin+c,m=[];for(let l=0;l<5;l++)m.push({x:p,y:d+c*l});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},y=O(this.parsedUrl.path+"/project",l({query:this._getQueryParams(h)},t)).then((e=>e.data)).catch((()=>({}))),f=await Promise.all([n,u,y]);let g=f[0].ipxf;if(null==g){var v,R,w;const e=null==(v=i.geodataXform)?void 0:v.xf_0;"topup"===(null==e||null==(R=e.name)?void 0:R.toLowerCase())&&6===(null==e||null==(w=e.coefficients)?void 0:w.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const b=z.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);b&&(b.spatialReference=new q({wkid:0,imageCoordinateSystem:i}));const x=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],S=x.length;if(S<3)return{ics:i,icsToPixelTransform:g,icsExtent:b,northDirection:null};let I=0,N=0,T=0,_=0;for(let l=0;l<S;l++)I+=x[l].x,N+=x[l].y,T+=x[l].x*x[l].x,_+=x[l].x*x[l].y;const j=(S*_-I*N)/(S*T-I*I);let F=0;const P=x[4].x>x[0].x,C=x[4].y>x[0].y;return j===1/0?F=C?90:270:0===j?F=P?0:180:j>0?F=P?180*Math.atan(j)/Math.PI:180*Math.atan(j)/Math.PI+180:j<0&&(F=C?180+180*Math.atan(j)/Math.PI:360+180*Math.atan(j)/Math.PI),{ics:i,icsToPixelTransform:g,icsExtent:b,northDirection:F}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&_(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const s=(e=e.clone().shiftCentralMeridian()).spatialReference;let n;if(s.imageCoordinateSystem){const{id:e,referenceServiceName:t}=s.imageCoordinateSystem;n=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:s.imageCoordinateSystem})}else n=s.wkid||JSON.stringify(s.toJSON());_(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:a,noData:u}=o;let{renderingRule:p}=o;if(a instanceof Array&&a.length>0&&!this.renderingRule?o.bandIds=a.join(","):o.bandIds=void 0,null!=a&&a.length&&this.renderingRule)if("Colormap"===p.rasterFunction){const e=new Ge({functionName:"ExtractBand",functionArguments:{BandIds:a,raster:p.rasterFunctionArguments.Raster}});p.rasterFunctionArguments.Raster=e}else p=new Ge({functionName:"ExtractBand",functionArguments:{BandIds:a,raster:p}});u instanceof Array&&u.length>0&&(o.noData=u.join(","));const c=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i);o.mosaicRule=c&&JSON.stringify(c),o.renderingRule=p&&JSON.stringify(p);const d={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${null==e?"null":e},${null==t?"null":t}`)}return l(l({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r},o),d)}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new H("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=B(_t,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),async function(e,t,r){var i,s;const n=t.toJSON();vt(n),null!=(i=n.outFields)&&i.length&&(n.outFields=n.outFields.join(","));const o=await T(t.geometry),a=null==o?void 0:o[0];_(a)&&(n.geometry=a.toJSON());const p=N(e),c=j(l(u(l({},p.query),{f:"json"}),n)),d=F(c,r),{data:m}=await O(`${p.path}/getSamples`,d),h=null==m||null==(s=m.samples)?void 0:s.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return u(l({},e),{pixelValue:t})}));return gt.fromJSON({samples:h})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new H("imagery-layer:query-rasters","query operation is not supported on the input image service");e=B(Ot,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=W(t)}return r&&null==e.raster&&(e.raster=r),wt(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new X;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),$(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Y(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),K(this.url,e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new H("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,a=null,u=null;const p="raster.servicepixelvalue",c=this.rasterFunctionNamesIndex;if(_(e.outFields)&&(o=e.outFields.some((e=>-1===e.toLowerCase().indexOf(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(p)>-1&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));a=t.map((e=>new Ge({functionName:e[0]}))),u=t.map((e=>e[1])),0===a.length?this.renderingRule?(a.push(this.renderingRule),u.push(this.renderingRule.functionName)):a=null:this.renderingRule&&!a.some((e=>e.functionName===this.renderingRule.functionName))&&(a.push(this.renderingRule),u.push(this.renderingRule.functionName))}const d=k(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=e.timeExtent||this.timeExtent,h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,m),y=this._getQueryParams({geometry:e.geometry,timeExtent:m,mosaicRule:h,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:a,pixelSize:r,returnCatalogItems:o,returnGeometry:d,raster:this.raster,maxItemCount:s?1:null});delete y.f;const f=new Ot(y),g=this.generateRasterInfo(this.renderingRule);return new Promise((r=>{g.then((()=>{wt(this.url,f,{signal:null==t?void 0:t.signal,query:l({},this.customParameters)}).then((t=>{const s=e.outFields;if(o&&!d&&t.catalogItems&&t.catalogItems.features&&t.catalogItems.features.length>0){const o=this.objectIdField||"ObjectId",a=t.catalogItems.features,l=a.map((e=>e.attributes&&e.attributes[o])),p=new X({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[o]});return this.queryRasters(p).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{a.forEach((r=>{r.attributes[o]===t.attributes[o]&&(r.geometry=new Z(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s}))})).catch((()=>{throw new H("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s}))})).catch((()=>{throw new H("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))}async fetchVariableStatisticsHistograms(e,t){const r=O(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=O(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),_(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=_(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Promise.all([r,i]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,jt.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=_(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;return k(e)||k(e.multidimensionalDefinition)||k(this.multidimensionalInfo)||k(t)||k(null==r?void 0:r.startField)||((e=e.clone()).multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>e.dimensionName!==r.startField))),e}async _prepareForQuery(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new H("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=_(e)?B(X,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=u(l({},t.query),{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new je;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||Ne(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await O(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new H("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isVectorFieldResampleFunction(e){if(!_(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),s=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Oe(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Te(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=_e(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new De({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:_(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return l(l({raster:t,viewId:r,f:"json"},e),this.customParameters)}_getRequestOptions(e){return u(l({},e),{query:l(l({},null==e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Me(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await O(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new H("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,s=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&O(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>I.fromJSON(e.data))).catch((()=>null)),n=!!(t.hasColormap&&this.version>=10.1)&&O(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),o=!!(t.hasHistograms&&this.version>=10.1)&&O(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=this.version>=10.3&&O(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([s,n,o,a,l]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=q.fromJSON(t.spatialReference||t.extent.spatialReference);return new Ce({width:i,height:s,bandCount:t.bandCount,extent:z.fromJSON(t.extent),spatialReference:n,pixelSize:new x({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return O(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(l({f:"image"},e.imageServiceParameters)),signal:i}).then((e=>({imageElement:e.data,params:t})));const s=this._initJobHandler(),n=O(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(l({f:"image"},e.imageServiceParameters)),signal:i});return Promise.all([n,s]).then((e=>{const r=e[0].data,s=t.format||"jpgpng";let n=s;if("bsq"!==n&&"bip"!==n&&(n=Ae(r)),!n)throw new H("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const o="gif"===s||"bmp"===s||s.indexOf("png")>-1&&("png"===n||"jpg"===n),a={signal:i};return o?Me(r,l({useCanvas:!0},t),a).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:s},a).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await O(this.parsedUrl.path,l({query:this._getQueryParams({renderingRule:e})},t));return await this._fetchAuxiliaryRasterInfo(l({serviceInfo:r,renderingRule:e},t))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const i in t)if(t.hasOwnProperty(i)){const e=t[i],s=e.extent;let n=!0,o=[s[0]];e.hasRanges&&!0===e.hasRanges?(n=!1,o=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(s[1])<=Math.abs(s[0])&&(o=[s[1]]),r.push(new Re({variableName:"",dimensionName:t[i].name,isSlice:n,values:o}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new ut;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(i=e,0)))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:s,returnDomainValues:n,templateFields:o}=t,a=e.processedValues;let l=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,d=[];if(r&&!l&&!c){const e={};e[p]=0,u=[r],l=[new ee(this.fullExtent,null,e)]}if(!l)return[];let m,h,y;this._updateResponseFieldNames(l,o),c&&!s&&(l=[]);for(let f=0;f<l.length;f++){if(m=l[f],null!=r&&!c){if(h=u[f],y=this.renderingRule&&a&&a.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?a[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===h.toLowerCase()&&!s)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";m.attributes[e]=this._formatAttributeValue(h,e),m.attributes[t]=this._formatAttributeValue(y,t),this._updateFeatureWithMagDirValues(m,h);const n=this.fields&&this.fields.length>0;let o=this.renderingRule&&_(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?n?h:r:y;this.renderingRule||(o=n?h:r),this._updateFeatureWithRasterAttributeTableValues(m,o)}if(m.sourceLayer=this,n&&this._updateFeatureWithDomainValues(m),i&&a&&i.length===a.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];m.attributes[t]=this._formatAttributeValue(a[e],t)}d.push(l[f])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||_(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const s=r.fields,n=s.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=n&&n[0];if(!o)return;const a=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&s.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(a[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new Ve({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new z(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:Je([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;_(r)&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf("image")>-1,o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&a,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return p([c()],t.prototype,"_functionRasterInfos",void 0),p([c()],t.prototype,"_rasterJobHandler",void 0),p([c()],t.prototype,"_symbolizer",void 0),p([c()],t.prototype,"_defaultServiceMosaicRule",void 0),p([d("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),p([c()],t.prototype,"_cachedRendererJson",void 0),p([c()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),p([c({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),p([c()],t.prototype,"adjustAspectRatio",void 0),p([c({readOnly:!0}),S("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),p([c({type:[w],json:{write:!0}})],t.prototype,"bandIds",void 0),p([d("bandIds")],t.prototype,"readBandIds",null),p([c({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),p([d("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),p([c({type:Number})],t.prototype,"compressionQuality",void 0),p([m("compressionQuality")],t.prototype,"writeCompressionQuality",null),p([c({type:Number})],t.prototype,"compressionTolerance",void 0),p([m("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),p([c({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),p([c({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),p([c({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),p([c()],t.prototype,"rasterInfo",void 0),p([c({readOnly:!0,type:[J]})],t.prototype,"fields",void 0),p([c({readOnly:!0})],t.prototype,"fieldsIndex",null),p([c({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),p([d("service","format",["serviceDataType"])],t.prototype,"readFormat",null),p([c({type:z})],t.prototype,"fullExtent",void 0),p([c({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),p([c({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),p([c({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),p([c({type:String,json:{type:we.jsonValues,read:we.read,write:we.write}})],t.prototype,"interpolation",void 0),p([c()],t.prototype,"minScale",void 0),p([d("service","minScale")],t.prototype,"readMinScale",null),p([c()],t.prototype,"maxScale",void 0),p([d("service","maxScale")],t.prototype,"readMaxScale",null),p([c({type:ut})],t.prototype,"mosaicRule",null),p([d("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),p([m("mosaicRule")],t.prototype,"writeMosaicRule",null),p([c({readOnly:!0}),S("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),p([c({json:{type:w}})],t.prototype,"noData",void 0),p([m("noData")],t.prototype,"writeNoData",null),p([c({type:String,json:{type:be.jsonValues,read:be.read,write:be.write}})],t.prototype,"noDataInterpretation",void 0),p([c({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),p([d("objectIdField")],t.prototype,"readObjectIdField",null),p([c({})],t.prototype,"geometryType",void 0),p([c({})],t.prototype,"typeIdField",void 0),p([c({})],t.prototype,"types",void 0),p([c({readOnly:!0})],t.prototype,"parsedUrl",null),p([c({readOnly:!0}),S("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),p([c({readOnly:!0}),S("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),p([c({type:Function})],t.prototype,"pixelFilter",void 0),p([c()],t.prototype,"raster",void 0),p([c()],t.prototype,"viewId",void 0),p([c({types:xe,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Se,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),p([d("renderer")],t.prototype,"readRenderer",null),p([m("renderer")],t.prototype,"writeRenderer",null),p([c(E)],t.prototype,"opacity",void 0),p([c({readOnly:!0}),S("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),p([c({readOnly:!0})],t.prototype,"rasterFields",null),p([c({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),p([c({type:Ge})],t.prototype,"renderingRule",null),p([d("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),p([m("renderingRule")],t.prototype,"writeRenderingRule",null),p([c()],t.prototype,"serviceDataType",void 0),p([c({readOnly:!0,type:q})],t.prototype,"spatialReference",void 0),p([d("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),p([c({json:{type:Ft.jsonValues}})],t.prototype,"pixelType",void 0),p([d("pixelType")],t.prototype,"readPixelType",null),p([m("pixelType")],t.prototype,"writePixelType",null),p([c({constructOnly:!0,type:Ce})],t.prototype,"serviceRasterInfo",void 0),p([c()],t.prototype,"sourceJSON",void 0),p([c(L)],t.prototype,"url",void 0),p([c({readOnly:!0})],t.prototype,"version",void 0),p([d("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=p([y("esri.layers.mixins.ArcGISImageService")],t),t};let Mt=class extends(ie(se(ne(oe(ae(le(Dt(ue(pe(ce(de))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?l({url:e},t):e}load(e){const t=_(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(me).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const s="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=s?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let s=!1,n=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=s&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const o=new Set;s&&(o.add("raster.itempixelvalue"),n&&o.add("raster.magnitude").add("raster.direction"));for(const a of t){const e=a.name.toLowerCase();o.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||i.add(a.name)}return he({fields:t,title:r},u(l({},e),{visibleFieldNames:i}))}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}};p([c(ye)],Mt.prototype,"legendEnabled",void 0),p([c({type:["show","hide"]})],Mt.prototype,"listMode",void 0),p([c({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Mt.prototype,"isReference",void 0),p([c({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Mt.prototype,"operationalLayerType",void 0),p([m("web-map","operationalLayerType")],Mt.prototype,"writeOperationalLayerType",null),p([c(fe)],Mt.prototype,"popupEnabled",void 0),p([c({type:ge,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Mt.prototype,"popupTemplate",void 0),p([c({readOnly:!0})],Mt.prototype,"defaultPopupTemplate",null),p([c({readOnly:!0,json:{read:!1}})],Mt.prototype,"type",void 0),Mt=p([y("esri.layers.ImageryLayer")],Mt);var At=Mt;export{At as default};
//# sourceMappingURL=ImageryLayer.0add8d86.js.map
