{"version":3,"file":"RasterWorker.5fb78976.js","sources":["../../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.21/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as e}from\"../../core/maybe.js\";import r from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as t,split as s,mosaic as i,approximateTransform as m}from\"./rasterFunctions/pixelUtils.js\";import{convertVectorFieldData as l}from\"./rasterFunctions/vectorFieldUtils.js\";import n from\"../../renderers/support/RasterSymbolizer.js\";import c from\"../../geometry/Extent.js\";class a{convertVectorFieldData(o){const t=r.fromJSON(o.pixelBlock),s=l(t,o.type);return Promise.resolve(e(s)&&s.toJSON())}async decode(e){const r=await o(e.data,e.options);return r&&r.toJSON()}symbolize(o){o.pixelBlock=r.fromJSON(o.pixelBlock),o.extent=o.extent?c.fromJSON(o.extent):null;const t=this.symbolizer.symbolize(o);return Promise.resolve(e(t)&&t.toJSON())}async updateSymbolizer(e){var r;this.symbolizer=n.fromJSON(e.symbolizerJSON),e.histograms&&\"rasterStretch\"===(null==(r=this.symbolizer)?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(o){const t=this.symbolizer.simpleStretch(r.fromJSON(o.srcPixelBlock),o.stretchParams);return Promise.resolve(e(t)&&t.toJSON())}estimateStatisticsHistograms(e){const o=t(r.fromJSON(e.srcPixelBlock));return Promise.resolve(o)}split(e){const o=s(r.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return o&&o.forEach(((e,r)=>{o.set(r,null==e?void 0:e.toJSON())})),Promise.resolve(o)}async mosaicAndTransform(e){const o=e.srcPixelBlocks.map((e=>e?new r(e):null)),t=i(o,e.srcMosaicSize,null,null,e.alignmentInfo);if(!e.coefs)return t&&t.toJSON();const s=m(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return s&&s.toJSON()}}export{a as default};\n"],"names":["convertVectorFieldData","o","t","r","fromJSON","pixelBlock","s2","l","type","Promise","resolve","e","toJSON","r2","data","options","symbolize","extent","c","this","symbolizer","n","symbolizerJSON","histograms","rendererJSON","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","split","s","tileSize","maximumPyramidLevel","forEach","e2","set","srcPixelBlocks","map","i","srcMosaicSize","alignmentInfo","coefs","m","destDimension","sampleSpacing","interpolation"],"mappings":"iQAIgd,QAAQA,uBAAuBC,SAASC,EAAEC,EAAEC,SAASH,EAAEI,YAAYC,EAAEC,EAAEL,EAAED,EAAEO,aAAaC,QAAQC,QAAQC,EAAEL,IAAIA,EAAEM,uBAAuBD,SAASE,QAAQZ,EAAEU,EAAEG,KAAKH,EAAEI,gBAAgBF,GAAGA,EAAED,SAASI,UAAUf,KAAKI,WAAWF,EAAEC,SAASH,EAAEI,YAAYJ,EAAEgB,OAAOhB,EAAEgB,OAAOC,EAAEd,SAASH,EAAEgB,QAAQ,WAAWf,EAAEiB,KAAKC,WAAWJ,UAAUf,UAAUQ,QAAQC,QAAQC,EAAET,IAAIA,EAAEU,iCAAiCD,OAAOE,OAAOO,WAAWC,EAAEjB,SAASO,EAAEW,gBAAgBX,EAAEY,YAAY,mBAAmB,SAASJ,KAAKC,iBAAY,EAAOP,EAAEW,aAAahB,aAAaY,WAAWI,aAAaD,WAAWZ,EAAEY,YAAYE,QAAQxB,SAASC,EAAEiB,KAAKC,WAAWM,cAAcvB,EAAEC,SAASH,EAAE0B,eAAe1B,EAAE2B,sBAAsBnB,QAAQC,QAAQC,EAAET,IAAIA,EAAEU,UAAUiB,6BAA6BlB,SAASV,EAAEC,EAAEC,EAAEC,SAASO,EAAEgB,uBAAuBlB,QAAQC,QAAQT,GAAG6B,MAAMnB,SAASV,EAAE8B,EAAE5B,EAAEC,SAASO,EAAEgB,eAAehB,EAAEqB,SAASrB,EAAEsB,4BAA4BhC,GAAGA,EAAEiC,SAAS,CAACC,EAAEtB,OAAOuB,IAAIvB,EAAE,MAAMsB,OAAE,EAAOA,EAAEvB,aAAaH,QAAQC,QAAQT,4BAA4BU,SAASV,EAAEU,EAAE0B,eAAeC,QAAQH,EAAE,IAAIhC,EAAEgC,GAAG,OAAOjC,EAAEqC,EAAEtC,EAAEU,EAAE6B,cAAc,KAAK,KAAK7B,EAAE8B,mBAAmB9B,EAAE+B,aAAaxC,GAAGA,EAAEU,eAAeN,EAAEqC,EAAEzC,EAAES,EAAEiC,cAAcjC,EAAE+B,MAAM/B,EAAEkC,cAAclC,EAAEmC,sBAAsBxC,GAAGA,EAAEM"}