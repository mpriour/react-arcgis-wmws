var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,o=(t,r,s)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s,n=(e,t)=>{for(var r in t||(t={}))i.call(t,r)&&o(e,r,t[r]);if(s)for(var r of s(t))a.call(t,r)&&o(e,r,t[r]);return e},l=(e,s)=>t(e,r(s));import{oU as p,pq as y,oV as c,bc as u,bd as d,be as h,bf as m,o$ as g,p1 as b,pr as v,cj as f,b as x,B as S,bi as O,kB as w,pJ as j,mI as I,pK as P,z as E,N as M,bv as N,P as J,S as U,oZ as F,F as L,G as q,b3 as T,dU as k,h_ as R,bl as A,H as z}from"./vendor.7103ff48.js";import{f as V,y as $,K as B}from"./SublayersOwner.30ea78d2.js";let D=class extends(p(y(c(V($(u(d(h(m(g(b(v(f(x)))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?n({url:e},t):e}load(e){const t=S(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(O).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=w(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;a=j(i,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");a=j(i,e.sublayers,w(e.origin))}}const o=[],l=n({writeSublayerStructure:a},s);let p=a;i.forEach((e=>{const t=e.write({},l);o.push(t),p=p||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),p&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const i=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new I({layer:this,floors:null==s?void 0:s.floors,scale:P({extent:e,width:t})*i}),o=a.toJSON();a.destroy();const l=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},p=e&&e.spatialReference,y=p.wkid||JSON.stringify(p.toJSON());o.dpi*=i;const c={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();c.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return n(n(n({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:t+","+r},o),l),c)}async fetchImage(e,t,r,s){var i;const a={responseType:"image",signal:null!=(i=null==s?void 0:s.signal)?i:null,query:l(n(n(l(n(n({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,s)),{f:"image"}),this.refreshParameters),this.customParameters),{token:this.apiKey})},o=this.parsedUrl.path+"/export";return null==a.query.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?M(o,a).then((e=>e.data)).catch((e=>{if(N(e))throw e;throw new E("mapimagelayer:image-fetch-error",`Unable to load image: ${o}`,{error:e})})):Promise.reject(new E("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:a.query}))}async fetchRecomputedExtents(e={}){const t=l(n({},e),{query:l(n({returnUpdates:!0,f:"json"},this.customParameters),{token:this.apiKey})}),{data:r}=await M(this.url,t),{extent:s,fullExtent:i,timeExtent:a}=r,o=s||i;return{fullExtent:o&&J.fromJSON(o),timeExtent:a&&U.fromJSON({start:a[0],end:a[1]})}}loadAll(){return F(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await M(this.parsedUrl.path,{query:l(n(n({f:"json"},this.parsedUrl.query),this.customParameters),{token:this.apiKey}),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};L([q({type:Boolean})],D.prototype,"datesInUnknownTimezone",void 0),L([q()],D.prototype,"dpi",void 0),L([q()],D.prototype,"gdbVersion",void 0),L([q()],D.prototype,"imageFormat",void 0),L([T("imageFormat",["supportedImageFormatTypes"])],D.prototype,"readImageFormat",null),L([q({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],D.prototype,"imageMaxHeight",void 0),L([q({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],D.prototype,"imageMaxWidth",void 0),L([q()],D.prototype,"imageTransparency",void 0),L([q({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],D.prototype,"isReference",void 0),L([q({json:{read:!1,write:!1}})],D.prototype,"labelsVisible",void 0),L([q({type:["ArcGISMapServiceLayer"]})],D.prototype,"operationalLayerType",void 0),L([q({json:{read:!1,write:!1}})],D.prototype,"popupEnabled",void 0),L([q()],D.prototype,"sourceJSON",void 0),L([q({json:{write:{ignoreOrigin:!0}}})],D.prototype,"sublayers",void 0),L([k("sublayers",{layers:{type:[B]},visibleLayers:{type:[R]}})],D.prototype,"writeSublayers",null),L([q({type:["show","hide","hide-children"]})],D.prototype,"listMode",void 0),L([q({json:{read:!1},readOnly:!0,value:"map-image"})],D.prototype,"type",void 0),L([q(A)],D.prototype,"url",void 0),D=L([z("esri.layers.MapImageLayer")],D);var G=D;export{G as default};
//# sourceMappingURL=MapImageLayer.8f2bacfe.js.map
