import{hU as t,B as r,hV as e,X as a,fX as o,hW as n,hX as f,hY as s,hZ as i}from"./vendor.7103ff48.js";import{c as u,a as l,u as b,m as h}from"./PointCloudWorkerUtil.272bc16f.js";import"./PointCloudUniqueValueRenderer.af9e320e.js";import"./I3SBinaryReader.da331753.js";class p{transform(t){const a=this._transform(t),o=[a.points.buffer,a.rgb.buffer];r(a.pointIdFilterMap)&&o.push(a.pointIdFilterMap.buffer);for(const r of a.attributes)"buffer"in r.values&&e(r.values.buffer)&&r.values.buffer!==a.rgb.buffer&&o.push(r.values.buffer);return Promise.resolve({result:a,transferList:o})}_transform(t){const e=u(t.schema,t.geometryBuffer);let o=e.length/3,n=null;const f=[],s=l(t.primaryAttributeData,e,o);r(t.primaryAttributeData)&&s&&f.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:s});const i=l(t.modulationAttributeData,e,o);r(t.modulationAttributeData)&&i&&f.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:i});let p=b(t.rendererInfo,s,i,o);if(t.filterInfo&&t.filterInfo.length>0&&r(t.filterAttributesData)){const r=t.filterAttributesData.map((t=>{const r=l(t,e,o),a={attributeInfo:t.attributeInfo,values:r};return f.push(a),a}));n=new Uint32Array(o),o=h(e,p,n,t.filterInfo,r)}for(const r of t.userAttributesData){const t=l(r,e,o);f.push({attributeInfo:r.attributeInfo,values:t})}3*o<p.length&&(p=new Uint8Array(p.buffer.slice(0,3*o))),this._applyElevationOffsetInPlace(e,o,t.elevationOffset);const m=this._transformCoordinates(e,o,t.obb,a.fromJSON(t.inSR),a.fromJSON(t.outSR));return{obb:t.obb,points:m,rgb:p,attributes:f,pointIdFilterMap:n}}_transformCoordinates(t,r,e,a,u){if(!o(t,a,0,t,u,0,r))throw Error("Can't reproject");const l=n(e.center[0],e.center[1],e.center[2]),b=i(),h=i();f(m,e.quaternion);const p=new Float32Array(3*r);for(let o=0;o<r;o++)b[0]=t[3*o]-l[0],b[1]=t[3*o+1]-l[1],b[2]=t[3*o+2]-l[2],s(h,b,m),e.halfSize[0]=Math.max(e.halfSize[0],Math.abs(h[0])),e.halfSize[1]=Math.max(e.halfSize[1],Math.abs(h[1])),e.halfSize[2]=Math.max(e.halfSize[2],Math.abs(h[2])),p[3*o]=b[0],p[3*o+1]=b[1],p[3*o+2]=b[2];return p}_applyElevationOffsetInPlace(t,r,e){if(0!==e)for(let a=0;a<r;a++)t[3*a+2]+=e}}const m=t();function c(){return new p}export{c as default};
//# sourceMappingURL=PointCloudWorker.2dd62ad8.js.map
