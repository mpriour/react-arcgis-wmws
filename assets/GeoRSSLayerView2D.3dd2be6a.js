import{ih as e,b4 as i,A as s,D as t,jz as r,nS as o,bt as a,dX as p,F as l,H as n}from"./vendor.7103ff48.js";import{l as h}from"./LayerView2D.3bec42c6.js";import{r as m}from"./GraphicContainer.aef7333c.js";import{e as c}from"./BaseGraphicContainer.8758663f.js";import"./Container.f525a10f.js";import"./Utils.8f00ae04.js";import"./projectionSupport.c5c55ada.js";import"./json.62026198.js";import"./Matcher.4dbcd4b5.js";import"./definitions.e5e12ce7.js";import"./ComputedAttributeStorage.c6915def.js";import"./FeatureSetReader.bfb25a2d.js";import"./centroid.f07ef5b9.js";import"./visualVariablesUtils.7196204b.js";import"./visualVariablesUtils.f42dea16.js";import"./tileUtils.2adb3da0.js";import"./TileClipper.507f8905.js";import"./GeometryUtils.1bcb906c.js";import"./schemaUtils.c28cd36f.js";import"./MaterialKey.8df623c8.js";import"./CIMSymbolHelper.da5834c9.js";import"./Rect.db562a93.js";import"./BidiEngine.af5bfcbd.js";import"./MD5.86afbcc5.js";import"./cimAnalyzer.07de9cca.js";import"./FeatureContainer.c8d6e93f.js";import"./TileContainer.555234dd.js";import"./WGLContainer.6f073475.js";import"./brushes.b64b90a9.js";import"./ShaderCompiler.6905b522.js";import"./pixelUtils.5eddfa69.js";import"./GraphicsView.45ff2c67.js";let y=class extends(h(e)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((e=>{const a=i.fromJSON(e.featureSet),p=new(s.ofType(t))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const i=e.layerDefinition.drawingInfo,s=e.popupInfo?r.fromJSON(e.popupInfo):null,t=o(i.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:t,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,s),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=t.symbol):this.layer.lineSymbol=t.symbol:this.layer.polygonSymbol=t.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new p({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new p({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new p({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=l([n("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export{d as default};
//# sourceMappingURL=GeoRSSLayerView2D.3dd2be6a.js.map
