import{bb as e,ih as t,z as i,hP as s,nO as a,nP as r,M as l,bv as n,dB as h,F as o,G as c,H as u}from"./vendor.7103ff48.js";import{r as f}from"./BitmapTileLayerView2D.01348fb4.js";import{l as m}from"./LayerView2D.3bec42c6.js";import{a as p}from"./RefreshableLayerView.7b9ab281.js";import{i as d}from"./TileLayerView.311c44a6.js";import{a as g}from"./drapedUtils.fabca730.js";import"./BitmapTileContainer.79d2ec63.js";import"./Bitmap.8c3290a1.js";import"./brushes.b64b90a9.js";import"./definitions.e5e12ce7.js";import"./Utils.8f00ae04.js";import"./ShaderCompiler.6905b522.js";import"./GeometryUtils.1bcb906c.js";import"./MaterialKey.8df623c8.js";import"./pixelUtils.5eddfa69.js";import"./TileContainer.555234dd.js";import"./WGLContainer.6f073475.js";import"./Container.f525a10f.js";import"./clickToleranceUtils.85f9bed9.js";const w=e.getLogger("esri.views.2d.layers.TileLayerView2D"),y=[0,0];let _=class extends(d(p(f(m(t))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}initialize(){const e=this.layer.tileInfo,t=e&&e.spatialReference;let s;t||(s=new i("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),t.equals(this.view.spatialReference)||(s=new i("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.doRefresh()})),s&&this.addResolvingPromise(Promise.reject(s))}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new s(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new a({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new r({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(e,t){return g(e,t,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>this._enqueueTileFetch(e))),this.notifyChange("updating"))}isUpdating(){var e;return(null==(e=this._fetchQueue)?void 0:e.length)>0}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(y,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,s=!l(t)&&t.signal;if(!i)try{return await this._fetchImage(e,s)}catch(f){if(!n(f)&&!this.resampling)return this._createBlankImage();throw f}const a=new h(0,0,0,0);let r;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:s}),a.level!==e.level&&!this.resampling)return this._createBlankImage();r=await this._fetchImage(a,s)}catch(f){if(n(f))throw f;r=await this._fetchImage(e,s)}const{level:o,row:c,col:u}=a;return this.resampling&&o!==e.level?this._resampleImage(r,o,c,u,e.level,e.row,e.col):r}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){n(t)||w.error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{signal:t})}_resampleImage(e,t,i,s,a,r,l){const n=this._tileInfoView.tileInfo.size,h=this._tileInfoView.getTileResolution(t),o=this._tileInfoView.getTileResolution(a);let c=this._tileInfoView.getLODInfoAt(a);const u=c.getXForColumn(l),f=c.getYForRow(r);c=this._tileInfoView.getLODInfoAt(t);const m=c.getXForColumn(s),p=c.getYForRow(i),d=Math.round((u-m)/h),g=Math.round(-(f-p)/h),w=Math.round(n[0]*(o/h)),y=Math.round(n[1]*(o/h)),_=this._createBlankImage();return _.getContext("2d").drawImage(e,d,g,w,y,0,0,n[0],n[1]),_}_createBlankImage(){const e=this._tileInfoView.tileInfo.size,t=document.createElement("canvas");return[t.width,t.height]=e,t}};o([c()],_.prototype,"resampling",null),_=o([u("esri.views.2d.layers.TileLayerView2D")],_);var I=_;export{I as default};
//# sourceMappingURL=TileLayerView2D.f1864392.js.map
