var e=Object.defineProperty,t=Object.defineProperties,i=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,a=(t,i,r)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[i]=r,o=(e,t)=>{for(var i in t||(t={}))s.call(t,i)&&a(e,i,t[i]);if(r)for(var i of r(t))n.call(t,i)&&a(e,i,t[i]);return e},l=(e,r)=>t(e,i(r));import{bb as u,F as c,G as f,P as h,pi as d,X as p,bm as m,bl as y,H as g,pF as x,M as v,B as I,cJ as w,N as b,j2 as T,aa as S,z as R,aL as C,a1 as _,ag as P,ai as k,b8 as M,b3 as F,dU as O,b4 as D,bN as B,bu as z,af as E,oU as L,oV as A,bd as H,be as N,pr as J,o$ as j,bf as q,b as U,bi as W,aT as G,jv as $,h_ as V,pd as Y,jz as X}from"./vendor.7103ff48.js";import{a as K,d as Q,X as Z,T as ee,S as te,j as ie,t as re,p as se,o as ne,b as ae}from"./rasterRendererHelper.4ad10a61.js";import{f as oe,c as le}from"./vectorFieldUtils.7ace4039.js";import{N as ue,T as ce,p as fe,r as he,l as de,v as pe,b as me,C as ye,P as ge,c as xe,d as ve,D as Ie,O as we}from"./RasterSymbolizer.fba0606b.js";import{i as be,m as Te,x as Se,d as Re,h as Ce}from"./RawBlockCache.4c21cd41.js";import{y as _e,S as Pe,v as ke,s as Me,b as Fe,w as Oe,u as De}from"./pixelUtils.5eddfa69.js";import{M as Be,R as ze,L as Ee,C as Le,z as Ae,g as He,b as Ne,P as Je,G as je}from"./rasterProjectionHelper.d2fb66f4.js";import{n as qe}from"./serviceTileInfoProperty.6e3cc1cd.js";import{j as Ue}from"./TilemapCache.59c5ee62.js";import"./LercCodec.1de5a3c5.js";const We=u.getLogger("esri.layers.mixins.ImageryTileMixin"),Ge=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",x(e,We))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(v(e))return null;const i=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:r},t):oe(e,r)}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=Z(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(I(i)&&i.pixels&&i.pixels.length>0))return null;let r;await this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:n}=this;return r=s?await s.symbolize(l(o({},e),{simpleStretchParams:t,bandIds:n})):this.symbolizer.symbolize(l(o({},e),{simpleStretchParams:t,bandIds:n})),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=w(e);return m.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,r={}){if(r.requestAsImageElement){const s=this.getTileUrl(e,t,i);return b(s,{responseType:"image",query:o(o({sliceId:this._sliceId},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:r.signal}).then((e=>e.data))}await this._initJobHandler();const s="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;r=o({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:s},r)}return this.raster.fetchTile(e,t,i,r)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r=o({multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e},r)}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t=l(o({},t),{multidimensionalDefinition:this.multidimensionalDefinition})),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!I(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new re;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=ee(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(I(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new K({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=te(e)),this.renderer||(this.renderer=ie(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=Z(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new ue({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||We.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return c([f()],t.prototype,"_cachedRendererJson",void 0),c([f()],t.prototype,"_sliceId",void 0),c([f()],t.prototype,"_compatibleFullExtent",void 0),c([f()],t.prototype,"_rasterJobHandler",void 0),c([f()],t.prototype,"bandIds",void 0),c([f()],t.prototype,"copyright",void 0),c([f({type:h}),d("rasterInfo.extent")],t.prototype,"fullExtent",void 0),c([f()],t.prototype,"interpolation",void 0),c([f()],t.prototype,"ioConfig",void 0),c([f({type:[K]})],t.prototype,"multidimensionalDefinition",null),c([f()],t.prototype,"raster",void 0),c([f({readOnly:!0}),d("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),c([f()],t.prototype,"sourceJSON",void 0),c([f({type:p}),d("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),c([f({type:m}),d("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),c([f(y)],t.prototype,"url",null),c([f({types:Q})],t.prototype,"renderer",null),c([f()],t.prototype,"symbolizer",void 0),t=c([g("esri.layers.ImageryTileMixin")],t),t};let $e=class extends(T(S)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Be();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e=l(o({},e),{ioConfig:o({resolution:null,bandIds:null,sampling:"closest",tileInfo:m.create()},e.ioConfig)})),e}set url(e){this._set("url",x(e,u.getLogger(this.declaredClass)))}async open(e){throw new R("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){const{tileInfo:s}=r,n=s.lodAt(e),a=this.getTileExtent({x:n.resolution,y:n.resolution},t,i,s.origin,s.spatialReference,s.size);return r=this._getRequestOptionsWithSliceId(r),this.fetchPixels(a,s.size[0],s.size[1],r)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:s}=t;let n=ze(e,i,s);if(!r.intersects(n))return{location:n,value:null};if(I(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(n);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};n=e}let a=0;if(t.srcResolution)a=Ee(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:n,value:null};const o=this.identifyPixelLocation(n,a,null);if(null===o)return{location:n,value:null};const{row:l,col:u,rowOffset:c,colOffset:f}=o,h=be(this.url,t.sliceId),d=`${a}/${l}/${u}`;let p=Te(h,null,d);v(p)&&(p=this.fetchRawTile(a,l,u,t),Se(h,null,d,p));const m=await p;if(v(m)||!m.pixels||0===m.pixels.length)return{location:n,value:null};const y=c*this.rasterInfo.storageInfo.blockHeight+f,g=!m.mask||m.mask[y]?m.pixels.map((e=>e[y])):null,x=this.rasterInfo.dataType;return("vector-magdir"===x||"vector-uv"===x)&&(null==g?void 0:g.length)>1?{location:n,value:g,magdirValue:"vector-magdir"===x?[g[0],g[1]]:le([g[0],g[1]]),pyramidLevel:a}:{location:n,value:g,pyramidLevel:a}}async fetchPixels(e,t,i,r={}){e=Le(e);const s=Ae(e),n=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(n),{datumTransformation:o}=r,l=new C({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=r.srcResolution||(a?He(l,n,e,o):l);if(!u)return null;const{pyramidLevel:c,pyramidResolution:f,excessiveReading:h}=Ee(u,this.rasterInfo,this.ioConfig.sampling);if(h)return null;const d=this.rasterInfo.storageInfo;let p=a?Ne(e,n,o):e;const m=_(this.rasterInfo.transform);if(m&&(p=m.inverseTransform(p)),null==p)return null;const y={x:Math.floor((p.xmin-d.origin.x)/f.x+.1),y:Math.floor((d.origin.y-p.ymax)/f.y+.1)},g=Math.ceil((p.xmax-p.xmin)/f.x-.1),x=Math.ceil((p.ymax-p.ymin)/f.y-.1);if(g/t>8||x/i>8||s>=2)return null;const v=await this.fetchRawPixels(c,y,{width:g,height:x,wrapCount:s},r);if(!v)return null;const I=c>0?d.pyramidBlockWidth:d.blockWidth,w=c>0?d.pyramidBlockHeight:d.blockHeight;if(!a&&(I===g&&w===x&&y.x%I==0&&y.y%w==0)&&1===v.pixelBlocks.length&&I===t&&w===i&&u.x===l.x&&u.y===l.y)return{extent:e,srcExtent:p,pixelBlock:v.pixelBlocks[0]};const b=Je(e,v.extent,l,o,m,s>0);let T;const S=!r.requestRawData,R={rows:b.spacing[0],cols:b.spacing[1]},P=_(this._getRasterTileAlignmentInfo(c,v.extent.xmin)),{pixelBlocks:k,mosaicSize:M,isPartiallyFilled:F}=v;if(this.rasterJobHandler)T=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:k,srcMosaicSize:M,destDimension:S?{width:t,height:i}:null,coefs:S?b.coefficients:null,sampleSpacing:S?R:null,interpolation:r.interpolation,alignmentInfo:P},r);else{const e=_e(k,M,null,null,P);T=S?Pe(e,{width:t,height:i},b.coefficients,R,r.interpolation):e}return r.requestRawData?{srcExtent:p,pixelBlock:T,transformGrid:b,extent:e,isPartiallyFilled:F}:{srcExtent:p,extent:e,pixelBlock:T}}async fetchRawPixels(e,t,i,r){const{origin:s,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(e);let{x:l,y:u}=t,{width:c,height:f,wrapCount:d}=i;const p=_(this._getRasterTileAlignmentInfo(e,0));r.buffer&&(l-=r.buffer.cols,u-=r.buffer.rows,c+=2*r.buffer.cols,f+=2*r.buffer.rows);const m=Math.floor(l/a),y=Math.floor(u/o),g=Math.floor((l+c-1)/a),x=Math.floor((u+f-1)/o),v=n[e];if(!v)return null;const{minRow:I,minCol:w,maxCol:b,maxRow:T}=v;if(x<I||g<w||y>T||m>b)return null;const S=new Array;let R=!1;const C=null==this.ioConfig.allowPartialFill?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let h=y;h<=x;h++)for(let t=m;t<=g;t++){const i=0===d||null==p||t<p.worldColumnCountFromOrigin?t:t%p.worldColumnCountFromOrigin-p.originColumnOffset;if(h>=I&&i>=w&&T>=h&&b>=i){const t=this._fetchRawTile(e,h,i,r);C?S.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{R=!0,e(null)}))}))):S.push(t)}else S.push(null)}if(0===S.length)return null;const P=await Promise.all(S),k={height:(x-y+1)*o,width:(g-m+1)*a},{spatialReference:M}=this.rasterInfo,F=this.getPyramidPixelSize(e),{x:O,y:D}=F;return{extent:new h({xmin:s.x+m*a*O,xmax:s.x+(g+1)*a*O,ymin:s.y-(x+1)*o*D,ymax:s.y-y*o*D,spatialReference:M}),pixelBlocks:P,mosaicSize:k,isPartiallyFilled:R}}fetchRawTile(e,t,i,r){throw new R("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Ne(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?ce(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var r,s;const{customFetchParameters:n}=this.ioConfig,{range:a,query:u,headers:c}=t;i=null!=(r=null!=(s=i)?s:t.retryCount)?r:this.ioConfig.retryCount;const f=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await b(e,l(o({},t),{query:o(o({},u),n),headers:o(o({},c),f)}))}catch(h){if(i>0)return i--,this.request(e,t,i);throw h}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!I(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let s=0;s<t.variables.length;s++){const n=t.variables[s],a=n.dimensions;if(n.name!==r){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==r)return null;const s=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(s,a[t]);if(-1===n)return null;o.shift(),i+=t===l-1?n:n*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const s=[],n=e.maximumPyramidLevel||0;let a=Math.max(r.x,r.y),o=1/.0254*96*a;for(let e=0;e<=n;e++)s.push({level:n-e,resolution:a,scale:o}),a*=2,o*=2;const l=new C({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new m({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:s}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:s,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new C({x:a.xmin,y:a.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(s,n))/Math.LN2-8)));const c=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],r);e.storageInfo=new fe({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,r,s,n=0,a=2){if(1===s.length&&n>0){s=[...s];let{x:e,y:t}=s[0];for(let i=0;i<n;i++)e*=a,t*=a,s.push({x:e,y:t})}const o=[],{x:l,y:u}=r;for(let c=0;c<s.length;c++){const{x:r,y:n}=s[c];o.push({minCol:Math.floor((e.xmin-l+.1*r)/t/r),maxCol:Math.floor((e.xmax-l-.1*r)/t/r),minRow:Math.floor((u-e.ymax+.1*n)/i/n),maxRow:Math.floor((u-e.ymin-.1*n)/i/n)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if(I(i)&&i.length)return i[e-1];const s=r**e;return{x:t.x*s,y:t.y*s}}identifyPixelLocation(e,t,i){const{spatialReference:r,nativeExtent:s}=this.rasterInfo,{blockWidth:n,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,u=ze(e,r,i);if(!s.intersects(u))return null;if(t<0||t>o)return null;const c=this.getPyramidPixelSize(t),{x:f,y:h}=c,d=(l.y-u.y)/h/a,p=(u.x-l.x)/f/n,m=Math.min(a-1,Math.floor((d-Math.floor(d))*a)),y=Math.min(n-1,Math.floor((p-Math.floor(p))*n));return{pyramidLevel:t,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:u}}getTileExtent(e,t,i,r,s,n){const[a,o]=n,l=r.x+i*a*e.x,u=l+a*e.x,c=r.y-t*o*e.y,f=c-o*e.y;return new h({xmin:l,xmax:u,ymin:f,ymax:c,spatialReference:s})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}_fetchRawTile(e,t,i,r){const s=this.rasterInfo.storageInfo.blockBoundary[e];if(!s)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:u,maxRow:c}=s;if(t<n||i<a||t>c||i>u)return Promise.resolve(null);const f=be(this.url,r.sliceId),h=`${e}/${t}/${i}`;let d=Te(f,r.registryId,h);if(v(d)){const s=P();d=this.fetchRawTile(e,t,i,l(o({},r),{signal:s.signal})),Se(f,r.registryId,h,d,s),d.catch((()=>Re(f,r.registryId,h)))}return r.signal&&k(r,(()=>{Ce(f,r.registryId,h)})),d}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:s,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===s){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/r);break;case"minutes":o=Math.round((e-a)/6e4/r);break;case"hours":o=Math.round((e-a)/36e5/r);break;case"days":o=Math.round((e-a)/864e5/r);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/r);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/r)}return o}return Math.round((e-a)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:s}=e;let n=(null==s?void 0:s.length)||0;if(n)return n;const a=t[0];if(0===n&&"ISO8601"===r){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/i);break;case"hours":n=Math.round((t[1]-t[0])/36e5/i);break;case"days":n=Math.round((t[1]-t[0])/864e5/i);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return n}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=je(this.rasterInfo)),I(this._rasterTileAlighmentInfo.pyramidsInfo)?o({startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[e]):null}_getRequestOptionsWithSliceId(e){var t;return null!=(t=e.multidimensionalDefinition)&&t.length&&I(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e=l(o({},e),{sliceId:this.getSliceIndex(e.multidimensionalDefinition)||0})),e}};c([f()],$e.prototype,"_rasterTileAlighmentInfo",void 0),c([f(y)],$e.prototype,"url",null),c([f({type:String,json:{write:!0}})],$e.prototype,"datasetName",void 0),c([f({type:String,json:{write:!0}})],$e.prototype,"datasetFormat",void 0),c([f()],$e.prototype,"rasterInfo",void 0),c([f()],$e.prototype,"ioConfig",void 0),c([f()],$e.prototype,"sourceJSON",void 0),$e=c([g("esri.layers.support.rasterDatasets.BaseRaster")],$e);var Ve=$e;function Ye(e){const t=e.fields,i=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",s=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),n=s.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[r]=o++,l=1;l<n.length;l++)t[n[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:s,features:a}}let Xe=class extends S{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(e){return e}inverseTransform(e){return e}};c([f()],Xe.prototype,"affectsPixelSize",void 0),c([f({json:{write:!0}})],Xe.prototype,"spatialReference",void 0),Xe=c([g("esri.layers.support.rasterTransforms.BaseRasterTransform")],Xe);var Ke=Xe;let Qe=class extends Ke{constructor(){super(...arguments),this.type="identity"}};c([M({IdentityXform:"identity"})],Qe.prototype,"type",void 0),Qe=c([g("esri.layers.support.rasterTransforms.IdentityTransform")],Qe);var Ze=Qe;function et(e,t,i){const{x:r,y:s}=t;if(i<2)return{x:e[0]+r*e[2]+s*e[4],y:e[1]+r*e[3]+s*e[5]};if(2===i){const t=r*r,i=s*s,n=r*s;return{x:e[0]+r*e[2]+s*e[4]+t*e[6]+n*e[8]+i*e[10],y:e[1]+r*e[3]+s*e[5]+t*e[7]+n*e[9]+i*e[11]}}const n=r*r,a=s*s,o=r*s,l=n*r,u=n*s,c=r*a,f=s*a;return{x:e[0]+r*e[2]+s*e[4]+n*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+f*e[18],y:e[1]+r*e[3]+s*e[5]+n*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+f*e[19]}}function tt(e,t,i){const{xmin:r,ymin:s,xmax:n,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:r,y:a}),l.push({x:n,y:a}),l.push({x:r,y:s}),l.push({x:n,y:s});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:s+(a-s)*t/(e-1)}),l.push({x:n,y:s+(a-s)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(n-r)*t/e,y:s}),l.push({x:r+(n-r)*t/e,y:a})}l=l.map((t=>et(e,t,i)));const u=l.map((e=>e.x)),c=l.map((e=>e.y));return new h({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:o})}let it=class extends Ke{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const s=[];for(let n=0;n<i.length;n++)s.push(i[n]),s.push(r[n]);return s}writeForwardCoefficients(e,t,i){const r=[],s=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?r.push(e[n]):s.push(e[n]);t.coeffX=r,t.coeffY=s}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,r,s,n,a]=e,o=r*a-n*s,l=n*s-r*a;return[(n*i-t*a)/o,(r*i-t*s)/l,a/o,s/l,-n/o,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:r}=t;if(null==i||!i.length||null==r||!r.length||i.length!==r.length)return null;const s=[];for(let n=0;n<i.length;n++)s.push(i[n]),s.push(r[n]);return s}writeInverseCoefficients(e,t,i){const r=[],s=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?r.push(e[n]):s.push(e[n]);t.inverseCoeffX=r,t.inverseCoeffY=s}forwardTransform(e){if("point"===e.type){const t=et(this.forwardCoefficients,e,this.polynomialOrder);return new C({x:t.x,y:t.y,spatialReference:e.spatialReference})}return tt(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=et(this.inverseCoefficients,e,this.polynomialOrder);return new C({x:t.x,y:t.y,spatialReference:e.spatialReference})}return tt(this.inverseCoefficients,e,this.polynomialOrder)}};c([f({json:{write:!0}})],it.prototype,"polynomialOrder",void 0),c([f()],it.prototype,"forwardCoefficients",void 0),c([F("forwardCoefficients",["coeffX","coeffY"])],it.prototype,"readForwardCoefficients",null),c([O("forwardCoefficients")],it.prototype,"writeForwardCoefficients",null),c([f({json:{write:!0}})],it.prototype,"inverseCoefficients",null),c([F("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],it.prototype,"readInverseCoefficients",null),c([O("inverseCoefficients")],it.prototype,"writeInverseCoefficients",null),c([f()],it.prototype,"affectsPixelSize",void 0),c([M({PolynomialXform:"polynomial"})],it.prototype,"type",void 0),it=c([g("esri.layers.support.rasterTransforms.PolynomialTransform")],it);var rt=it;const st={PolynomialXform:rt,IdentityXform:Ze},nt=Object.keys(st);const at=new Map;at.set("int16","esriFieldTypeSmallInteger"),at.set("int32","esriFieldTypeInteger"),at.set("int64","esriFieldTypeInteger"),at.set("float32","esriFieldTypeSingle"),at.set("float64","esriFieldTypeDouble"),at.set("text","esriFieldTypeString");let ot=class extends Ve{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new R("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,r={}){const s=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(s<0)return null;const n=this._buildCacheFilePath(s,t,i,r.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!o)return null;const l=new Uint8Array(o.data),u=this._getTileEndAndContentType(l,a);if(0===u.recordSize)return null;const c=await this.request(n,{range:{from:u.position,to:u.position+u.recordSize},responseType:"array-buffer",signal:r.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:s,histograms:n,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:u,maximumPyramidLevel:c}=e,f=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),d=e.extent.spatialReference,y=null==(t=e.geodataXform)?void 0:t.spatialReference,g=new p(null!=d&&d.wkid||null!=d&&d.wkt?d:y);let x=new h({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:g});const v=new C({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:g}),I=Math.round((x.xmax-x.xmin)/v.x),w=Math.round((x.ymax-x.ymin)/v.y),b=this._parseTransform(e.geodataXform),T=b?x:null;b&&(x=b.forwardTransform(x),v.x=(x.xmax-x.xmin)/I,v.y=(x.ymax-x.ymin)/w);const S=null!=(i=e.properties)?i:{},R=e.format.toLowerCase().replace("cache/",""),_=new C(e.origin.x,e.origin.y,g);let P,k,M,F;if(a&&a.colors)for(P=[],k=0;k<a.colors.length;k++)M=a.colors[k],F=a.values?a.values[k]:k,P.push([F,255&M,M<<16>>>24,M<<8>>>24,M>>>24]);const O=e.LODInfos,D=[];for(k=0;k<O.levels.length;k++)D.push({level:O.levels[k],resolution:O.resolutions[k],scale:96/.0254*O.resolutions[k]});const B=new m({dpi:96,lods:D,format:R,origin:_,size:[o,l],spatialReference:g}),z={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},E=[{maxCol:Math.ceil(I/o)-1,maxRow:Math.ceil(w/l)-1,minCol:0,minRow:0}];let L=2;if(c>0)for(k=0;k<c;k++)E.push({maxCol:Math.ceil(I/L/o)-1,maxRow:Math.ceil(w/L/l)-1,minCol:0,minRow:0}),L*=2;const A=e.mdInfo;return{storageInfo:z,rasterInfo:new de({width:I,height:w,pixelType:r,bandCount:s,extent:x,nativeExtent:T,transform:b,spatialReference:g,pixelSize:v,keyProperties:S,statistics:f,histograms:n,multidimensionalInfo:A,colormap:P,storageInfo:new fe({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:_,tileInfo:B,firstPyramidLevel:u,maximumPyramidLevel:c,blockBoundary:E})})}}_parseTransform(e){var t,i;if(!function(e){const t=null==e?void 0:e.type;return!e||nt.includes(t)}(e))throw new R("cloudraster:open","the data contains unsupported geodata transform types");const r=function(e){if(!(null==e?void 0:e.type))return null;const t=st[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===r.type)return null;if("polynomial"!==r.type||null==(t=r.forwardCoefficients)||!t.length||null==(i=r.inverseCoefficients)||!i.length)throw new R("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,i]);let s;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":at.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(s={fields:e,features:i})}}return!s&&r[1]&&(s=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const r=t.getUint32(4,!0),s=t.getUint16(8,!0),n=t.getUint16(10,!0),a={version:i,recordCount:r,headerByteCount:s,recordByteCount:n};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:he(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<r&&e.byteLength-o>n;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push(he(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}o+=t.length})),u.push(i)):o+=n}}return{header:a,fields:l,records:u,recordSet:Ye({fields:l,records:u})}}}.parse(r[1]).recordSet),D.fromJSON(s)}_buildCacheFilePath(e,t,i,r){const s=this.storageInfo.packetSize,n=Math.floor(t/s)*s,a=Math.floor(i/s)*s,o="R"+this._toHexString4(n)+"C"+this._toHexString4(a);let l="L";l+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,c=null==r?void 0:r[0];if(!I(u)||!c)return`${this.url}/_alllayers/${l}/${o}.bundle`;let f=u.variables.filter((e=>e.name===c.variableName))[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const h=4-f.length;for(let d=0;d<h;d++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${c.variableName}/${f}/${l}/${o}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,r=i*(e%i)+t%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let r,s=0;for(r=0;r<5;r++)s|=(255&i[r])<<8*r;const n=0xffffffffff&s;for(s=0,r=5;r<8;r++)s|=(255&i[r])<<8*(r-5);return{position:n,recordSize:0xffffffffff&s}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};c([f({readOnly:!0})],ot.prototype,"storageInfo",void 0),c([f({type:String,json:{write:!0}})],ot.prototype,"datasetFormat",void 0),ot=c([g("esri.layers.support.rasterDatasets.CloudRaster")],ot);var lt=ot;let ut=class extends Ve{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:s,name:n,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:u,height:c,pixelType:f}=i,d=this.data.extent||new h({xmin:-.5,ymin:.5,xmax:u-.5,ymax:c-.5,spatialReference:new p({wkid:3857})}),m=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,y={x:d.width/u,y:d.height/c},g=new de({width:u,height:c,pixelType:f,extent:d,nativeExtent:o,transform:l,pixelSize:y,spatialReference:d.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:m,histograms:s});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(e,t,i,r={}){const s=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(s)}async _buildInMemoryRaster(e,t,i){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve(ke(e,t,r)),n=I(this.rasterInfo.statistics),a=I(this.rasterInfo.histograms),o=n&&a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Me(e)),l=await B([s,o]);if(!l[0].value&&l[1].value)throw new R("inmemory-raster:open","failed to build in memory raster");var u,c;this._pixelBlockTiles=l[0].value,n||(this.rasterInfo.statistics=null==(u=l[1].value)?void 0:u.statistics),a&&(this.rasterInfo.histograms=null==(c=l[1].value)?void 0:c.histograms)}};c([f({type:String,json:{write:!0}})],ut.prototype,"datasetFormat",void 0),c([f()],ut.prototype,"data",void 0),ut=c([g("esri.layers.support.rasterDatasets.InMemoryRaster")],ut);var ct=ut;function ft(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const s=ft(e,i);for(let e=0;e<s.length;e++)ft(s[e],t).forEach((e=>r.push(e)));return r}const s=e.getElementsByTagNameNS("*",i);if(!s||0===s.length)return[];for(let n=0;n<s.length;n++)r.push(s[n]||s.item[n]);return r}function ht(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=ft(e,i);return r.length>0?t?ht(r[0],t):r[0]:null}function dt(e,t=null){const i=t?ht(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function pt(e,t){return function(e,t){const i=ft(e,t),r=[];let s;for(let n=0;n<i.length;n++)s=i[n].textContent||i[n].nodeValue,s&&(s=s.trim(),""!==s&&r.push(s));return r}(e,t).map((e=>Number(e)))}function mt(e,t){const i=dt(e,t);return Number(i)}function yt(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),s=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===s}function gt(e,t){if(!e||!t)return null;const i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function xt(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new p({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),s=r>-1?r:e.indexOf("GEOGCS");if(-1===s)return null;const n=e.slice(s,e.lastIndexOf("]",i)+1).trim(),a=e.slice(s,e.lastIndexOf("]")).trim();t=vt(n);const o=new p(t?{wkid:t}:{wkt:n}),l=vt(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=vt(e),new p(0!==t?{wkid:t}:{wkt:e})):null}function vt(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(",");if("EPSG"===i[0]&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function It(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(yt(e,"SRS")){if(!i.spatialReference){const t=dt(e);i.spatialReference=xt(t)}}else if(yt(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const i=ht(e,"GeodataXform"),r=xt(mt(i,"SpatialReference/WKID")||dt(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const s=null!=(t=mt(i,"PolynomialOrder"))?t:1,n=pt(i,"CoeffX/Double"),a=pt(i,"CoeffY/Double"),o=pt(i,"InverseCoeffX/Double"),l=pt(i,"InverseCoeffY/Double"),u=gt(n,a),c=gt(o,l);return{spatialReference:r,transform:new rt({spatialReference:r,polynomialOrder:s,forwardCoefficients:u,inverseCoefficients:c})}}(e);i.transform=r,i.spatialReference||(i.spatialReference=t)}else ft(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=dt(e)));else if(yt(e,"PAMRasterBand")){const t=function(e){var t;const i=mt(e,"NoDataValue"),r=ht(e,"Histograms/HistItem"),s=mt(r,"HistMin"),n=mt(r,"HistMax"),a=mt(r,"BucketCount"),o=null==(t=dt(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,u,c,f;ft(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":f=i}}));const h=mt(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=u?{min:s,max:n,size:a||o.length,counts:o}:null,sourceBandIndex:h,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:f}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const r=i.rasterBands;if(r){const e=!!r[0].statistics;i.statistics=e?r.map((e=>e.statistics)):null;const t=!!r[0].histogram;i.histograms=t?r.map((e=>e.histogram)):null}return i}let wt=class extends Ve{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:s,transform:n}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new p({wkid:3857})),null!=s&&s.length&&null==r&&(r=Fe(s));const{width:o,height:l}=t;let u=new h({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const c=n?n.forwardTransform(u):u;let f=!0;if(n){const e=n.forwardCoefficients;f=e&&0===e[1]&&0===e[2],f&&(n=null,u=c)}const d=new ct({data:{extent:c,nativeExtent:u,transform:n,pixelBlock:t,statistics:r,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await d.open(),this._set("rasterInfo",d.rasterInfo),this._inMemoryRaster=d}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=pe(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new R("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const r=_(null==e?void 0:e.signal),s=null!=(t=this.ioConfig.skipExtensions)?t:[],n=s.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=s.indexOf(o)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:r}),u=await B([n,l]);if(null!=r&&r.aborted)throw z();const c=It(null==(i=u[0].value)?void 0:i.data);if(!c.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;c.transform=6===(null==e?void 0:e.length)?new rt({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return c}};c([f({type:String,json:{write:!0}})],wt.prototype,"datasetFormat",void 0),wt=c([g("esri.layers.support.rasterDatasets.ImageAuxRaster")],wt);var bt=wt;let Tt=class extends Ke{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};c([M({GCSShiftXform:"gcs-shift"})],Tt.prototype,"type",void 0),c([f()],Tt.prototype,"tolerance",void 0),Tt=c([g("esri.layers.support.rasterTransforms.GCSShiftTransform")],Tt);var St=Tt;let Rt=class extends Ve{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=i.data;if(this.sourceJSON=r,!r)throw new R("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new R("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name.slice(r.name.indexOf("/")+1);const s=await this._fetchRasterInfo({signal:t});if(!I(s))throw new R("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?qe(r.tileInfo,r):m.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=s,n=.5/s.width*i.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-r.maxScale)<n))[0],a||(a=e.lods.filter((e=>e.scale>r.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=l);const u=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-r.minScale)<n))[0],this._levelOffset=o.level-u.level),o||(o=u);const c=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>n||!e.lods.some((e=>Math.abs(e.resolution-c)<n)))&&(i.x=i.y=a.resolution,s.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),s.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const f=a.level-o.level,[h,d]=e.size,p=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&p.push({x:e.resolution,y:e.resolution})})),p.sort(((e,t)=>e.x-t.x));const y=this.computeBlockBoundary(t,h,d,e.origin,p,f),g=p.length>1?p.slice(1):null;s.storageInfo=new fe({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:g,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:f,tileInfo:e,blockBoundary:y}),this._fixGCSShift(s),this._set("rasterInfo",s)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:s.storageInfo.tileInfo,parsedUrl:E(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Ue({layer:e})}}async fetchRawTile(e,t,i,r={}){const{storageInfo:s,extent:n}=this.rasterInfo,a=s.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${i}`,l=this._slices?{sliceId:r.sliceId||0}:null,{data:u}=await this.request(o,{query:l,responseType:"array-buffer",signal:r.signal});if(!u)return null;const c=await this.decodePixelBlock(u,{width:s.tileInfo.size[0],height:s.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=s.blockBoundary[e];if("jpg"!==s.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return c;const{origin:h,blockWidth:d,blockHeight:p}=s,{x:m,y:y}=this.getPyramidPixelSize(e),g=Math.round((n.xmin-h.x)/m)%d,x=Math.round((n.xmax-h.x)/m)%d,v=Math.round((h.y-n.ymax)/y)%p,I=Math.round((h.y-n.ymin)/y)%p,w=i===f.minCol?g:0,b=t===f.minRow?v:0,T=i===f.maxCol?x:d,S=t===f.maxRow?I:p;return Oe(c,{x:w,y:b},{width:T-w,height:S-b}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([i,r]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,_(t.datumTransformation));if(null===i)return null;let r=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let n=s-r+this._levelOffset;const a=i.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch{}if(n--,r++,i=this.identifyPixelLocation(a,r,_(t.datumTransformation)),null===i)return null}return-1===n||null==i?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=p.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new de({width:i,height:r,bandCount:3,extent:h.fromJSON(t.extent),spatialReference:s,pixelSize:new C({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:n,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:n,f:"json"},signal:a}).then((e=>D.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:n,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),u=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:n,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),c=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),f=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),d=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,u,c,f,d]).then((e=>{let n=null;if(t.minValues&&t.minValues.length===t.bandCount){n=[];for(let e=0;e<t.minValues.length;e++)n.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new de({width:i,height:r,bandCount:t.bandCount,extent:h.fromJSON(t.extent),spatialReference:s,pixelSize:new C({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:n,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new St,e.extent=e.transform.forwardTransform(t))}};c([f({type:String,json:{write:!0}})],Rt.prototype,"datasetFormat",void 0),c([f()],Rt.prototype,"tileType",void 0),Rt=c([g("esri.layers.support.rasterDatasets.ImageServerRaster")],Rt);var Ct=Rt;const _t=new Map;_t.set("Int8","s8"),_t.set("UInt8","u8"),_t.set("Int16","s16"),_t.set("UInt16","u16"),_t.set("Int32","s32"),_t.set("UInt32","u32"),_t.set("Float32","f32"),_t.set("Float64","f32"),_t.set("Double64","f32");const Pt=new Map;Pt.set("lerc",".lrc"),Pt.set("none",".til"),Pt.set("deflate",".pzp"),Pt.set("jpeg",".jzp");let kt=class extends Ve{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?_(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:s,files:n}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(s.statistics=null!=(a=t.statistics)?a:s.statistics,s.histograms=t.histograms,t.histograms&&!I(s.statistics)&&(s.statistics=Fe(t.histograms)))}this._set("rasterInfo",s),this._files=n;const o=await this.request(n.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(o.data);let l,u,c=0,f=-1;const{blockWidth:h,blockHeight:d,compression:p}=this.rasterInfo.storageInfo,m=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:y,height:g,bandCount:x}=this.rasterInfo,v=[],w="none"===p?1:x;for(;c<this._storageIndex.length;)f++,l=Math.ceil(y/h/m**f),u=Math.ceil(g/d/m**f),c+=l*u*w*4,v.push({maxRow:u,maxCol:l,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=v,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){const{blockWidth:s,blockHeight:n,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:u,pixelType:c}=this.rasterInfo,{ranges:f,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const e=new Uint8Array(s*n);return new De({width:s,height:n,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:u,y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:f[g].from,to:f[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),v=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),I=new Uint8Array(v);let w=0;for(g=0;g<m;g++)I.set(new Uint8Array(x[g].data),w),w+=x[g].data.byteLength;const b="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",T=await this.decodePixelBlock(I.buffer,{width:s,height:n,format:b,pixelType:c});let S=0,R=0;if(h!==s||d!==n){let e=T.mask;if(e)for(g=0;g<n;g++)if(R=g*s,g<d)for(S=h;S<s;S++)e[R+S]=0;else for(S=0;S<s;S++)e[R+S]=0;else for(e=new Uint8Array(s*n),T.mask=e,g=0;g<d;g++)for(R=g*s,S=0;S<h;S++)e[R+S]=1}return T}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,r,s,n,a;if(me){for(i=new Uint8Array(e),s=new ArrayBuffer(e.byteLength),r=new Uint8Array(s),n=0;n<e.byteLength/4;n++)for(a=0;a<4;a++)r[4*n+a]=i[4*n+3-a];t=new Uint32Array(s)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:r,blockHeight:s,pyramidScalingFactor:n,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,c="none"===a?1:u;let f,h,d,p=0,m=0;for(d=0;d<e;d++)m=n**d,f=Math.ceil(o/r/m),h=Math.ceil(l/s/m),p+=f*h;m=n**e,f=Math.ceil(o/r/m),h=Math.ceil(l/s/m),p+=t*f+i,p*=4*c;const y=this._storageIndex.subarray(p,p+4*c);let g=0,x=0;const v=[];for(let I=0;I<c;I++)g=y[4*I+0]*2**32+y[4*I+1],x=g+y[4*I+2]*2**32+y[4*I+3],v.push({from:g,to:x});return{ranges:v,actualTileWidth:i<f-1?r:Math.ceil(o/m)-r*(f-1),actualTileHeight:t<h-1?s:Math.ceil(l/m)-s*(h-1)}}_parseHeader(e){const t=ht(e,"MRF_META/Raster");if(!t)throw new R("mrf:open","not a valid MRF format");const i=ht(t,"Size"),r=parseInt(i.getAttribute("x"),10),s=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),a=(dt(t,"Compression")||"none").toLowerCase();if(!a||-1===["none","lerc"].indexOf(a))throw new R("mrf:open","currently does not support compression "+a);const o=dt(t,"DataType")||"UInt8",l=_t.get(o);if(null==l)throw new R("mrf:open","currently does not support pixel type "+o);const u=ht(t,"PageSize"),c=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=ht(t,"DataValues");let m,y;if(d&&(y=d.getAttribute("NoData"),null!=y&&(m=y.trim().split(" ").map((e=>parseFloat(e))))),ht(e,"MRF_META/CachedSource"))throw new R("mrf:open","currently does not support MRF referencing other data files");const g=ht(e,"MRF_META/GeoTags"),x=ht(g,"BoundingBox");if(null==x)throw new R("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const v=parseFloat(x.getAttribute("minx")),I=parseFloat(x.getAttribute("miny")),w=parseFloat(x.getAttribute("maxx")),b=parseFloat(x.getAttribute("maxy")),T=dt(g,"Projection")||"",S=dt(e,"datafile"),_=dt(e,"IndexFile");let P;if("LOCAL_CS[]"!==T)if(T.toLowerCase().startsWith("epsg:")){const e=Number(T.slice(5));isNaN(e)||0===e||(P=new p({wkid:e}))}else P=xt(T);const k=new h(v,I,w,b);k.spatialReference=P;const M=ht(e,"MRF_META/Rsets"),F=parseInt(M&&M.getAttribute("scale")||"2",10),O=new fe({origin:new C({x:k.xmin,y:k.ymax,spatialReference:P}),blockWidth:c,blockHeight:f,pyramidBlockWidth:c,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:F}),D=new C({x:(w-v)/r,y:(b-I)/s,spatialReference:P});return{rasterInfo:new de({width:r,height:s,extent:k,spatialReference:P,bandCount:n,pixelType:l,pixelSize:D,noDataValue:m,storageInfo:O}),files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",Pt.get(a))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return It(t)}catch{return null}}};c([f()],kt.prototype,"_files",void 0),c([f()],kt.prototype,"_storageIndex",void 0),c([f({type:String,json:{write:!0}})],kt.prototype,"datasetFormat",void 0),kt=c([g("esri.layers.support.rasterIO.MRFRaster")],kt);var Mt=kt;const Ft=function(e,t){const i=e.get(t);return i&&i.values},Ot=function(e,t){const i=e.get(t);return i&&i.values[0]};let Dt=class extends Ve{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,r;await this.init();const s=e?_(e.signal):null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!n)throw new R("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFD:u,isBigTiff:c}=ye(n),f=[];await this.readIFDs(f,n,a,u,0,c?8:4,s);const d=ge(f),{width:m,height:y,tileWidth:g,tileHeight:x,planes:v,pixelType:w,compression:b,firstPyramidLevel:T,maximumPyramidLevel:S,pyramidBlockWidth:P,pyramidBlockHeight:k,tileBoundary:M,affine:F,metadata:O}=d;let D=xt((null==(t=d.extent.spatialReference)?void 0:t.wkt)||(null==(i=d.extent.spatialReference)?void 0:i.wkid)),B=!1;null==D&&(B=!0,D=new p({wkid:3857}));const z=new h(l(o({},d.extent),{spatialReference:D})),E=new C(z?{x:z.xmin,y:z.ymax,spatialReference:D}:{x:0,y:0}),L=new fe({blockWidth:g,blockHeight:x,pyramidBlockWidth:P,pyramidBlockHeight:k,compression:b,origin:E,firstPyramidLevel:T,maximumPyramidLevel:S,blockBoundary:M}),A=new C({x:(z.xmax-z.xmin)/m,y:(z.ymax-z.ymin)/y,spatialReference:D}),H=O?{BandProperties:O.bandProperties,DataType:O.dataType}:{},N=new de({width:m,height:y,bandCount:v,pixelType:w,compression:b,pixelSize:A,storageInfo:L,spatialReference:D,isPseudoSpatialReference:B,keyProperties:H,extent:z,statistics:O?O.statistics:null});if(null!=F&&F.length&&(N.nativeExtent=new h({xmin:-.5,ymin:.5-y,xmax:m-.5,ymax:.5,spatialReference:D}),N.transform=new rt({polynomialOrder:1,forwardCoefficients:[F[2]+F[0]/2,F[5]-F[3]/2,F[0],F[3],-F[1],-F[4]]}),N.extent=N.transform.forwardTransform(N.nativeExtent),N.pixelSize=new C({x:(z.xmax-z.xmin)/m,y:(z.ymax-z.ymin)/y,spatialReference:D}),L.origin.x=-.5,L.origin.y=.5),null==(r=this.ioConfig.skipExtensions)||!r.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var J;if(N.statistics=null!=(J=t.statistics)?J:N.statistics,N.histograms=t.histograms,t.histograms&&!I(N.statistics)&&(N.statistics=Fe(t.histograms)),t.transform&&!F){N.transform=t.transform,N.nativeExtent=N.extent;const e=N.transform.forwardTransform(N.nativeExtent);N.pixelSize=new C({x:(e.xmax-e.xmin)/m,y:(e.ymax-e.ymin)/y,spatialReference:D}),N.extent=e}N.spatialReference||(N.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",N),this._headerInfo=o({littleEndian:a,isBigTiff:c,ifds:f},d),!this._headerInfo.isSupported)throw new R("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){var s;if(null==(s=this._headerInfo)||!s.isSupported||this.isBlockOutside(e,t,i))return null;const n=this.getTileLocation(e,t,i);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=n,c=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),f=await Promise.all(c),h=f.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),d=1===f.length?f[0].data:new ArrayBuffer(h),p=[0],m=[0];if(f.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<f.length;t++){const r=f[t].data;e.set(new Uint8Array(r),i),p[t]=i,i+=r.byteLength,m[t]=r.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});let v,I,w;if(o!==y||l!==g){let e=x.mask;if(e)for(v=0;v<g;v++)if(w=v*y,v<l)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,v=0;v<l;v++)for(w=v*y,I=0;I<o;I++)e[w+I]=1}return x}async readIFDs(e,t,i,r,s,n=4,a){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+s,to:r+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=r+s,r=0);const o=await this.readIFD(t,i,r,s,xe.TIFF_TAGS,n,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-s,s,n,a)}async readIFD(e,t,i,r,s=xe.TIFF_TAGS,n=4,a){if(!e)return null;const o=ve(e,t,i,r,s,n);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const s=i.map((e=>e.offlineOffsetSize)),n=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:a});e=s,r=n,i.forEach((i=>Ie(e,t,i,r)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),s=i.values;if(s&&s.length>4){const n=s[0]+"."+s[1]+"."+s[2],o=await this.readIFD(e,t,i.valueOffset+6-r,r,xe.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:r,to:r+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,r,xe.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:r,blockBoundary:s}=this.rasterInfo.storageInfo,n=0===e?0:e-(r-1),a=this._headerInfo.ifds[n];if(!a)return null;const o=we(a,this._headerInfo),l=Ft(a,"TILEOFFSETS");if(void 0===l)return null;const u=Ft(a,"TILEBYTECOUNTS"),{minRow:c,minCol:f,maxRow:h,maxCol:d}=s[n];if(t>h||i>d||t<c||i<f)return null;const p=Ot(a,"IMAGEWIDTH"),m=Ot(a,"IMAGELENGTH"),y=Ot(a,"TILEWIDTH"),g=Ot(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,v=x*t*(d+1)+i,I=[{from:l[v],to:l[v+x-1]+u[v+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[v+t]+u[v+t]!==l[v+t+1]){e=!1;break}if(!e)for(let t=0;t<x;t++)I[t]={from:l[v+t],to:l[v+t]+u[v+t]-1}}const w=l[v],b=u[v];return null==w||null==b?null:{ranges:I,ifd:a,actualTileWidth:i===d?p%y:y,actualTileHeight:t===h?m%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return It(t)}catch{return null}}};c([f()],Dt.prototype,"_files",void 0),c([f()],Dt.prototype,"_headerInfo",void 0),c([f()],Dt.prototype,"_bufferSize",void 0),c([f({type:String,json:{write:!0}})],Dt.prototype,"datasetFormat",void 0),Dt=c([g("esri.layers.support.rasterDatasets.TIFFRaster")],Dt);var Bt=Dt;const zt=new Map;zt.set("CRF",{desc:"Cloud Raster Format",constructor:lt}),zt.set("MRF",{desc:"Meta Raster Format",constructor:Mt}),zt.set("TIFF",{desc:"GeoTIFF",constructor:Bt}),zt.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ct}),zt.set("JPG",{desc:"JPG Raster Format",constructor:bt}),zt.set("PNG",{desc:"PNG Raster Format",constructor:bt}),zt.set("GIF",{desc:"GIF Raster Format",constructor:bt}),zt.set("BMP",{desc:"BMP Raster Format",constructor:bt});let Et=class extends(L(A(H(N(J(Ge(j(q(U))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?o({url:e},t):e}load(e){const t=I(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(W).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new G({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}const s=this.rasterInfo.dataType;if(("vector-magdir"===s||"vector-uv"===s)&&I(this.rasterInfo.multidimensionalInfo)){var n;const e=null==(n=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:n.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new G({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new G({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const r=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,s=se(r,i)||void 0;if(null!=s)return s}createPopupTemplate(e){return $({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new R("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return zt.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:r}=e;let s=e.datasetFormat;null==s&&t.lastIndexOf(".")&&(s=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(s="RasterTileServer");const n={url:t,sourceJSON:r,datasetFormat:s,ioConfig:i||{bandIds:null,sampling:null}};let a,o;if(this.supportedFormats.has(s))return a=zt.get(s).constructor,o=new a(n),await o.open({signal:e.signal}),o;if(s)throw new R("rasterfactory:open","not a supported format "+s);const l=Array.from(zt.keys());let u=0;const c=function(){return s=l[u++],s?(a=zt.get(s).constructor,o=new a(n),o.open({signal:e.signal}).then((()=>o)).catch((()=>c()))):null};return c()}static register(e,t,i){zt.has(e.toUpperCase())||zt.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:l(o({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new R("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};c([f({type:[V],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],Et.prototype,"bandIds",void 0),c([f({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),M(ne)],Et.prototype,"interpolation",void 0),c([f({json:{write:!0}})],Et.prototype,"multidimensionalDefinition",void 0),c([f(Y)],Et.prototype,"legendEnabled",void 0),c([f({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Et.prototype,"isReference",void 0),c([f({type:["show","hide"]})],Et.prototype,"listMode",void 0),c([f()],Et.prototype,"sourceJSON",void 0),c([f({readOnly:!0})],Et.prototype,"version",void 0),c([f()],Et.prototype,"title",void 0),c([f({readOnly:!0,json:{read:!1}})],Et.prototype,"type",void 0),c([f({type:["ArcGISTiledImageServiceLayer"]})],Et.prototype,"operationalLayerType",void 0),c([f({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Et.prototype,"popupEnabled",void 0),c([f({type:X,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Et.prototype,"popupTemplate",void 0),c([f({readOnly:!0})],Et.prototype,"defaultPopupTemplate",null),c([f({readOnly:!0,type:[G]})],Et.prototype,"fields",void 0),c([f({readOnly:!0,type:[G]})],Et.prototype,"rasterFields",null),c([f({types:Q,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:ae,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],Et.prototype,"renderer",null),c([F("renderer")],Et.prototype,"readRenderer",null),Et=c([g("esri.layers.ImageryTileLayer")],Et);var Lt=Et;export{Lt as default};
//# sourceMappingURL=ImageryTileLayer.465ab681.js.map
