var e=Object.defineProperty,t=Object.defineProperties,i=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,o=(t,i,n)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[i]=n,a=(e,t)=>{for(var i in t||(t={}))s.call(t,i)&&o(e,i,t[i]);if(n)for(var i of n(t))r.call(t,i)&&o(e,i,t[i]);return e},l=(e,n)=>t(e,i(n));import{F as c,G as d,H as u,bq as h,cn as y,mw as p,f8 as g,mx as v,my as _,mz as m,M as f,fd as b,km as C,cq as w,mA as O,B as A,f0 as L,mB as V,kR as T,lj as E,fF as I,mC as R,ab as S,fi as P,br as D,fu as G,ko as H,mD as j,aL as z,jq as x,b1 as F,la as N,gR as U,l9 as B,mE as k,kp as M,mF as W,j8 as $,mG as q,cE as Z,a8 as J,fv as K,ff as Q,mH as X,hN as Y,ew as ee,A as te,eO as ie,ll as ne,m8 as se,gE as re,ig as oe,ih as ae,jM as le,ez as ce}from"./vendor.7103ff48.js";import{m as de}from"./LineVisualElement.a7c721d3.js";let ue=class extends h{constructor(e){super(e),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:y(),observerSurfaceNormal:null,target:y(),targetSurfaceNormal:null,observerAdjusted:y(),targetAdjusted:y()},this.computationResult={start:y(),end:y(),intersection:y(),isValid:!1,isTargetVisible:!1},this.result=null}updateComputationResults(){this.notifyChange("computationResult")}updateInputPoints(){this.notifyChange("inputPoints")}onElevationChange(){this.notifyChange("elevationAlignedTargetLocation")}};c([d()],ue.prototype,"target",void 0),c([d()],ue.prototype,"elevationAlignedTargetLocation",void 0),c([d()],ue.prototype,"inputPoints",void 0),c([d()],ue.prototype,"computationResult",void 0),c([d()],ue.prototype,"result",void 0),ue=c([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightAnalysis")],ue);let he=class extends h{constructor(e){super(e)}initialize(){this.intersector=new g(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=0}getScreenPointIntersection(e){const t=v(e,_.get()),i=m(this.view.state.camera,t,ve);return this._getRayIntersection(i)}_getRayIntersection(e){if(f(e))return null;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this.intersector);const t=this.intersector.results.min,i=ye;if(!t||!t.getIntersectionPoint(i))return null;const n=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference),s=y();b(s,t.normal);const r=C(s,e.direction)>0?-1:1;w(s,s,r);const o=O(t,this.view);if(A(o)){const i=o.layer,r=o.sourceLayer;let a;if(r)switch(r.type){case"scene":a=L(o,r.objectIdField);break;case"integrated-mesh":{const e=t.target;a=`${e.metadata.nodeIndex}/${e.metadata.componentIndex}`;break}default:a=o.uid}else a=o.uid;return{type:"Graphic",id:`${i.uid}/${a}`,ray:V(e),normal:s,point:n}}return"TerrainRenderer"===t.intersector?{type:"Terrain",id:t.target.metadata.tile.lij.slice(),ray:V(e),normal:s,point:n}:null}_canUpdateFromIntersectionResult(e,t){if(f(e)||!t||e.type!==t.type)return!1;switch(e.type){case"Terrain":{const i=e.id,n=t.id;return i[0]===n[0]&&i[1]===n[1]&&i[2]===n[2]||T(i,n)}case"Graphic":case"I3S":return e.id===t.id}}updateFromIntersectionResult(e){let t;if("Terrain"===e.type&&A(e.point)){const i=ye,n=pe,s=ge;this.view.renderCoordsHelper.toRenderCoords(e.point,n),this.view.renderCoordsHelper.worldUpAtPosition(n,s);const r=this.view.basemapTerrain.elevationBounds,o=this.view.renderCoordsHelper.getAltitude(n),a=r?Math.abs(r.max-r.min)/Math.abs(o):100,l=o>0?1:-1;E(s,s),w(s,s,l*a),I(i,n,s),R(i,n,ve),t=this._getRayIntersection(ve)}else t=this._getRayIntersection(e.ray);return this._canUpdateFromIntersectionResult(t,e)?t.point:null}};c([d()],he.prototype,"view",void 0),c([d()],he.prototype,"intersector",void 0),he=c([u("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightRayIntersector")],he);const ye=y(),pe=y(),ge=y(),ve=p();let _e=class extends h{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null}};c([d()],_e.prototype,"target",void 0),c([d()],_e.prototype,"intersectedGraphic",void 0),c([d()],_e.prototype,"intersectedLocation",void 0),c([d()],_e.prototype,"elevationAlignedTargetLocation",void 0),c([d()],_e.prototype,"visible",void 0),_e=c([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightResult")],_e);let me=class extends(S.EventedMixin(h)){constructor(e){super(e),this._tasks=P,this._handles=new D,this._analysisHandles=new D}initialize(){var e;const t=null==(e=this.view.resourceController)?void 0:e.scheduler;t&&(this._tasks=t.registerTask(G.LINE_OF_SIGHT_TOOL)),this._handles.add([this._connectObserver(),this._connectAnalyses(),this._connectTargets()]),this._intersector=new he({view:this.view})}destroy(){this._handles.destroy(),this._analysisHandles.destroy(),this._analyses.removeAll()}get updating(){return this._tasks.updating}get priority(){return this._tasks.priority}set priority(e){this._tasks.priority=e}get _analyses(){return this.layerViewData.analyses}get _observerEngineLocation(){return this.layerViewData.observerEngineLocation}set _observerEngineLocation(e){this.layerViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._observerEngineLocation)}getLineOfSightComputationDependencies(e){const{inputPoints:t}=e;return{inputPoints:t}}computeAnalysis(e){const{analysis:t}=e,{inputPoints:i,computationResult:n}=t,{observerAdjusted:s,targetAdjusted:r}=i,{start:o,end:a}=n;b(o,s),b(a,r),this._canComputeAnalysis(t)?this._computeAnalysisIntersection(e):this._interpolateAnalysisIntersection(e),t.updateComputationResults(),this.emit("result-changed",{target:e.analysis.target,result:t.result})}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:n}=e,{observer:s,observerSurfaceNormal:r,target:o,targetSurfaceNormal:a,observerAdjusted:l,targetAdjusted:c}=n,d=Ce;A(r)?b(d,r):H(d,o,s);const u=t;E(d,d),w(d,d,Math.min(u,1)),I(l,s,d),A(a)?b(d,a):H(d,s,o);const h=i.state.camera.computeScreenPixelSizeAt(o);E(d,d),w(d,d,Math.min(h,1)),I(c,o,d)}_computeAnalysisIntersection({analysis:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:s}=i;if(f(n))return;const r=this._intersector.intersector,{computationResult:o,inputPoints:a}=e,{observer:l,target:c}=a,{start:d,end:u}=o,h=R(d,u,we);n.intersectToolIntersectorRay(h,r);const y=o.intersection,p=Ce,g=!!r.results.min&&r.results.min.getIntersectionPoint(y);let v=!0;if(g){b(t.originalIntersection,y),b(t.originalObserver,d),b(t.originalTarget,u),s.fromRenderCoords(y,p,i.spatialReference);const e=1-j(u,c)/j(d,c);v=j(l,y)>=e*j(l,c)}const _=new z(p,i.spatialReference);{const{result:t,target:n}=e;A(t)?(t.target=n,t.intersectedGraphic=v?null:O(r.results.min,i),t.intersectedLocation=v?null:_,t.visible=!!g&&v):e.result=new _e({target:n,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:v?null:O(r.results.min,i),intersectedLocation:v?null:_,visible:!!g&&v})}o.isValid=a.isValid=!0,o.isTargetVisible=v}_interpolateAnalysisIntersection({analysis:e,interpolationInfo:t}){const{computationResult:i,inputPoints:n}=e,{start:s,end:r,intersection:o}=i,{originalIntersection:a,originalObserver:l,originalTarget:c}=t;if(b(o,a),n.isValid){const e=Ce,t=j(l,a)/j(l,c);x(e,s,l),w(e,e,1-t),I(o,o,e),x(e,r,c),w(e,e,t),I(o,o,e),i.isValid=!0}else e.result=new _e,i.isValid=!1,i.isTargetVisible=!1}_canComputeAnalysis(e){const t=this.layerViewData.elevationAlignedObserver,i=this.view.frustum;if(f(t)||f(e.target)||f(i))return!1;const{observerAdjusted:n,targetAdjusted:s}=e.inputPoints,r=i.intersectsPoint(n),o=i.intersectsPoint(s);return r&&o}_onObserverChange(e){if(f(e))return this.layer.targets.removeAll(),void(this.layerViewData.elevationAlignedObserver=null);this.layerViewData.elevationAlignedObserver=this._applyElevationAlignment(e,this.layer.intersection);const t=y();this.view.renderCoordsHelper.toRenderCoords(this.layerViewData.elevationAlignedObserver,t),this._observerEngineLocation=t,this.priority=G.LINE_OF_SIGHT_TOOL_INTERACTIVE}_applyElevationAlignment(e,t){if(e.hasZ&&(f(t)||"Graphic"===t.type))return e;const i=e.clone();return i.z=F(N(this.view.elevationProvider,i),0),i}_onObserverChangeForAnalysis(e){e.inputPoints.isValid=!1}_onObserverEngineForAnalysis(e,t,i){const{inputPoints:n}=e;if(b(n.observer,t),A(i)){const e=this._intersector.updateFromIntersectionResult(i);A(e)&&this.view.renderCoordsHelper.toRenderCoords(e,n.observer),n.observerSurfaceNormal=U(i.normal)}else n.observerSurfaceNormal=null;this._adjustStartEndPositions(e),e.updateInputPoints(),this.priority=G.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetLocationChange(e,t,i){const{inputPoints:n}=e;if(n.isValid=!1,A(t)){if(e.elevationAlignedTargetLocation=this._applyElevationAlignment(t,i),this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,n.target),A(i)){const e=this._intersector.updateFromIntersectionResult(i);A(e)&&this.view.renderCoordsHelper.toRenderCoords(e,n.target),n.targetSurfaceNormal=U(i.normal)}else n.targetSurfaceNormal=null;this._adjustStartEndPositions(e),e.updateInputPoints()}this.priority=G.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectAnalysisToTarget(e){return B((()=>({analysis:e,targetLocation:e.target.location,targetIntersection:e.target.intersection})),(({analysis:e,targetLocation:t,targetIntersection:i})=>{A(t)&&this._onTargetLocationChange(e,t,i)}))}_connectAnalysisToObserver(e){return B((()=>({analysis:e,observer:this.layerViewData.elevationAlignedObserver})),(({analysis:e})=>{this._onObserverChangeForAnalysis(e)}))}_connectAnalysisToObserverEngine(e){return B((()=>({analysis:e,observer:this._observerEngineLocation,observerIntersection:this.layer.intersection})),(({analysis:e,observer:t,observerIntersection:i})=>{this._onObserverEngineForAnalysis(e,t,i)}))}_connectAnalysisToCamera(e){return k((()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty})),(({isDirty:t})=>{e.inputPoints.isValid&&!t||e.updateInputPoints()}))}_connectAnalysisToElevation(e){return this.view.elevationProvider.on("elevation-change",(t=>{if(!this._canComputeAnalysis(e))return;const i=this.layer.observer;fe(t.extent,t.spatialReference,i)&&this._onObserverChange(i);const n=e.target;A(n)&&fe(t.extent,t.spatialReference,n.location)&&e.onElevationChange()}))}_connectAnalysisForCompute(e){let t=X;const i={analysis:e,interpolationInfo:{originalIntersection:y(),originalObserver:y(),originalTarget:y()}};return $([B((()=>this.getLineOfSightComputationDependencies(e)),(()=>{t=q(t),t=Z((async e=>{await Y(this._tasks.schedule((()=>this.computeAnalysis(i)),e))}))})),J((()=>t=q(t)))])}_connectAnalysis(e){const t=this._analysisHandles;t.has(e)||t.add([this._connectAnalysisToTarget(e),this._connectAnalysisToObserver(e),this._connectAnalysisToObserverEngine(e),this._connectAnalysisToCamera(e),this._connectAnalysisToElevation(e),this._connectAnalysisForCompute(e)])}_disconnectAnalysis(e){this._analysisHandles.remove(e)}_onAnalysesCollectionChange(e){e.added.forEach((e=>this._connectAnalysis(e))),e.removed.forEach((e=>this._disconnectAnalysis(e)))}_onTargetsChange(e){return this._analyses.removeAll(),e.items.length>0&&e.forEach((e=>this._addTarget(e))),e.on("change",(e=>this._onTargetCollectionChange(e)))}_onTargetCollectionChange(e){e.added.forEach((e=>this._addTarget(e))),e.removed.forEach((e=>this._removeTarget(e)))}_onCursorTargetChange(e,t){A(t)&&this._removeTarget(t),A(e)&&this._addTarget(e)}_addTarget(e){const t=this._analyses;t.some((t=>t.target===e))||t.add(new ue({target:e}))}_removeTarget(e){const t=this._analyses,i=t.find((t=>t.target===e));t.remove(i)}_connectObserver(){return $([B((()=>this.layer.observer),(e=>this._onObserverChange(e)))])}_connectAnalyses(){let e=null;return $([B((()=>this._analyses),(t=>{e=K(e),e=t.on("change",(e=>this._onAnalysesCollectionChange(e))),t.forEach((e=>this._connectAnalysis(e)))})),J((()=>e=K(e)))])}_connectTargets(){let e=null;return $([B((()=>this.layer.targets),(t=>{e=K(e),e=this._onTargetsChange(t)})),B((()=>this.layerViewData.cursorTarget),((e,t)=>{this._onCursorTargetChange(e,t)})),J((()=>{e=K(e)}))])}get _isCameraDirty(){const e=this.layerViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(f(e)||f(i))return!1;const n=Ce;i.toRenderCoords(e,n);const s=t.state.camera.computeScreenPixelSizeAt(n);return Math.abs((s-this._screenPixelSize)/this._screenPixelSize)>be}};function fe(e,t,i){return!f(i)&&(M(e,t,Oe,i.spatialReference),W(Oe,i))}c([d({constructOnly:!0})],me.prototype,"layer",void 0),c([d({constructOnly:!0})],me.prototype,"layerViewData",void 0),c([d({constructOnly:!0})],me.prototype,"view",void 0),c([d()],me.prototype,"updating",null),c([d()],me.prototype,"priority",null),c([d()],me.prototype,"_analyses",null),c([d()],me.prototype,"_observerEngineLocation",null),c([d()],me.prototype,"_screenPixelSize",null),c([d()],me.prototype,"_tasks",void 0),c([d()],me.prototype,"_isCameraDirty",null),me=c([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightController")],me);const be=.1,Ce=y(),we=p(),Oe=Q();let Ae=class extends h{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new ee([3,252,111,1]),this.visibleOuterColor=new ee([3,252,111,.15]),this.occludedInnerColor=new ee([252,3,69,1]),this.occludedOuterColor=new ee([252,3,69,.1]),this.undefinedInnerColor=new ee([255,255,255,1]),this.undefinedOuterColor=new ee([127,127,127,.2])}};c([d({type:Number})],Ae.prototype,"innerWidth",void 0),c([d({type:Number})],Ae.prototype,"outerWidth",void 0),c([d({type:ee})],Ae.prototype,"visibleInnerColor",void 0),c([d({type:ee})],Ae.prototype,"visibleOuterColor",void 0),c([d({type:ee})],Ae.prototype,"occludedInnerColor",void 0),c([d({type:ee})],Ae.prototype,"occludedOuterColor",void 0),c([d({type:ee})],Ae.prototype,"undefinedInnerColor",void 0),c([d({type:ee})],Ae.prototype,"undefinedOuterColor",void 0),Ae=c([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightConfiguration")],Ae);let Le=class extends h{constructor(){super(...arguments),this.analyses=new te,this.elevationAlignedObserver=null,this.configuration=new Ae,this.observerEngineLocation=y(),this.cursorTarget=null}};c([d()],Le.prototype,"analyses",void 0),c([d()],Le.prototype,"elevationAlignedObserver",void 0),c([d({type:Ae})],Le.prototype,"configuration",void 0),c([d()],Le.prototype,"observerEngineLocation",void 0),c([d()],Le.prototype,"cursorTarget",void 0),Le=c([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightLayerViewData")],Le);let Ve=class extends h{constructor(e){super(e),this._handle=null,this._analysisHandles=new D}initialize(){this._handle=this._connectAnalyses()}destroy(){this._handle=K(this._handle),this._analysisHandles=ie(this._analysisHandles)}get visible(){return this.layerView.visible&&!this.layerView.suspended}get _analyses(){return this.layerView.layerViewData.analyses}get _configuration(){return this.layerView.layerViewData.configuration}get _opacity(){return this.layerView.fullOpacity}createLineOfSightVisualization(){const e=this._configuration,t=this._opacity,i={view:this.view,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},n=ee.toUnitRGBA(e.visibleOuterColor);ne(n,n,t);const s=ee.toUnitRGBA(e.visibleInnerColor);ne(s,s,t);const r=ee.toUnitRGBA(e.occludedOuterColor);ne(r,r,t);const o=ee.toUnitRGBA(e.occludedInnerColor);ne(o,o,t);const c=ee.toUnitRGBA(e.undefinedOuterColor);ne(c,c,t);const d=ee.toUnitRGBA(e.undefinedInnerColor);return ne(d,d,t),{visibleLineVisualElement:new de(l(a({},i),{color:n,innerColor:s})),occludedLineVisualElement:new de(l(a({},i),{color:r,innerColor:o})),undefinedLineVisualElement:new de(l(a({},i),{color:c,innerColor:d}))}}destroyLineOfSightVisualization(e){e.visibleLineVisualElement=ie(e.visibleLineVisualElement),e.occludedLineVisualElement=ie(e.occludedLineVisualElement),e.undefinedLineVisualElement=ie(e.undefinedLineVisualElement)}updateLineOfSightVisualization(e,t){const i=this.visible,n=this._configuration,{computationResult:s,inputPoints:r}=e,{start:o,end:a,intersection:l,isValid:c,isTargetVisible:d}=s,{observer:u}=r,h=Re;h[12]=u[0],h[13]=u[1],h[14]=u[2];const y=H(Te,o,u),p=H(Ee,a,u),g=H(Ie,l,u),{visibleLineVisualElement:v,occludedLineVisualElement:_,undefinedLineVisualElement:m}=t;if(!i)return v.visible=!1,_.visible=!1,void(m.visible=!1);if(v.visible=!0,_.visible=!0,m.visible=!0,v.geometry=null,_.geometry=null,m.geometry=null,c)if(d){v.geometry=[[se(y),se(p)]],v.transform=h;const e=ee.toUnitRGBA(n.visibleOuterColor);v.color=ne(e,e,this._opacity)}else{v.geometry=[[se(y),se(g)]],v.transform=h;const e=ee.toUnitRGBA(n.occludedOuterColor);v.color=ne(e,e,this._opacity),_.geometry=[[se(g),se(p)]],_.transform=h}else m.geometry=[[se(y),se(p)]],m.transform=h}updateVisualizationOpacity(e,t){const i=this._configuration,n=this._opacity,s=ee.toUnitRGBA(i.visibleOuterColor);ne(s,s,n);const r=ee.toUnitRGBA(i.visibleInnerColor);ne(r,r,n);const o=ee.toUnitRGBA(i.occludedOuterColor);ne(o,o,n);const a=ee.toUnitRGBA(i.occludedInnerColor);ne(a,a,n);const l=ee.toUnitRGBA(i.undefinedOuterColor);ne(l,l,n);const c=ee.toUnitRGBA(i.undefinedInnerColor);ne(c,c,n),t.visibleLineVisualElement.color=e.computationResult.isTargetVisible?s:o,t.visibleLineVisualElement.innerColor=r,t.occludedLineVisualElement.color=o,t.occludedLineVisualElement.innerColor=a,t.undefinedLineVisualElement.color=l,t.undefinedLineVisualElement.innerColor=c}getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:n}=this._configuration;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible}}_connectAnalysis(e){const t=this._analysisHandles;if(t.has(e))return;const i=this.createLineOfSightVisualization();t.add([B((()=>this.getLineOfSightVisualizationDependencies(e)),(()=>this.updateLineOfSightVisualization(e,i))),k((()=>this._opacity),(()=>this.updateVisualizationOpacity(e,i))),J((()=>this.destroyLineOfSightVisualization(i)))],e)}_disconnectAnalysis(e){this._analysisHandles.remove(e)}_connectAnalyses(){let e=null;return $([B((()=>this._analyses),(t=>{e=K(e),e=t.on("change",(e=>this._onAnalysesCollectionChange(e))),this._onAnalysesCollectionChange({target:t,added:t.items,removed:[],moved:[]})})),J((()=>e=K(e)))])}_onAnalysesCollectionChange(e){e.added.forEach((e=>this._connectAnalysis(e))),e.removed.forEach((e=>this._disconnectAnalysis(e)))}};c([d({constructOnly:!0})],Ve.prototype,"layer",void 0),c([d({constructOnly:!0})],Ve.prototype,"layerView",void 0),c([d({constructOnly:!0})],Ve.prototype,"view",void 0),c([d({readOnly:!0})],Ve.prototype,"visible",null),c([d()],Ve.prototype,"_analyses",null),c([d()],Ve.prototype,"_configuration",null),c([d()],Ve.prototype,"_opacity",null),Ve=c([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightView")],Ve);const Te=y(),Ee=y(),Ie=y(),Re=re();let Se=class extends(oe(ae)){constructor(){super(...arguments),this.type="line-of-sight-3d",this.layerViewData=new Le}initialize(){const e=this.view,t=this.layer;this._analysisController=new me({layer:t,layerViewData:this.layerViewData,view:e}),this._analysisView=new Ve({layer:t,layerView:this,view:e}),this.handles.add([this._analysisController.on("result-changed",(e=>{e.target!==this.layerViewData.cursorTarget&&this.emit("result-changed",e)}))])}destroy(){this._analysisController=ie(this._analysisController),this._analysisView=ie(this._analysisView)}get results(){return this.layerViewData.analyses.map((e=>e.result))}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}getResultForTarget(e){const t=this.layerViewData.analyses.find((t=>t.target===e)),i=le(t,(e=>e.result));return F(i,null)}isUpdating(){return ce(this._analysisController,!1,(e=>e.updating))}get testData(){return{view:this._analysisView,controller:this._analysisController}}};c([d({readOnly:!0})],Se.prototype,"type",void 0),c([d()],Se.prototype,"layer",void 0),c([d({readOnly:!0})],Se.prototype,"results",null),c([d()],Se.prototype,"priority",null),c([d()],Se.prototype,"layerViewData",void 0),c([d()],Se.prototype,"_analysisController",void 0),c([d()],Se.prototype,"_analysisView",void 0),Se=c([u("esri.views.3d.layers.LineOfSightLayerView3D")],Se);var Pe=Se;export{Se as LineOfSightLayerView3D,Pe as default};
//# sourceMappingURL=LineOfSightLayerView3D.0c6d31cd.js.map
