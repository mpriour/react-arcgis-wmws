{"version":3,"file":"6931.fa129319.iframe.bundle.js","mappings":";;;;;;;;;;;AAeA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA","sources":["webpack://react-arcgis-wmws/./node_modules/@arcgis/core/chunks/MeasurementArrow.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as t}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";function o(){const o=new t;o.vertex.uniforms.add(\"proj\",\"mat4\").add(\"view\",\"mat4\").add(\"width\",\"float\"),o.attributes.add(\"position\",\"vec3\"),o.attributes.add(\"normal\",\"vec3\"),o.attributes.add(\"uv0\",\"vec2\"),o.attributes.add(\"auxpos1\",\"float\"),o.varyings.add(\"vtc\",\"vec2\"),o.varyings.add(\"vlength\",\"float\"),o.varyings.add(\"vradius\",\"float\"),o.vertex.code.add(e`\n    void main(void) {\n      vec3 bitangent = normal;\n\n      vtc = uv0;\n      vlength = auxpos1;\n      vradius = 0.5 * width;\n\n      vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);\n      gl_Position = proj * pos;\n    }\n  `),o.fragment.uniforms.add(\"outlineSize\",\"float\").add(\"outlineColor\",\"vec4\").add(\"stripeLength\",\"float\").add(\"stripeEvenColor\",\"vec4\").add(\"stripeOddColor\",\"vec4\");const r=1/Math.sqrt(2);return o.fragment.code.add(e`\n    const float INV_SQRT2 = ${e.float(r)};\n\n    vec4 arrowColor(vec2 tc, float len) {\n      float d = INV_SQRT2 * (tc.x - abs(tc.y));\n      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));\n      d = min(d, 1.0 - abs(tc.y));\n\n      if (d < 0.0) {\n        return vec4(0.0);\n      } else if (d < outlineSize) {\n        return outlineColor;\n      } else {\n        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;\n      }\n    }\n\n    void main(void) {\n      vec2 ntc = vec2(vtc.x / vradius, vtc.y);\n      vec4 color = arrowColor(ntc, vlength / vradius);\n      if (color.a == 0.0) {\n        discard;\n      }\n      gl_FragColor = color;\n    }\n  `),o}var r=Object.freeze({__proto__:null,build:o});export{r as M,o as b};\n"],"names":[],"sourceRoot":""}