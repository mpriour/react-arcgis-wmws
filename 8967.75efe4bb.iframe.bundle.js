(self.webpackChunkreact_arcgis_wmws=self.webpackChunkreact_arcgis_wmws||[]).push([[8967],{28967:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>ImageryTileLayer});var tslib_es6=__webpack_require__(56140),maybe=(__webpack_require__(95830),__webpack_require__(59472)),Logger=__webpack_require__(36544),ensureType=__webpack_require__(68055),property=__webpack_require__(79881),jsonMap=__webpack_require__(56274),enumeration=__webpack_require__(9870),reader=__webpack_require__(30590),subclass=__webpack_require__(87566),Error=__webpack_require__(32656),urlUtils=__webpack_require__(10923),PopupTemplate=(__webpack_require__(57002),__webpack_require__(86035),__webpack_require__(58484)),Layer=__webpack_require__(56700),MultiOriginJSONSupport=__webpack_require__(43072),commonProperties=__webpack_require__(18152),OperationalLayer=__webpack_require__(78910),rasterRenderers=__webpack_require__(99657),Field=__webpack_require__(70834),BlendLayer=__webpack_require__(57407),PortalLayer=__webpack_require__(33716),RefreshableLayer=__webpack_require__(2194),ScaleRangeLayer=__webpack_require__(10113),popupUtils=__webpack_require__(43551),aliasOf=__webpack_require__(51894),spatialReferenceUtils=__webpack_require__(27780),SpatialReference=__webpack_require__(73032),Extent=__webpack_require__(52937),request=(__webpack_require__(36348),__webpack_require__(36654)),arcgisLayerUrl=__webpack_require__(97849),TileInfo=__webpack_require__(40920),DimensionalDefinition=__webpack_require__(50557),RasterJobHandler=__webpack_require__(68509),rasterRendererHelper=__webpack_require__(92663),RasterSymbolizer=__webpack_require__(9628);const J=Logger.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),x=r=>{let x=class extends r{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",(0,arcgisLayerUrl.Nm)(e,J))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,rasterRendererHelper.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(r&&r.pixels&&r.pixels.length>0))return null;let i;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:n}=this;return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const r=(0,spatialReferenceUtils.C5)(e);return TileInfo.Z.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(i.requestAsImageElement){const s=this.getTileUrl(e,t,r);return(0,request.default)(s,{responseType:"image",query:{sliceId:this._sliceId,_ts:i.timestamp},signal:i.signal}).then((e=>e.data))}await this._initJobHandler();const s="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:s,...i}}return this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i}}return this.raster.fetchPixels(e,t,r,i)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new RasterJobHandler.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,rasterRendererHelper.In)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if((0,maybe.pC)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],r=[];t.dimensions.forEach((e=>{r.push(new DimensionalDefinition.Z({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=r}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,r;this.bandIds||(this.bandIds=(0,rasterRendererHelper.YD)(e)),this.renderer||(this.renderer=(0,rasterRendererHelper.Ob)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(r=t[0])?void 0:r.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=(0,rasterRendererHelper.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new RasterSymbolizer.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||J.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"_cachedRendererJson",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"_sliceId",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"_compatibleFullExtent",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"_rasterJobHandler",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"copyright",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Extent.Z}),(0,aliasOf.B)("rasterInfo.extent")],x.prototype,"fullExtent",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"ioConfig",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[DimensionalDefinition.Z]})],x.prototype,"multidimensionalDefinition",null),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0}),(0,aliasOf.B)("raster.rasterInfo")],x.prototype,"rasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.Cb)({type:SpatialReference.Z}),(0,aliasOf.B)("rasterInfo.spatialReference")],x.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:TileInfo.Z}),(0,aliasOf.B)("rasterInfo.storageInfo.tileInfo")],x.prototype,"tileInfo",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],x.prototype,"url",null),(0,tslib_es6._)([(0,property.Cb)({types:rasterRenderers.dr})],x.prototype,"renderer",null),(0,tslib_es6._)([(0,property.Cb)()],x.prototype,"symbolizer",void 0),x=(0,tslib_es6._)([(0,subclass.j)("esri.layers.ImageryTileMixin")],x),x};var Point=__webpack_require__(61106),FeatureSet=__webpack_require__(76194),RasterInfo=__webpack_require__(37172),JSONSupport=__webpack_require__(58385);let s=class extends JSONSupport.wq{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],s.prototype,"blockWidth",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],s.prototype,"blockHeight",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],s.prototype,"compression",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],s.prototype,"origin",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],s.prototype,"firstPyramidLevel",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],s.prototype,"maximumPyramidLevel",void 0),(0,tslib_es6._)([(0,property.Cb)()],s.prototype,"pyramidScalingFactor",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],s.prototype,"pyramidBlockWidth",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],s.prototype,"pyramidBlockHeight",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],s.prototype,"isVirtualTileInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],s.prototype,"tileInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],s.prototype,"blockBoundary",void 0),s=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.RasterStorageInfo")],s);const RasterStorageInfo=s;var promiseUtils=__webpack_require__(39105),core_Promise=__webpack_require__(75044),RasterCodec=__webpack_require__(8985),pixelUtils=__webpack_require__(44464),rasterProjectionHelper=__webpack_require__(52606),RawBlockCache=__webpack_require__(53585);let S=class extends((0,core_Promise.v)(JSONSupport.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,rasterProjectionHelper.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:TileInfo.Z.create(),...e.ioConfig}}),e}set url(e){this._set("url",(0,arcgisLayerUrl.Nm)(e,Logger.Z.getLogger(this.declaredClass)))}async open(e){throw new Error.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,r,o,i={}){var n;const{tileInfo:s}=i,a=s.lodAt(e),l=this.getTileExtent({x:a.resolution,y:a.resolution},r,o,s.origin,s.spatialReference,s.size);return null!=(n=i.multidimensionalDefinition)&&n.length&&(0,maybe.pC)(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],i)}async identify(e,r={}){const{spatialReference:o,extent:i}=this.rasterInfo,{datumTransformation:n}=r;let s=(0,rasterProjectionHelper.nF)(e,o,n);if(!i.intersects(s))return{location:s,value:null};if((0,maybe.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(r.srcResolution)a=(0,rasterProjectionHelper.kr)(r.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,r),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:m,colOffset:f}=l,h=(0,RawBlockCache.Rq)(this.url,r.sliceId),d=`${a}/${c}/${u}`;let p=(0,RawBlockCache.Qg)(h,null,d);(0,maybe.pC)(p)||(p=this.fetchRawTile(a,c,u,r),(0,RawBlockCache.gX)(h,null,d,p));const x=await p;if(!(x&&x.pixels&&x.pixels.length>0))return{location:s,value:null};const y=m*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!x.mask||x.mask[y]?x.pixels.map((e=>e[y])):null,pyramidLevel:a}}async fetchPixels(e,t,o,i={}){const n=e.clone().normalize();e=n[0];const s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=i,c=new Point.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/o,spatialReference:e.spatialReference}),m=i.srcResolution||(a?(0,rasterProjectionHelper.VO)(c,s,e,l):c);if(!m)return null;const{pyramidLevel:f,pyramidResolution:h,excessiveReading:d}=(0,rasterProjectionHelper.kr)(m,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let x=a?(0,rasterProjectionHelper.tB)(e,s,l):e;const y=(0,maybe.Wg)(this.rasterInfo.transform);if(y&&(x=y.inverseTransform(x)),null==x)return null;const I={x:Math.floor((x.xmin-p.origin.x)/h.x+.1),y:Math.floor((p.origin.y-x.ymax)/h.y+.1)},k=Math.ceil((x.xmax-x.xmin)/h.x-.1),v=Math.ceil((x.ymax-x.ymin)/h.y-.1);if(k/t>8||v/o>8)return null;const B=await this.fetchRawPixels(f,I,{width:k,height:v},i);if(!B)return null;const P=f>0?p.pyramidBlockWidth:p.blockWidth,j=f>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===B.pixelBlocks.length&&P===t&&j===o&&m.x===c.x&&m.y===c.y)return{extent:e,srcExtent:x,pixelBlock:B.pixelBlocks[0]};const T=(0,rasterProjectionHelper.Qp)(e,B.extent,c,l,y);let F;const S=!i.requestRawData,L={rows:T.spacing[0],cols:T.spacing[1]},{pixelBlocks:D,mosaicSize:H,isPartiallyFilled:U}=B;if(this.rasterJobHandler)F=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:H,destDimension:S?{width:t,height:o}:null,coefs:S?T.coefficients:null,sampleSpacing:S?L:null,interpolation:i.interpolation},i);else{const e=(0,pixelUtils.us)(D,H);F=S?(0,pixelUtils.Uk)(e,{width:t,height:o},T.coefficients,L,i.interpolation):e}return i.requestRawData?{srcExtent:x,pixelBlock:F,transformGrid:T,extent:e,isPartiallyFilled:U}:{srcExtent:x,extent:e,pixelBlock:F}}async fetchRawPixels(e,t,r,o){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:a}=this.getBlockWidthHeight(e);let{x:l,y:c}=t,{width:u,height:f}=r;o.buffer&&(l-=o.buffer.cols,c-=o.buffer.rows,u+=2*o.buffer.cols,f+=2*o.buffer.rows);const h=Math.floor(l/s),d=Math.floor(c/a),p=Math.floor((l+u-1)/s),x=Math.floor((c+f-1)/a),y=n[e];if(!y)return null;const{minRow:g,minCol:w,maxCol:I,maxRow:k}=y;if(x<g||p<w||d>k||h>I)return null;const v=[];let R,b=!1;for(let m=d;m<=x;m++)for(let t=h;t<=p;t++)m>=g&&t>=w&&k>=m&&I>=t?(R=this._fetchRawTile(e,m,t,o),this.ioConfig.allowPartialFill&&(R=new Promise((e=>{R.then((t=>e(t))).catch((()=>{b=!0,e(null)}))}))),v.push(R)):v.push(null);if(0===v.length)return null;const M=await Promise.all(v),C={height:(x-d+1)*s,width:(p-h+1)*a},{nativePixelSize:B,spatialReference:P}=this.rasterInfo,j=B.x*2**e,T=B.y*2**e;return{extent:new Extent.Z({xmin:i.x+h*s*j,xmax:i.x+(p+1)*s*j,ymin:i.y-(x+1)*a*T,ymax:i.y-d*a*T,spatialReference:P}),pixelBlocks:M,mosaicSize:C,isPartiallyFilled:b}}async fetchRawTile(e,t,r,o){throw new Error.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,rasterProjectionHelper.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,RasterCodec.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var o,i;const{customFetchParameters:n}=this.ioConfig,{range:s,query:a,headers:l}=t;r=null!=(o=null!=(i=r)?i:t.retryCount)?o:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await(0,request.default)(e,{...t,query:{...a,...n},headers:{...l,...c}})}catch(u){if(r>0)return r--,this.request(e,t,r);throw u}}getSliceIndex(e){const{multidimensionalInfo:r}=this.rasterInfo;if(!(0,maybe.pC)(r)||null==e||!e.length)return null;let o=0;const i=e[0].variableName;for(let t=0;t<r.variables.length;t++){const n=r.variables[t],s=n.dimensions;if(n.name!==i){o+=s.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const a=s.map((e=>this._getDimensionValuesCount(e))),l=s.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===s[t].name))[0];if(null==r)return null;const i=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(i,s[t]);if(-1===n)return null;a.shift(),o+=t===l-1?n:n*a.reduce(((e,t)=>e+t))}}return o}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const i=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)i.push({level:n-e,resolution:s,scale:a}),s*=2,a*=2;const l=new Point.Z({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new TileInfo.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:i}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,r=512,o){const{width:i,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new Point.Z({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const m=this._computeBlockBoundary(s,a,o,512,512);e.storageInfo=new RasterStorageInfo({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,r){const{spatialReference:o,nativePixelSize:i,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,m=(0,rasterProjectionHelper.nF)(e,o,r);if(!n.intersects(m))return null;if(t<0||t>l)return null;const f=c**t,h=f*i.x,d=f*i.y,p=(u.y-m.y)/d/a,x=(m.x-u.x)/h/s,y=Math.min(a-1,Math.floor((p-Math.floor(p))*a)),g=Math.min(s-1,Math.floor((x-Math.floor(x))*s));return{pyramidLevel:t,row:Math.floor(p),col:Math.floor(x),rowOffset:y,colOffset:g,srcLocation:m}}getTileExtent(e,t,r,o,i,n){const[s,a]=n,l=o.x+r*s*e.x,c=l+s*e.x,u=o.y-t*a*e.y,f=u-a*e.y;return new Extent.Z({xmin:l,xmax:c,ymin:f,ymax:u,spatialReference:i})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,r){const o=this.rasterInfo.storageInfo.blockBoundary[e];return!o||o.maxRow<t||o.maxCol<r||o.minRow>t||o.minCol>r}_computeBlockBoundary(e,t,r,o,i){let{x:n,y:s}=t;const a=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/s),maxRow:Math.floor((l-e.ymin-.1*s)/i/s)}];if(r>0)for(let u=0;u<r;u++)n*=2,s*=2,c.push({minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/n),maxRow:Math.floor((l-e.ymin-.1*s)/i/n)});return c}_fetchRawTile(e,r,o,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:c,maxCol:u,maxRow:m}=n;if(r<s||o<c||r>m||o>u)return Promise.resolve(null);const f=(0,RawBlockCache.Rq)(this.url,i.sliceId),h=`${e}/${r}/${o}`;let d=(0,RawBlockCache.Qg)(f,i.registryId,h);if(!(0,maybe.pC)(d)){const t=(0,promiseUtils.yi)();d=this.fetchRawTile(e,r,o,{...i,signal:t.signal}),(0,RawBlockCache.gX)(f,i.registryId,h,d,t),d.catch((()=>{(0,RawBlockCache.Gc)(f,i.registryId,h)}))}return i.signal&&(0,promiseUtils.fu)(i,(()=>{(0,RawBlockCache.OE)(f,i.registryId,h)})),d}_getIndexFromDimensions(e,t){const{extent:r,interval:o,unit:i,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>r[1])return-1;const s=r[0];let a=-1;if("ISO8601"===i){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":a=Math.round((e-s)/1e3/o);break;case"minutes":a=Math.round((e-s)/6e4/o);break;case"hours":a=Math.round((e-s)/36e5/o);break;case"days":a=Math.round((e-s)/864e5/o);break;case"years":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/o);break;case"decades":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/o)}return a}return Math.round((e-s)/o)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:o,values:i}=e;let n=(null==i?void 0:i.length)||0;if(n)return n;const s=t[0];if(0===n&&"ISO8601"===o){var a;switch((null==(a=e.intervalUnit)?void 0:a.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/r);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/r);break;case"hours":n=Math.round((t[1]-t[0])/36e5/r);break;case"days":n=Math.round((t[1]-t[0])/864e5/r);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r)}return n}return Math.round((t[1]-t[0])/r)}};(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],S.prototype,"url",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],S.prototype,"datasetName",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],S.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],S.prototype,"rasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],S.prototype,"ioConfig",void 0),(0,tslib_es6._)([(0,property.Cb)()],S.prototype,"sourceJSON",void 0),S=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.BaseRaster")],S);const BaseRaster=S;var byteStreamUtils=__webpack_require__(25843);function t(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:i,features:a}}const DBFParser=class r{static get supportedVersions(){return[5]}static parse(r){const n=new DataView(r),i=3&n.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),o=n.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:o};let p=32;const g=[],u=[];let d;if(3===i){for(;13!==n.getUint8(p);)d=String.fromCharCode(n.getUint8(p+11)).trim(),g.push({name:(0,byteStreamUtils.f)(new Uint8Array(r,p,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:n.getUint8(p+16)}),p+=32;if(p+=1,g.length>0)for(;u.length<s&&r.byteLength-p>o;){const t=[];32===n.getUint8(p)?(p+=1,g.forEach((n=>{if("C"===n.type)t.push((0,byteStreamUtils.f)(new Uint8Array(r,p,n.length)).trim());else if("N"===n.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim(),10));else if("F"===n.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim()));else if("D"===n.type){const e=String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim();t.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)))}p+=n.length})),u.push(t)):p+=o}}return{header:l,fields:g,records:u,recordSet:t({fields:g,records:u})}}};let IdentityTransform_p=class extends JSONSupport.wq{constructor(){super(...arguments),this.type="identity"}forwardTransform(r){return r}inverseTransform(r){return r}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],IdentityTransform_p.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,enumeration.J)({IdentityXform:"identity"})],IdentityTransform_p.prototype,"type",void 0),IdentityTransform_p=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterTransforms.IdentityTransform")],IdentityTransform_p);const IdentityTransform=IdentityTransform_p;var writer=__webpack_require__(60538);function l(e,r,o){const{x:t,y:s}=r;if(o<2)return{x:e[0]+t*e[2]+s*e[4],y:e[1]+t*e[3]+s*e[5]};if(2===o){const r=t*t,o=s*s,n=t*s;return{x:e[0]+t*e[2]+s*e[4]+r*e[6]+n*e[8]+o*e[10],y:e[1]+t*e[3]+s*e[5]+r*e[7]+n*e[9]+o*e[11]}}const n=t*t,i=s*s,f=t*s,p=n*t,l=n*s,c=t*i,a=s*i;return{x:e[0]+t*e[2]+s*e[4]+n*e[6]+f*e[8]+i*e[10]+p*e[12]+l*e[14]+c*e[16]+a*e[18],y:e[1]+t*e[3]+s*e[5]+n*e[7]+f*e[9]+i*e[11]+p*e[13]+l*e[15]+c*e[17]+a*e[19]}}function c(e,r,o){const{xmin:t,ymin:s,xmax:n,ymax:i,spatialReference:f}=r;let c=[];if(o<2)c.push({x:t,y:i}),c.push({x:n,y:i}),c.push({x:t,y:s}),c.push({x:n,y:s});else{let e=10;for(let r=0;r<e;r++)c.push({x:t,y:s+(i-s)*r/(e-1)}),c.push({x:n,y:s+(i-s)*r/(e-1)});e=8;for(let r=1;r<=e;r++)c.push({x:t+(n-t)*r/e,y:s}),c.push({x:t+(n-t)*r/e,y:i})}c=c.map((r=>l(e,r,o)));const a=c.map((e=>e.x)),u=c.map((e=>e.y));return new Extent.Z({xmin:Math.min.apply(null,a),xmax:Math.max.apply(null,a),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:f})}let u=class extends JSONSupport.wq{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,r){const{coeffX:o,coeffY:t}=r;if(null==o||!o.length||null==t||!t.length||o.length!==t.length)return null;const s=[];for(let n=0;n<o.length;n++)s.push(o[n]),s.push(t[n]);return s}writeForwardCoefficients(e,r,o){const t=[],s=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?t.push(e[n]):s.push(e[n]);r.coeffX=t,r.coeffY=s}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return!e&&r&&this.polynomialOrder<2&&(e=function a(e){const[r,o,t,s,n,i]=e,f=t*i-n*s,p=n*s-t*i;return[(n*o-r*i)/f,(t*o-r*s)/p,i/f,s/p,-n/f,-t/p]}(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,r){const{inverseCoeffX:o,inverseCoeffY:t}=r;if(null==o||!o.length||null==t||!t.length||o.length!==t.length)return null;const s=[];for(let n=0;n<o.length;n++)s.push(o[n]),s.push(t[n]);return s}writeInverseCoefficients(e,r,o){const t=[],s=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?t.push(e[n]):s.push(e[n]);r.inverseCoeffX=t,r.inverseCoeffY=s}forwardTransform(e){if("point"===e.type){const r=l(this.forwardCoefficients,e,this.polynomialOrder);return new Point.Z({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=l(this.inverseCoefficients,e,this.polynomialOrder);return new Point.Z({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.inverseCoefficients,e,this.polynomialOrder)}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],u.prototype,"polynomialOrder",void 0),(0,tslib_es6._)([(0,property.Cb)()],u.prototype,"forwardCoefficients",void 0),(0,tslib_es6._)([(0,reader.r)("forwardCoefficients",["coeffX","coeffY"])],u.prototype,"readForwardCoefficients",null),(0,tslib_es6._)([(0,writer.c)("forwardCoefficients")],u.prototype,"writeForwardCoefficients",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],u.prototype,"inverseCoefficients",null),(0,tslib_es6._)([(0,reader.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],u.prototype,"readInverseCoefficients",null),(0,tslib_es6._)([(0,writer.c)("inverseCoefficients")],u.prototype,"writeInverseCoefficients",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],u.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,enumeration.J)({PolynomialXform:"polynomial"})],u.prototype,"type",void 0),u=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],u);const PolynomialTransform=u,utils_t={PolynomialXform:PolynomialTransform,IdentityXform:IdentityTransform},utils_r=Object.keys(utils_t);const g=new Map;g.set("int16","esriFieldTypeSmallInteger"),g.set("int32","esriFieldTypeInteger"),g.set("int64","esriFieldTypeInteger"),g.set("float32","esriFieldTypeSingle"),g.set("float64","esriFieldTypeDouble"),g.set("text","esriFieldTypeString");let CloudRaster_x=class extends BaseRaster{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new Error.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:o}=this._parseHeader(t);if("thematic"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e}this._set("storageInfo",r),this._set("rasterInfo",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,o={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const s=this._buildCacheFilePath(i,t,r,o.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),n=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:o.signal});if(!n)return null;const l=new Uint8Array(n.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const m=await this.request(s,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:o.signal});return m?this.decodePixelBlock(m.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,r;const o=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:l,colormap:c,blockWidth:u,blockHeight:d,firstPyramidLevel:h,maximumPyramidLevel:g}=e,x=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),I=e.extent.spatialReference,S=null==(t=e.geodataXform)?void 0:t.spatialReference,v=new SpatialReference.Z(null!=I&&I.wkid||null!=I&&I.wkt?I:S);let w=new Extent.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:v});const b=new Point.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:v}),T=Math.round((w.xmax-w.xmin)/b.x),j=Math.round((w.ymax-w.ymin)/b.y),k=this._parseTransform(e.geodataXform),z=k?w:null;k&&(w=k.forwardTransform(w),b.x=(w.xmax-w.xmin)/T,b.y=(w.ymax-w.ymin)/j);const _=null!=(r=e.properties)?r:{},C=e.format.toLowerCase().replace("cache/",""),R=new Point.Z(e.origin.x,e.origin.y,v);let F,P,H,L;if(c&&c.colors)for(F=[],P=0;P<c.colors.length;P++)H=c.colors[P],L=c.values?c.values[P]:P,F.push([L,255&H,H<<16>>>24,H<<8>>>24,H>>>24]);const D=e.LODInfos,M=[];for(P=0;P<D.levels.length;P++)M.push({level:D.levels[P],resolution:D.resolutions[P],scale:96/.0254*D.resolutions[P]});const B=new TileInfo.Z({dpi:96,lods:M,format:C,origin:R,size:[u,d],spatialReference:v}),O={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},$=[{maxCol:Math.ceil(T/u)-1,maxRow:Math.ceil(j/d)-1,minCol:0,minRow:0}];let q=2;if(g>0)for(P=0;P<g;P++)$.push({maxCol:Math.ceil(T/q/u)-1,maxRow:Math.ceil(j/q/d)-1,minCol:0,minRow:0}),q*=2;const E=e.mdInfo;return{storageInfo:O,rasterInfo:new RasterInfo.Z({width:T,height:j,pixelType:o,bandCount:i,extent:w,nativeExtent:z,transform:k,spatialReference:v,pixelSize:b,keyProperties:_,statistics:x,histograms:l,multidimensionalInfo:E,colormap:F,storageInfo:new RasterStorageInfo({blockWidth:u,blockHeight:d,pyramidBlockWidth:u,pyramidBlockHeight:d,origin:R,tileInfo:B,firstPyramidLevel:h,maximumPyramidLevel:g,blockBoundary:$})})}}_parseTransform(e){var t,r;if(!function utils_e(n){const o=null==n?void 0:n.type;return!n||utils_r.includes(o)}(e))throw new Error.Z("cloudraster:open","the data contains unsupported geodata transform types");const o=function utils_l(n){if(!(null==n?void 0:n.type))return null;const o=utils_t[null==n?void 0:n.type];if(o){const t=new o;return t.read(n),t}return null}(e);if("identity"===o.type)return null;if(null==(t=o.forwardCoefficients)||!t.length||null==(r=o.inverseCoefficients)||!r.length)throw new Error.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return o}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),o=await Promise.all([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":g.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r})}}return!i&&o[1]&&(i=DBFParser.parse(o[1]).recordSet),FeatureSet.default.fromJSON(i)}_buildCacheFilePath(e,r,o,i){const s=this.storageInfo.packetSize,a=Math.floor(r/s)*s,n=Math.floor(o/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(n);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,p=null==i?void 0:i[0];if(!(0,maybe.pC)(m)||!p)return`${this.url}/_alllayers/${f}/${l}.bundle`;let c=m.variables.filter((e=>e.name===p.variableName))[0].dimensions[0].values.indexOf(p.values[0]).toString(16);const u=4-c.length;for(let t=0;t<u;t++)c="0"+c;return c="S"+c,`${this.url}/_alllayers/${p.variableName}/${c}/${f}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,o=r*(e%r)+t%r;if(o<0)throw"Invalid level / row / col";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],CloudRaster_x.prototype,"storageInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],CloudRaster_x.prototype,"datasetFormat",void 0),CloudRaster_x=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.CloudRaster")],CloudRaster_x);const CloudRaster=CloudRaster_x;let h=class extends BaseRaster{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:l,nativeExtent:p,transform:c}=this.data,{width:h,height:u,pixelType:d}=s,f=this.data.extent||new Extent.Z({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new SpatialReference.Z({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:f.width/h,y:f.height/u},g=new RasterInfo.Z({width:h,height:u,pixelType:d,extent:f,nativeExtent:p,transform:c,pixelSize:x,spatialReference:f.spatialReference,bandCount:3,keyProperties:l||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,s,r){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,m=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:s,maximumPyramidLevel:a},r):Promise.resolve((0,pixelUtils.Vl)(t,s,a)),n=(0,maybe.pC)(this.rasterInfo.statistics),c=(0,maybe.pC)(this.rasterInfo.histograms),h=n&&c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve((0,pixelUtils.Hv)(t)),u=await(0,promiseUtils.as)([m,h]);if(!u[0].value&&u[1].value)throw new Error.Z("inmemory-raster:open","failed to build in memory raster");var d,f;this._pixelBlockTiles=u[0].value,n||(this.rasterInfo.statistics=null==(d=u[1].value)?void 0:d.statistics),c&&(this.rasterInfo.histograms=null==(f=u[1].value)?void 0:f.histograms)}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],h.prototype,"data",void 0),h=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],h);const InMemoryRaster=h;function xmlUtilities_n(e,t){if(!e||!t)return[];let l=t;t.indexOf("/")>-1?(l=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const u=xmlUtilities_n(e,l);for(let e=0;e<u.length;e++)xmlUtilities_n(u[e],t).forEach((n=>r.push(n)));return r}const u=e.getElementsByTagNameNS("*",l);if(!u||0===u.length)return[];for(let n=0;n<u.length;n++)r.push(u[n]||u.item[n]);return r}function xmlUtilities_e(t,l){if(!t||!l)return null;let r=l;l.indexOf("/")>-1?(r=l.slice(0,l.indexOf("/")),l=l.slice(l.indexOf("/")+1)):l="";const u=xmlUtilities_n(t,r);return u.length>0?l?xmlUtilities_e(u[0],l):u[0]:null}function xmlUtilities_t(n,t=null){const l=t?xmlUtilities_e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function xmlUtilities_u(n,e){return function xmlUtilities_l(e,t){const l=xmlUtilities_n(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),""!==u&&r.push(u));return r}(n,e).map((n=>Number(n)))}function xmlUtilities_o(n,e){const l=xmlUtilities_t(n,e);return Number(l)}function xmlUtilities_i(n,e){var t;const l=null==n||null==(t=n.nodeName)?void 0:t.toLowerCase(),r=e.toLowerCase();return l.slice(l.lastIndexOf(":")+1)===r}function o(e,t){if(!e||!t)return null;const n=[];for(let a=0;a<e.length;a++)n.push(e[a]),n.push(t[a]);return n}function pamParser_c(t){if(!t)return null;let n=Number(t);if(!isNaN(n)&&0!==n)return new SpatialReference.Z({wkid:n});if(!(t=String(t)).startsWith("GEOGCS")&&!t.startsWith("PROJCS"))return null;const a=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),r=a[a.length-1].split(",");return"EPSG"===r[0]&&t.endsWith('"]]')&&(n=Number(r[1]),!isNaN(n)&&0!==n)?new SpatialReference.Z({wkid:n}):new SpatialReference.Z({wkt:t})}function pamParser_m(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const s={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(xmlUtilities_i(e,"SRS")){if(!s.spatialReference){const t=xmlUtilities_t(e);s.spatialReference=pamParser_c(t)}}else if(xmlUtilities_i(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function pamParser_u(e){var n;const r=xmlUtilities_e(e,"GeodataXform"),u=pamParser_c(xmlUtilities_o(r,"SpatialReference/WKID")||xmlUtilities_t(r,"SpatialReference/WKT"));if("typens:PolynomialXform"!==r.getAttribute("xsi:type"))return{spatialReference:u,transform:null};const f=null!=(n=xmlUtilities_o(r,"PolynomialOrder"))?n:1,m=xmlUtilities_u(r,"CoeffX/Double"),d=xmlUtilities_u(r,"CoeffY/Double"),p=xmlUtilities_u(r,"InverseCoeffX/Double"),S=xmlUtilities_u(r,"InverseCoeffY/Double"),I=o(m,d),g=o(p,S);return{spatialReference:u,transform:new PolynomialTransform({spatialReference:u,polynomialOrder:f,forwardCoefficients:I,inverseCoefficients:g})}}(e);s.transform=n,s.spatialReference||(s.spatialReference=t)}else xmlUtilities_n(e,"MDI").forEach((e=>s.metadata[e.getAttribute("key")]=xmlUtilities_t(e)));else if(xmlUtilities_i(e,"PAMRasterBand")){const t=function f(e){var t;const n=xmlUtilities_o(e,"NoDataValue"),i=xmlUtilities_e(e,"Histograms/HistItem"),o=xmlUtilities_o(i,"HistMin"),u=xmlUtilities_o(i,"HistMax"),f=xmlUtilities_o(i,"BucketCount"),c=null==(t=xmlUtilities_t(i,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let m,d,p,S;xmlUtilities_n(e,"Metadata/MDI").forEach((e=>{var t;const n=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":m=n;break;case"STATISTICS_MAXIMUM":d=n;break;case"STATISTICS_MEAN":p=n;break;case"STATISTICS_STDDEV":S=n}}));const I=xmlUtilities_o(e,"Metadata/SourceBandIndex");return{noDataValue:n,histogram:null!=c&&c.length&&null!=m&&null!=d?{min:o,max:u,size:f||c.length,counts:c}:null,sourceBandIndex:I,statistics:null!=m&&null!=d?{min:m,max:d,avg:p,stddev:S}:null}}(e);null!=t.sourceBandIndex&&null==s.rasterBands[t.sourceBandIndex]?s.rasterBands[t.sourceBandIndex]=t:s.rasterBands.push(t)}}));const l=s.rasterBands;if(l){const e=!!l[0].statistics;s.statistics=e?l.map((e=>e.statistics)):null;const t=!!l[0].histogram;s.histograms=t?l.map((e=>e.histogram)):null}return s}let d=class extends BaseRaster{async open(t){await this.init();const r=await this._fetchData(t);let{spatialReference:e,statistics:s,histograms:o,transform:a}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new SpatialReference.Z({wkid:3857})),null!=o&&o.length&&null==s&&(s=(0,pixelUtils.Oh)(o));const{width:m,height:c}=r;let f=new Extent.Z({xmin:-.5,ymin:.5-c,xmax:m-.5,ymax:.5,spatialReference:e});const h=a?a.forwardTransform(f):f;let d=!0;if(a){const t=a.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(a=null,f=h)}const x=new InMemoryRaster({data:{extent:h,nativeExtent:f,transform:a,pixelBlock:r,statistics:s,histograms:o,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i}});await x.open(),this._set("rasterInfo",x.rasterInfo),this._inMemoryRaster=x}fetchRawTile(t,r,e,s={}){return this._inMemoryRaster.fetchRawTile(t,r,e,s)}async _fetchData(t){const{data:r}=await this.request(this.url,{responseType:"array-buffer",signal:null==t?void 0:t.signal}),e=(0,RasterCodec.y)(r).toUpperCase();if("JPG"!==e&&"PNG"!==e&&"GIF"!==e&&"BMP"!==e)throw new Error.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",e),await this.decodePixelBlock(r,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,s;const o=(0,maybe.Wg)(null==t?void 0:t.signal),n=null!=(e=this.ioConfig.skipExtensions)?e:[],l=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:o}),m=this.datasetFormat,p="JPG"===m?"jgw":"PNG"===m?"pgw":"BMP"===m?"bpw":null,c=n.indexOf(p)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+p,{responseType:"text",signal:o}),u=await(0,promiseUtils.as)([l,c]);if(null!=o&&o.aborted)throw(0,promiseUtils.zE)();const d=pamParser_m(null==(s=u[0].value)?void 0:s.data);if(!d.transform){const t=u[1].value?u[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;d.transform=6===(null==t?void 0:t.length)?new PolynomialTransform({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return d}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],d.prototype,"datasetFormat",void 0),d=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],d);const ImageAuxRaster=d;var serviceTileInfoProperty=__webpack_require__(63710),TilemapCache=__webpack_require__(78136);let ImageServerRaster_g=class extends BaseRaster{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const i=e&&e.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:i});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const a=s.data;if(this.sourceJSON=a,!a)throw new Error.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new Error.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=a.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(a.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=a.name.slice(a.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:i});if(!(0,maybe.pC)(n))throw new Error.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,serviceTileInfoProperty.d)(a.tileInfo,a):TileInfo.Z.fromJSON(a.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let l,r;const o=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==a.maxScale&&("Raster"===this.tileType?(l=e.lods.filter((e=>e.resolution===i.x))[0],l||(l=e.lods[e.lods.length-1])):(l=e.lods.filter((e=>Math.abs(e.scale-a.maxScale)<s))[0],l||(l=e.lods.filter((e=>e.scale>a.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=l.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),l||(l=o);const m=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==a.minScale&&"Elevation"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-a.minScale)<s))[0],this._levelOffset=r.level-m.level),r||(r=m);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-h)<s)))&&(i.x=i.y=l.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p=l.level-r.level,[f,x]=e.size,y=e.origin;let{x:g,y:v}=i;const S=[{minCol:Math.floor((t.xmin-y.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-y.x-.1*g)/f/g),minRow:Math.floor((y.y-t.ymax+.1*v)/x/v),maxRow:Math.floor((y.y-t.ymin-.1*v)/x/v)}];if(p>0)for(let a=0;a<p;a++)g*=2,v*=2,S.push({minCol:Math.floor((t.xmin-y.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-y.x-.1*g)/f/g),minRow:Math.floor((y.y-t.ymax+.1*v)/x/g),maxRow:Math.floor((y.y-t.ymin-.1*v)/x/g)});n.storageInfo=new RasterStorageInfo({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:e,blockBoundary:S}),this._set("rasterInfo",n)}if(a.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,urlUtils.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new TilemapCache.y({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:l,pixelSize:r}=this.rasterInfo,o=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${o}/${t}/${i}`,m=this._slices?{sliceId:s.sliceId||0}:null,{data:h}=await this.request(n,{query:m,responseType:"array-buffer",signal:s.signal});if(!h)return null;const c=await this.decodePixelBlock(h,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),u=a.blockBoundary[e];if("jpg"!==a.compression||i>u.minCol&&i<u.maxCol&&t>u.minRow&&t<u.maxRow)return c;const{origin:p,blockWidth:f,blockHeight:d}=a,y=2**e,g=Math.round((l.xmin-p.x)/(r.x*y))%f,v=Math.round((l.xmax-p.x)/(r.x*y))%f,S=Math.round((p.y-l.ymax)/(r.x*y))%d,w=Math.round((p.y-l.ymin)/(r.x*y))%d,I=i===u.minCol?g:0,j=t===u.minRow?S:0,b=i===u.maxCol?v:f,M=t===u.maxRow?w:d;return(0,pixelUtils.pW)(c,{x:I,y:j},{width:b-I,height:M-j}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(e,0,(0,maybe.Wg)(t.datumTransformation));if(null===s)return null;let a=0;const{maximumPyramidLevel:l}=this.rasterInfo.storageInfo;let r=l-a+this._levelOffset;const o=s.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,s.row,s.col,t))break}catch{}if(r--,a++,s=this.identifyPixelLocation(o,a,(0,maybe.Wg)(t.datumTransformation)),null===s)return null}return-1===r||null==s?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=SpatialReference.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new RasterInfo.Z({width:i,height:s,bandCount:3,extent:Extent.Z.fromJSON(t.extent),spatialReference:a,pixelSize:new Point.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:l,signal:r}=e,c=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:l,f:"json"},signal:r}).then((e=>FeatureSet.default.fromJSON(e.data))).catch((()=>null)),u=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:l,f:"json"},signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),p=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:l,f:"json"},signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),x=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:r}).then((e=>e.data)).catch((()=>{})),d=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),y=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:r}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([c,u,p,x,d,y]).then((e=>{let l=null;if(t.minValues&&t.minValues.length===t.bandCount){l=[];for(let e=0;e<t.minValues.length;e++)l.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new RasterInfo.Z({width:i,height:s,bandCount:t.bandCount,extent:Extent.Z.fromJSON(t.extent),spatialReference:a,pixelSize:new Point.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:l,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],ImageServerRaster_g.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],ImageServerRaster_g.prototype,"tileType",void 0),ImageServerRaster_g=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],ImageServerRaster_g);const ImageServerRaster=ImageServerRaster_g;var PixelBlock=__webpack_require__(42766),utils=__webpack_require__(32088);const w=new Map;w.set("Int8","s8"),w.set("UInt8","u8"),w.set("Int16","s16"),w.set("UInt16","u16"),w.set("Int32","s32"),w.set("UInt32","u32"),w.set("Float32","f32"),w.set("Float64","f32"),w.set("Double64","f32");const MRFRaster_I=new Map;MRFRaster_I.set("lerc",".lrc"),MRFRaster_I.set("none",".til"),MRFRaster_I.set("deflate",".pzp"),MRFRaster_I.set("jpeg",".jzp");let b=class extends BaseRaster{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var s;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const o=t?(0,maybe.Wg)(t.signal):null,i=await this.request(this.url,{responseType:"xml",signal:o}),{rasterInfo:a,files:n}=this._parseHeader(i.data);if(-1===(null==(s=this.ioConfig.skipExtensions)?void 0:s.indexOf("aux.xml"))){const e=await this._fetchAuxiliaryData(t);var l;null!=e&&(a.statistics=null!=(l=e.statistics)?l:a.statistics,a.histograms=e.histograms,e.histograms&&!(0,maybe.pC)(a.statistics)&&(a.statistics=(0,pixelUtils.Oh)(e.histograms)))}this._set("rasterInfo",a),this._files=n;const p=await this.request(n.index,{responseType:"array-buffer",signal:o});this._storageIndex=this._parseIndex(p.data);let c,f,h=0,u=-1;const{blockWidth:g,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,x=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:w,height:I,bandCount:b}=this.rasterInfo,A=[],j="none"===y?1:b;for(;h<this._storageIndex.length;)u++,c=Math.ceil(w/g/x**u),f=Math.ceil(I/d/x**u),h+=c*f*j*4,A.push({maxRow:f,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=A,u>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=u),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:i,blockBoundary:a,compression:n}=this.rasterInfo.storageInfo,l=a[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:c,pixelType:f}=this.rasterInfo,{ranges:m,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!m||0===m.length)return null;if(0===m[0].from&&0===m[0].to){const t=new Uint8Array(o*i);return new PixelBlock.Z({width:o,height:i,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d="none"===n?1:c,y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:m[x].from,to:m[x].to},responseType:"array-buffer",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I);let A=0;for(x=0;x<d;x++)b.set(new Uint8Array(w[x].data),A),A+=w[x].data.byteLength;const j="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",R=await this.decodePixelBlock(b.buffer,{width:o,height:i,format:j,pixelType:f});let _=0,F=0;if(h!==o||u!==i){let t=R.mask;if(t)for(x=0;x<i;x++)if(F=x*o,x<u)for(_=h;_<o;_++)t[F+_]=0;else for(_=0;_<o;_++)t[F+_]=0;else for(t=new Uint8Array(o*i),R.mask=t,x=0;x<u;x++)for(F=x*o,_=0;_<h;_++)t[F+_]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,r,s,o,i,a;if(utils.f){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i,compression:a}=this.rasterInfo.storageInfo,{width:n,height:l,bandCount:p}=this.rasterInfo,c="none"===a?1:p;let f,m,h,u=0,g=0;for(h=0;h<t;h++)g=i**h,f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=f*m;g=i**t,f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=e*f+r,u*=4*c;const d=this._storageIndex.subarray(u,u+4*c);let y=0,x=0;const w=[];for(let I=0;I<c;I++)y=d[4*I+0]*2**32+d[4*I+1],x=y+d[4*I+2]*2**32+d[4*I+3],w.push({from:y,to:x});return{ranges:w,actualTileWidth:r<f-1?s:Math.ceil(n/g)-s*(f-1),actualTileHeight:e<m-1?o:Math.ceil(l/g)-o*(m-1)}}_parseHeader(t){const e=xmlUtilities_e(t,"MRF_META/Raster");if(!e)throw new Error.Z("mrf:open","not a valid MRF format");const r=xmlUtilities_e(e,"Size"),s=parseInt(r.getAttribute("x"),10),o=parseInt(r.getAttribute("y"),10),p=parseInt(r.getAttribute("c"),10),f=(xmlUtilities_t(e,"Compression")||"none").toLowerCase();if(!f||-1===["none","lerc"].indexOf(f))throw new Error.Z("mrf:open","currently does not support compression "+f);const m=xmlUtilities_t(e,"DataType")||"UInt8",u=w.get(m);if(null==u)throw new Error.Z("mrf:open","currently does not support pixel type "+m);const x=xmlUtilities_e(e,"PageSize"),b=parseInt(x.getAttribute("x"),10),A=parseInt(x.getAttribute("y"),10),j=xmlUtilities_e(e,"DataValues");let R,_;if(j&&(_=j.getAttribute("NoData"),null!=_&&(R=_.trim().split(" ").map((t=>parseFloat(t))))),xmlUtilities_e(t,"MRF_META/CachedSource"))throw new Error.Z("mrf:open","currently does not support MRF referencing other data files");const F=xmlUtilities_e(t,"MRF_META/GeoTags"),M=xmlUtilities_e(F,"BoundingBox");if(null==M)throw new Error.Z("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const T=parseFloat(M.getAttribute("minx")),k=parseFloat(M.getAttribute("miny")),C=parseFloat(M.getAttribute("maxx")),U=parseFloat(M.getAttribute("maxy")),L=xmlUtilities_t(F,"Projection")||"",S=xmlUtilities_t(t,"datafile"),v=xmlUtilities_t(t,"IndexFile");let B;if("LOCAL_CS[]"!==L)if(L.toLowerCase().startsWith("epsg:")){const t=Number(L.slice(5));isNaN(t)||0===t||(B=new SpatialReference.Z({wkid:t}))}else B=pamParser_c(L);const P=new Extent.Z(T,k,C,U);P.spatialReference=B;const E=xmlUtilities_e(t,"MRF_META/Rsets"),H=parseInt(E&&E.getAttribute("scale")||"2",10),W=new RasterStorageInfo({origin:new Point.Z({x:P.xmin,y:P.ymax,spatialReference:B}),blockWidth:b,blockHeight:A,pyramidBlockWidth:b,pyramidBlockHeight:A,compression:f,pyramidScalingFactor:H}),D=new Point.Z({x:(C-T)/s,y:(U-k)/o,spatialReference:B});return{rasterInfo:new RasterInfo.Z({width:s,height:o,extent:P,spatialReference:B,bandCount:p,pixelType:u,pixelSize:D,noDataValue:R,storageInfo:W}),files:{mrf:this.url,index:v||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",MRFRaster_I.get(f))}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return pamParser_m(e)}catch{return null}}};(0,tslib_es6._)([(0,property.Cb)()],b.prototype,"_files",void 0),(0,tslib_es6._)([(0,property.Cb)()],b.prototype,"_storageIndex",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],b.prototype,"datasetFormat",void 0),b=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterIO.MRFRaster")],b);const MRFRaster=b;var TiffTags=__webpack_require__(42355),TiffDecoder=__webpack_require__(71779);const T=function(e,t){const r=e.get(t);return r&&r.values},TIFFRaster_I=function(e,t){const r=e.get(t);return r&&r.values[0]};let TIFFRaster_w=class extends BaseRaster{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var i;await this.init();const s=e?(0,maybe.Wg)(e.signal):null,{data:l}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!l)throw new Error.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:p,firstIFD:c,isBigTiff:y}=(0,TiffDecoder.cK)(l),x=[];await this.readIFDs(x,l,p,c,0,y?8:4,s);const T=(0,TiffDecoder.FI)(x),{width:I,height:w,tileWidth:E,tileHeight:F,planes:S,pixelType:v,compression:b,firstPyramidLevel:_,maximumPyramidLevel:j,pyramidBlockWidth:R,pyramidBlockHeight:B,tileBoundary:D,affine:k,metadata:L}=T,O=Extent.Z.fromJSON(T.extent),z=O.spatialReference,H=new Point.Z(O?{x:O.xmin,y:O.ymax,spatialReference:z}:{x:0,y:0}),P=new RasterStorageInfo({blockWidth:E,blockHeight:F,pyramidBlockWidth:R,pyramidBlockHeight:B,compression:b,origin:H,firstPyramidLevel:_,maximumPyramidLevel:j,blockBoundary:D}),G=new Point.Z({x:(O.xmax-O.xmin)/I,y:(O.ymax-O.ymin)/w,spatialReference:z}),q=L?{BandProperties:L.bandProperties,DataType:L.dataType}:{},W=new RasterInfo.Z({width:I,height:w,bandCount:S,pixelType:v,compression:b,pixelSize:G,storageInfo:P,spatialReference:z,keyProperties:q,extent:O,statistics:L?L.statistics:null});if(null!=k&&k.length&&(W.nativeExtent=new Extent.Z({xmin:-.5,ymin:.5-w,xmax:I-.5,ymax:.5,spatialReference:z}),W.transform=new PolynomialTransform({polynomialOrder:1,forwardCoefficients:[k[2]+k[0]/2,k[5]-k[3]/2,k[0],k[3],-k[1],-k[4]]}),W.extent=W.transform.forwardTransform(W.nativeExtent),W.pixelSize=new Point.Z({x:(O.xmax-O.xmin)/I,y:(O.ymax-O.ymin)/w,spatialReference:z}),P.origin.x=-.5,P.origin.y=.5),null==(i=this.ioConfig.skipExtensions)||!i.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var C;if(W.statistics=null!=(C=t.statistics)?C:W.statistics,W.histograms=t.histograms,t.histograms&&!(0,maybe.pC)(W.statistics)&&(W.statistics=(0,pixelUtils.Oh)(t.histograms)),t.transform&&!k){W.transform=t.transform,W.nativeExtent=W.extent;const e=W.transform.forwardTransform(W.nativeExtent);W.pixelSize=new Point.Z({x:(e.xmax-e.xmin)/I,y:(e.ymax-e.ymin)/w,spatialReference:z}),W.extent=e}W.spatialReference||(W.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",W),this._headerInfo={littleEndian:p,isBigTiff:y,ifds:x,...T},!this._headerInfo.isSupported)throw new Error.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){var s;if(null==(s=this._headerInfo)||!s.isSupported||this.isBlockOutside(e,t,r))return null;const a=this.getTileLocation(e,t,r);if(!a)return null;const{range:o,actualTileWidth:n,actualTileHeight:f,ifd:l}=a,{data:u}=await this.request(this.url,{range:o,responseType:"array-buffer",signal:i.signal}),{blockWidth:m,blockHeight:p}=this.getBlockWidthHeight(e),c=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offset:0,size:0},width:m,height:p,planes:null,pixelType:null});let h,d,y;if(n!==m||f!==p){let e=c.mask;if(e)for(h=0;h<p;h++)if(y=h*m,h<f)for(d=n;d<m;d++)e[y+d]=0;else for(d=0;d<m;d++)e[y+d]=0;else for(e=new Uint8Array(m*p),c.mask=e,h=0;h<f;h++)for(y=h*m,d=0;d<n;d++)e[y+d]=1}return c}async readIFDs(e,t,r,i,s,a=4,o){if(!i)return null;(i>=t.byteLength||i<0)&&(t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:o})).data,s=i+s,i=0);const n=await this.readIFD(t,r,i,s,TiffTags.Z.TIFF_TAGS,a,o);if(e.push(n.ifd),!n.nextIFD)return null;await this.readIFDs(e,t,r,n.nextIFD-s,s,a,o)}async readIFD(e,t,r,i,s=TiffTags.Z.TIFF_TAGS,a=4,o){if(!e)return null;const n=(0,TiffDecoder.vr)(e,t,r,i,s,a);if(n.success){const r=[];if(n.ifd.forEach((e=>{e.values||r.push(e)})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)),a=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:o});e=s,i=a,r.forEach((r=>(0,TiffDecoder.Dq)(e,t,r,i)))}}if(n.ifd.has("GEOKEYDIRECTORY")){const r=n.ifd.get("GEOKEYDIRECTORY"),s=r.values;if(s&&s.length>4){const a=s[0]+"."+s[1]+"."+s[2],n=await this.readIFD(e,t,r.valueOffset+6-i,i,TiffTags.Z.GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return n}if(n.requiredBufferSize&&n.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+n.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=r.data).byteLength<n.requiredBufferSize?null:this.readIFD(e,t,0,i,TiffTags.Z.TIFF_TAGS,4,o)}}getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),o=this._headerInfo.ifds[a];if(!o)return null;const n=T(o,"TILEOFFSETS");if(void 0===n)return null;const f=T(o,"TILEBYTECOUNTS"),{minRow:l,minCol:u,maxRow:m,maxCol:p}=s[a];if(t>m||r>p||t<l||r<u)return null;const c=TIFFRaster_I(o,"IMAGEWIDTH"),h=TIFFRaster_I(o,"IMAGELENGTH"),d=TIFFRaster_I(o,"TILEWIDTH"),y=TIFFRaster_I(o,"TILELENGTH"),g=t*(p+1)+r,x=n[g],w=f[g];return null==x||null==w?null:{range:{from:x,to:x+w-1},ifd:o,actualTileWidth:r===p?c%d:d,actualTileHeight:t===m?h%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return pamParser_m(t)}catch{return null}}};(0,tslib_es6._)([(0,property.Cb)()],TIFFRaster_w.prototype,"_files",void 0),(0,tslib_es6._)([(0,property.Cb)()],TIFFRaster_w.prototype,"_headerInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],TIFFRaster_w.prototype,"_bufferSize",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],TIFFRaster_w.prototype,"datasetFormat",void 0),TIFFRaster_w=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.TIFFRaster")],TIFFRaster_w);const TIFFRaster=TIFFRaster_w,RasterFactory_c=new Map;RasterFactory_c.set("CRF",{desc:"Cloud Raster Format",constructor:CloudRaster}),RasterFactory_c.set("MRF",{desc:"Meta Raster Format",constructor:MRFRaster}),RasterFactory_c.set("TIFF",{desc:"GeoTIFF",constructor:TIFFRaster}),RasterFactory_c.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ImageServerRaster}),RasterFactory_c.set("JPG",{desc:"JPG Raster Format",constructor:ImageAuxRaster}),RasterFactory_c.set("PNG",{desc:"PNG Raster Format",constructor:ImageAuxRaster}),RasterFactory_c.set("GIF",{desc:"GIF Raster Format",constructor:ImageAuxRaster}),RasterFactory_c.set("BMP",{desc:"BMP Raster Format",constructor:ImageAuxRaster});const RasterFactory=class n{static get supportedFormats(){const t=new Set;return RasterFactory_c.forEach(((r,e)=>t.add(e))),t}static async open(r){const{url:e,ioConfig:s,sourceJSON:o}=r;let a=r.datasetFormat;null==a&&e.lastIndexOf(".")&&(a=e.slice(e.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),e.toLowerCase().indexOf("/imageserver")>-1&&-1===e.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const n={url:e,sourceJSON:o,datasetFormat:a,ioConfig:s||{bandIds:null,sampling:null}};let i,u;if(this.supportedFormats.has(a))return i=RasterFactory_c.get(a).constructor,u=new i(n),await u.open({signal:r.signal}),u;if(a)throw new Error.Z("rasterfactory:open","not a supported format "+a);const l=Array.from(RasterFactory_c.keys());let m=0;const F=function(){return a=l[m++],a?(i=RasterFactory_c.get(a).constructor,u=new i(n),u.open({signal:r.signal}).then((()=>u)).catch((()=>F()))):null};return F()}static register(t,r,e){RasterFactory_c.has(t.toUpperCase())||RasterFactory_c.set(t.toUpperCase(),{desc:r,constructor:e})}},R=(0,jsonMap.wY)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function ImageryTileLayer_I(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let O=class extends((0,BlendLayer.h)((0,ScaleRangeLayer.M)((0,RefreshableLayer.Q)((0,OperationalLayer.q)((0,PortalLayer.I)(x((0,MultiOriginJSONSupport.R)(Layer.Z)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const t=(0,maybe.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,r;let t=[new Field.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const o=null==(e=this.rasterInfo)||null==(r=e.attributeTable)?void 0:r.fields;if(o){const e=o.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name="Raster."+e.name,r}));t=t.concat(e)}return t}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,r,t){const o=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=(0,rasterRenderers.ij)(o,t)||void 0;if(null!=i)return i}createPopupTemplate(e){return(0,popupUtils.eZ)(this,e)}write(e,r){const{raster:t}=this;if(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new Error.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await RasterFactory.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:r}=this.raster;if(!r)throw new Error.Z("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{write:{overridePolicy:ImageryTileLayer_I}}})],O.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:{overridePolicy:ImageryTileLayer_I}}}),(0,enumeration.J)(R)],O.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],O.prototype,"multidimensionalDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.rn)],O.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],O.prototype,"isReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["show","hide"]})],O.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.Cb)()],O.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],O.prototype,"version",void 0),(0,tslib_es6._)([(0,property.Cb)()],O.prototype,"title",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["ArcGISTiledImageServiceLayer"]})],O.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:ImageryTileLayer_I,writer(e,r,t){r[t]=!e}}}})],O.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:PopupTemplate.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ImageryTileLayer_I}}})],O.prototype,"popupTemplate",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],O.prototype,"defaultPopupTemplate",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:[Field.Z]})],O.prototype,"fields",null),(0,tslib_es6._)([(0,property.Cb)({types:rasterRenderers.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ImageryTileLayer_I},origins:{"web-scene":{types:rasterRenderers.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],O.prototype,"renderer",null),(0,tslib_es6._)([(0,reader.r)("renderer")],O.prototype,"readRenderer",null),O=(0,tslib_es6._)([(0,subclass.j)("esri.layers.ImageryTileLayer")],O);const ImageryTileLayer=O},53585:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{OE:()=>h,Gc:()=>d,Qg:()=>m,Rq:()=>i,gX:()=>x,z2:()=>s,ET:()=>u,Vx:()=>g});var maybe=__webpack_require__(59472),Point=__webpack_require__(61106);__webpack_require__(36348);const EphemeralBlockCache=class t{constructor(t=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,e)}decreaseRefCount(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.refCount--,t.refCount<=0&&(r.delete(s),t.controller&&t.controller.abort()),t.refCount}return 0}getBlock(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.ts=Date.now(),t.refCount++,r.delete(s),r.set(s,t),t.block}return null}putBlock(t,e,s,r=null){const i=this._cachedBlocks,c=t+"/"+e;if(i.has(c)){const t=i.get(c);t.ts=Date.now(),t.refCount++}else i.set(c,{block:s,ts:Date.now(),refCount:1,controller:r});this.trim(),this.updateTimer()}deleteBlock(t,e){const s=this._cachedBlocks,r=t+"/"+e;s.has(r)&&s.delete(r)}updateMaxSize(t){this._size=t,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval((()=>{const e=Array.from(t),s=Date.now();for(let r=0;r<e.length&&e[r][1].ts<=s-this._duration;r++)t.delete(e[r][0]);0===t.size&&this.clearTimer()}),this._interval)}trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const e=Array.from(t);for(let s=0;s<e.length-this._size;s++)t.delete(e[s][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};var rasterProjectionHelper=__webpack_require__(52606);const c=new Map,a=new EphemeralBlockCache;function i(e,t){return null==t?e:`${e}?sliceId=${t}`}function s(e,t){const n={extent:null,rasterInfo:t,cache:new Map};if(c.has(e)){const t=c.get(e);return t.push(n),t.length-1}return c.set(e,[n]),0}function u(e,t){if(c.has(e)){const n=c.get(e);n[t]=null,n.some((e=>null!=e))||c.delete(e)}}function h(e,t,n){if(!c.has(e))return null==t?a.decreaseRefCount(e,n):0;const o=c.get(e);if(null==o[t])return a.decreaseRefCount(e,n);const r=o[t].cache;if(r.has(n)){const e=r.get(n);if(e.refCount--,0===e.refCount){r.delete(n);for(let e=0;e<o.length;e++)o[e]&&o[e].cache.has(n)&&o[e].cache.delete(n);e.controller&&e.controller.abort()}return e.refCount}return 0}function m(e,t,n){if(!c.has(e))return null==t?a.getBlock(e,n):null;const o=c.get(e);if(null==o[t]){for(let e=0;e<o.length;e++)if(o[e]&&o[e].cache.has(n)){const t=o[e].cache.get(n);return t.refCount++,t.block}return a.getBlock(e,n)}const r=o[t].cache;if(r.has(n)){const e=r.get(n);return e.refCount++,e.block}for(let l=0;l<o.length;l++)if(l!==t&&o[l]&&o[l]&&o[l].cache.has(n)){const e=o[l].cache.get(n);return e.refCount++,r.set(n,e),e.block}return null}function x(e,t,n,o,r=null){if(!c.has(e))return void(null==t&&a.putBlock(e,n,o,r));const l=c.get(e);if(null==l[t])return void a.putBlock(e,n,o,r);const i={refCount:1,block:o,isResolved:!1,isRejected:!1,controller:r};o.then((()=>i.isResolved=!0)).catch((()=>i.isRejected=!0)),l[t].cache.set(n,i)}function d(e,t,n){if(!c.has(e))return void(null==t&&a.deleteBlock(e,n));const o=c.get(e);null!=o[t]?o[t].cache.delete(n):a.deleteBlock(e,n)}function y(e,t){if(!c.has(e))return null;const n=c.get(e);return null==n[t]?null:n[t]}function g(n,c,a,i,s,u,f=null){const h=y(n,c),m=h.extent,{cache:x,rasterInfo:d}=h;if(m&&m.xmin===a.xmin&&m.xmax===a.xmax&&m.ymin===a.ymin&&m.ymax===a.ymax)return;const g=a.clone().normalize(),{spatialReference:p,transform:k}=d,M=new Set;for(let y=0;y<g.length;y++){const n=g[y];if(n.xmax-n.xmin<=i||n.ymax-n.ymin<=i)continue;let c=(0,rasterProjectionHelper.tB)(n,p,f);(0,maybe.pC)(k)&&(c=k.inverseTransform(c));const a=new Point.Z({x:i,y:i,spatialReference:n.spatialReference});if(null==s&&!(s=(0,rasterProjectionHelper.VO)(a,p,n,f)))return;const{pyramidLevel:h,pyramidResolution:m,excessiveReading:x}=(0,rasterProjectionHelper.kr)(s,d,u||"closest");if(x)return;const{storageInfo:R}=d,{origin:C}=R,j={x:Math.max(0,Math.floor((c.xmin-C.x)/m.x)),y:Math.max(0,Math.floor((C.y-c.ymax)/m.y))},v=Math.ceil((c.xmax-c.xmin)/m.x-.1),B=Math.ceil((c.ymax-c.ymin)/m.y-.1),b=h>0?R.pyramidBlockWidth:R.blockWidth,w=h>0?R.pyramidBlockHeight:R.blockHeight,$=1,I=Math.max(0,Math.floor(j.x/b)-$),H=Math.max(0,Math.floor(j.y/w)-$),E=Math.floor((j.x+v-1)/b)+$,P=Math.floor((j.y+B-1)/w)+$;for(let e=H;e<=P;e++)for(let t=I;t<=E;t++)M.add(`${h}/${e}/${t}`)}x.forEach(((e,t)=>{if(!M.has(t)){const e=x.get(t);(null==e||e.isResolved||e.isRejected)&&x.delete(t)}})),h.extent={xmin:a.xmin,ymin:a.ymin,xmax:a.xmax,ymax:a.ymax}}},52606:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{vF:()=>b,_D:()=>y,Qp:()=>R,zD:()=>h,tB:()=>g,nF:()=>d,VO:()=>M,kr:()=>j});var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(32656),_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(27780),_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(41241),_geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(61106),_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(52937),_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__(36348),__webpack_require__(93533)),_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(28449);const u=5e-4,m=function(e,n){const t=(e.isWGS84||e.isWebMercator)&&(n.isWGS84||n.isWebMercator);return!(e.equals(n)||t)};async function h(){if((0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.kR)()||!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.Gb)())return null;await(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.zD)()}function y(n,t,o){if(!m(n.spatialReference,t))return null;if(!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.kR)())throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");return o?(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.rS)(t,n.spatialReference,n):(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.rS)(n.spatialReference,t,n)}function M(n,o,r,s=null){if(n.spatialReference.equals(o))return n;const l=m(n.spatialReference,o);if(l&&!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.kR)())throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const c=r.center,u=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_4__.Z({xmin:c.x-n.x/2,xmax:c.x+n.x/2,ymin:c.y-n.y/2,ymax:c.y+n.y/2,spatialReference:n.spatialReference}),p=l?(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.iV)(u,o,s):(0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_2__.iV)(u,o);return null==p?null:{x:p.xmax-p.xmin,y:p.ymax-p.ymin}}function w(e,n=.01){return(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_6__.c9)(e)?n/(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_6__.c9)(e):0}function d(o,i,r=null,s=!0){const l=o.spatialReference;if(l.equals(i))return o;const c=m(l,i);if(c&&!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.kR)())throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");const p=c?(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.iV)(o,i,r):(0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_2__.iV)(o,i);if(p&&s&&i.isGeographic){var f,h;const[e,t]=l.isWebMercator?(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.C5)(l).origin:null!=(f=null==(h=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.C5)(l))?void 0:h.valid)?f:[],i=w(l);i&&null!=e&&null!=t&&(Math.abs(o.x-e)<i&&Math.abs(180-p.x)<u?p.x-=360:Math.abs(o.x-t)<i&&Math.abs(180+p.x)<u&&(p.x+=360))}return p}function g(i,r,s=null,l=!0){var c,p,f,h;const y=i.spatialReference;if(y.equals(r))return i;const M=m(y,r);if(M&&!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.kR)())throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("rasterprojectionhelper-projectExtent","projection engine is not loaded");const g=M?(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.iV)(i,r,s):(0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_2__.iV)(i,r);let[R,j]=null!=(c=null==(p=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.C5)(y))?void 0:p.origin)?c:[];if(g&&l&&y.isWebMercator&&r.isGeographic&&null!=R&&null!=j){const e=.001,n=1e3;if(Math.abs(i.xmin-R)<e&&Math.abs(j-i.xmax)>n&&Math.abs(180-g.xmax)<u){g.xmin=-180;const e=[];e.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z(i.xmax,i.ymin,y)),e.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z(i.xmax,(i.ymin+i.ymax)/2,y)),e.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z(i.xmax,i.ymax,y));const n=e.map((e=>d(e,r,s))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));g.xmax=Math.max.apply(null,n)}if(Math.abs(i.xmax-j)<e&&Math.abs(R-i.xmin)>n&&Math.abs(180+g.xmin)<u){g.xmax=180;const e=[];e.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z(i.xmin,i.ymin,y)),e.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z(i.xmin,(i.ymin+i.ymax)/2,y)),e.push(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z(i.xmin,i.ymax,y));const n=e.map((e=>d(e,r,s))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));g.xmin=Math.min.apply(null,n)}}[R,j]=r.isWebMercator?(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.C5)(r).origin:null!=(f=null==(h=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.C5)(r))?void 0:h.valid)?f:[];const b=w(r);return b&&null!=R&&null!=j&&(Math.abs(g.xmin-R)<b&&(g.xmin=R),Math.abs(g.xmax-j)<b&&(g.xmax=j)),g}function R(t,i,r,s=null,l=null,c=!1,x=[32,32]){var u,h;if(m(t.spatialReference,i.spatialReference)&&!(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.kR)())throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(t&&i&&r))return null;const{xmin:y,ymin:M,xmax:w,ymax:g}=t,R=t.spatialReference,j=i.spatialReference,[b,v]=null!=(u=null==(h=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_1__.C5)(R))?void 0:h.valid)?u:[],N={x:x[0]*r.x,y:x[1]*r.y},S={cols:Math.ceil((w-y)/N.x-.1)+1,rows:Math.ceil((g-M)/N.y-.1)+1},z=N.x,W=N.y,G=[];let P,L=!1;for(let e=0;e<S.cols;e++){const n=[];for(let t=0;t<S.rows;t++){let r=d(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z({x:y+z*e,y:g-W*t,spatialReference:R}),j,s);l&&(r=l.inverseTransform(r)),n.push(r),e>0&&c&&r&&P[t]&&null!=b&&r.x<P[t].x&&(r.x+=v-b),r?(G.push((r.x-i.xmin)/(i.xmax-i.xmin)),G.push((i.ymax-r.y)/(i.ymax-i.ymin))):(G.push(NaN),G.push(NaN),L=!0)}P=n}const q=function(e,n){const t=(e[0]+e[4]+e[4*n.cols]+e[4*n.cols+4])/4,o=(e[1]+e[5]+e[4*n.rows+1]+e[4*n.rows+5])/4;return[Math.abs(t-e[2*n.rows+2]),Math.abs(o-e[2*n.rows+3])]}(G,S),A=new Float32Array((S.cols-1)*(S.rows-1)*2*6),E=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),F=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<S.cols-1;e++){for(let n=0;n<S.rows-1;n++){let t=e*S.rows*2+2*n;const o=G[t],i=G[t+1],r=G[t+2],a=G[t+3];t+=2*S.rows;const s=G[t],l=G[t+1],c=G[t+2],x=G[t+3];let u=0,m=12*(n*(S.cols-1)+e);for(let e=0;e<3;e++)A[m++]=E[u++]*o+E[u++]*r+E[u++]*c;u=0;for(let e=0;e<3;e++)A[m++]=E[u++]*i+E[u++]*a+E[u++]*x;u=0;for(let e=0;e<3;e++)A[m++]=F[u++]*o+F[u++]*s+F[u++]*c;u=0;for(let e=0;e<3;e++)A[m++]=F[u++]*i+F[u++]*l+F[u++]*x}if(L)for(let e=0;e<A.length;e++)isNaN(A[e])&&(A[e]=-1)}return{offsets:G,error:q,coefficients:A,spacing:x,size:[S.cols-1,S.rows-1]}}function j(e,n,t){const i=Math.log(e.x/n.pixelSize.x)/Math.LN2,r=Math.log(e.y/n.pixelSize.y)/Math.LN2,a=n.storageInfo.maximumPyramidLevel||0;let s="down"===t?Math.floor(Math.min(i,r)):"up"===t?Math.ceil(Math.max(i,r)):Math.round((i+r)/2),l=!1;s<0?s=0:s>a&&(l=s>a+3,s=a);const c=2**s;return{pyramidLevel:s,pyramidResolution:new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z({x:c*n.nativePixelSize.x,y:c*n.nativePixelSize.y,spatialReference:n.spatialReference}),excessiveReading:l}}function b(e,n,t=512,i=!0){const{extent:a,spatialReference:s,pixelSize:l}=e,c=M(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z({x:l.x,y:l.y,spatialReference:s}),n,a);if(null==c)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const x=(c.x+c.y)/2,u=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_6__.c9)(n),m=x*u*96*39.37,p=n.isGeographic?512/t*295828763.7958547:512/t*591657527.591555;let f=!1;const h=g(a,n);i&&(n.isGeographic||n.isWebMercator)&&(f=h.xmin*h.xmax<0);let y,w=m;const d=1.001;if(f){w=p;const e=.29858214164761665,n=e*(96*u*39.37);y=M(new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_3__.Z({x:e,y:e,spatialReference:{wkid:3857}}),s,h),y.x*=w/n,y.y*=w/n}else{y={x:l.x,y:l.y};const n=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let t=0;for(;w<p*(d/2)&&t<n;)t++,w*=2,y.x*=2,y.y*=2;Math.max(w,p)/Math.min(w,p)<=d&&(w=p)}const R=[w],j=[{x:y.x,y:y.y}],v=Math.min(70.5310735,m)/d;for(;w>=v;)w/=2,y.x/=2,y.y/=2,R.push(w),j.push({x:y.x,y:y.y});return{projectedPixelSize:c,scales:R,srcResolutions:j,isCustomTilingScheme:!f}}}}]);
//# sourceMappingURL=8967.75efe4bb.iframe.bundle.js.map