(self.webpackChunkreact_arcgis_wmws=self.webpackChunkreact_arcgis_wmws||[]).push([[3194],{53194:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>ImageryLayer});var a,tslib_es6=__webpack_require__(56140),maybe=(__webpack_require__(95830),__webpack_require__(59472)),Logger=__webpack_require__(36544),ensureType=__webpack_require__(68055),property=__webpack_require__(79881),subclass=__webpack_require__(87566),writer=__webpack_require__(60538),urlUtils=__webpack_require__(10923),PopupTemplate=(__webpack_require__(57002),__webpack_require__(86035),__webpack_require__(58484)),Layer=__webpack_require__(56700),MultiOriginJSONSupport=__webpack_require__(43072),commonProperties=__webpack_require__(18152),OperationalLayer=__webpack_require__(78910),ArcGISService=__webpack_require__(48899),BlendLayer=__webpack_require__(57407),PortalLayer=__webpack_require__(33716),RefreshableLayer=__webpack_require__(2194),ScaleRangeLayer=__webpack_require__(10113),TemporalLayer=__webpack_require__(2584),popupUtils=__webpack_require__(43551),lang=__webpack_require__(82550),aliasOf=__webpack_require__(51894),jsonMap=__webpack_require__(56274),reader=__webpack_require__(30590),Error=__webpack_require__(32656),promiseUtils=__webpack_require__(39105),SpatialReference=__webpack_require__(73032),Point=__webpack_require__(61106),Extent=__webpack_require__(52937),Polygon=__webpack_require__(53817),geometry=__webpack_require__(36348),request=__webpack_require__(36654),Graphic=__webpack_require__(15988),PixelBlock=__webpack_require__(42766),rasterRenderers=__webpack_require__(99657),Field=__webpack_require__(70834),FieldsIndex=__webpack_require__(61121),FeatureSet=__webpack_require__(76194),Query=__webpack_require__(31518),QueryTask=__webpack_require__(45834),DimensionalDefinition=__webpack_require__(50557),enumeration=__webpack_require__(9870),JSONSupport=__webpack_require__(58385);const c=new Set(["raster","raster2","dem","fillraster"]),p=new Set(["rasters"]),m=t=>t&&t.rasterFunction?g.fromJSON(t):t,f=t=>t&&t instanceof g?t.toJSON():t,l=t=>(null==t?void 0:t.functionName)&&!t.declaredClass,y=t=>l(t)?new g(t):t;var d;!function(t){t[t.MOSAIC=0]="MOSAIC",t[t.GROUP=1]="GROUP",t[t.ITEM=2]="ITEM"}(d||(d={}));let g=a=class extends JSONSupport.wq{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(t){if(t){const o=Object.keys(t);if(o.some((e=>c.has(e.toLowerCase())&&l(t[e])))||o.some((e=>p.has(e.toLowerCase())&&Array.isArray(t[e])&&t[e].some((t=>l(t)))))){t=(0,lang.d9)(t);for(const e of o)c.has(e.toLowerCase())?t[e]=y(t[e]):p.has(e.toLowerCase())&&Array.isArray(t[e])&&(t[e]=t[e].map((t=>y(t))))}}this._set("functionArguments",t)}readFunctionArguments(t,e){return(t=>{if(null==t)return null;t=(0,lang.d9)(t);const o={};for(const e of Object.keys(t))c.has(e.toLowerCase())?o[e]=m(t[e]):p.has(e.toLowerCase())&&Array.isArray(t[e])?o[e]=t[e].map(m):o[e]=t[e];return o})(e.arguments||e.rasterFunctionArguments)}writeFunctionArguments(t,e,o){const r={};for(const n of Object.keys(t))c.has(n.toLowerCase())?r[n]=f(t[n]):p.has(n.toLowerCase())&&Array.isArray(t[n])?r[n]=t[n].map(f):r[n]=f(t[n]);this.functionDefinition?e.arguments=r:e[o]=r}readFunctionName(t,e){const o=e.rasterFunctionInfos;return e.name||(o&&o.length&&"None"!==o[0].name?o[0].name:e.rasterFunction)}writeFunctionName(t,e,o){this.functionDefinition?e.name=t:e[o]=t}readFunctionType(t){return d[t]}writeFunctionType(t,e,o){e[o]=d[t]}clone(){return new a({functionName:this.functionName,functionArguments:(0,lang.d9)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};(0,tslib_es6._)([(0,property.Cb)({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],g.prototype,"functionArguments",null),(0,tslib_es6._)([(0,reader.r)("functionArguments",["rasterFunctionArguments","arguments"])],g.prototype,"readFunctionArguments",null),(0,tslib_es6._)([(0,writer.c)("functionArguments")],g.prototype,"writeFunctionArguments",null),(0,tslib_es6._)([(0,property.Cb)({json:{type:String,write:{target:"rasterFunction"}}})],g.prototype,"functionName",void 0),(0,tslib_es6._)([(0,reader.r)("functionName",["rasterFunction","rasterFunctionInfos","name"])],g.prototype,"readFunctionName",null),(0,tslib_es6._)([(0,writer.c)("functionName")],g.prototype,"writeFunctionName",null),(0,tslib_es6._)([(0,enumeration.J)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,property.Cb)({json:{default:"unknown"}})],g.prototype,"outputPixelType",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:!0,write:!0}})],g.prototype,"variableName",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"description",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"functionType",void 0),(0,tslib_es6._)([(0,reader.r)("functionType")],g.prototype,"readFunctionType",null),(0,tslib_es6._)([(0,writer.c)("functionType")],g.prototype,"writeFunctionType",null),(0,tslib_es6._)([(0,property.Cb)({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"functionDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"thumbnail",void 0),g=a=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.RasterFunction")],g);const RasterFunction=g;var SizeVariable=__webpack_require__(91676),colorRampUtils=__webpack_require__(10623),stretchRendererUtils=__webpack_require__(12760);const i={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},s={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},u=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function imageryRendererUtils_l(e){return u.has(e.type)}function imageryRendererUtils_m(t,n){if(!t||!n)return(0,lang.d9)(t||n);const r=(0,lang.d9)(t);return"none"!==n.functionName.toLowerCase()&&(imageryRendererUtils_p(r.functionArguments).Raster=n),r}function imageryRendererUtils_c(e,t){switch(t=t||{},e.type){case"raster-stretch":return function imageryRendererUtils_h(e,t){const i=new RasterFunction;i.functionName="Stretch";const s=imageryRendererUtils_f[stretchRendererUtils.v.toJSON(e.stretchType)],u="u8",l={StretchType:s,Statistics:A(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),s===imageryRendererUtils_f.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=u):s===imageryRendererUtils_f.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,i.outputPixelType=u):s===imageryRendererUtils_f.minMax?i.outputPixelType=u:s===imageryRendererUtils_f.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=l,i.variableName="Raster",e.colorRamp){const a=e.colorRamp,s=new RasterFunction,u=(0,colorRampUtils.Uh)(a);return u?s.functionArguments={colorRamp:u}:!t.convertColorRampToColormap||"algorithmic"!==a.type&&"multipart"!==a.type?s.functionArguments={colorRamp:e.colorRamp.toJSON()}:s.functionArguments={Colormap:(0,colorRampUtils.Jw)(a,256)},s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=i,s}return i}(e,t);case"class-breaks":return function b(e,t){const n=[],r=[],a=[],i=[],s=1e-6,{pixelType:u,rasterAttributeTable:l}=t,m=l&&l.features,c=S(l);if(m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let a;r.a&&m.forEach((o=>{a=o.attributes[e.field],(a>=t.minValue&&a<t.maxValue||n===e.classBreakInfos.length-1&&a>=t.minValue)&&i.push([o.attributes[c],r.r,r.g,r.b])}))}));const t=u?imageryRendererUtils_y(i,u):i,n=new RasterFunction;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=t,n.variableName="Raster",n}e.classBreakInfos.forEach(((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?n.push(e.minValue,e.maxValue+s):n.push(e.minValue+s,e.maxValue+s),r.push(t),i.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)}));const p=u?imageryRendererUtils_y(i,u):i,f=new RasterFunction;f.functionName="Remap",f.functionArguments={InputRanges:n,OutputValues:r,NoDataRanges:a},f.variableName="Raster";const d=new RasterFunction;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:f},d}(e,t);case"unique-value":return function R(e,t){const n=[],{pixelType:r,rasterAttributeTable:a}=t,i=a&&a.features,s=S(a);let u=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach((t=>{const r=t.symbol.color;r.a&&(e.field!==s&&i?i&&i.forEach((a=>{String(a.attributes[e.field])===String(t.value)&&n.push([a.attributes[s],r.r,r.g,r.b])})):isNaN(+t.value)?u=!0:n.push([+t.value,r.r,r.g,r.b]))})),u)return null;const l=r&&n.length>0?imageryRendererUtils_y(n,r):n,m=new RasterFunction;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=l,m.variableName="Raster",m}(e,t);case"raster-colormap":return function v(e,t){const n=e.extractColormap();if(!n||0===n.length)return;const{pixelType:r}=t,a=r?imageryRendererUtils_y(n,r):n,i=new RasterFunction;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,i}(e,t);case"vector-field":return function imageryRendererUtils_d(e,n){const r=new RasterFunction;r.functionName="VectorFieldRenderer";const{dataType:a,bandProperties:i}=n,u="vector-uv"===a;let l,m;i&&2===i.length&&(l=i.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),m=i.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==l&&null!==l||(l=0,m=1);const c="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,f=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new SizeVariable.Z,d={magnitudeBandID:l,directionBandID:m,isUVComponents:u,referenceSystem:c,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:s[e.style.toLowerCase().replace("-","_")],minimumMagnitude:f.minDataValue,maximumMagnitude:f.maxDataValue,minimumSymbolSize:f.minSize,maximumSymbolSize:f.maxSize};return r.functionArguments=d,r}(e,t);case"raster-shaded-relief":return function imageryRendererUtils_g(e,t){if("elevation"!==t.dataType)return new RasterFunction;const r=new RasterFunction;r.functionName="Hillshade";const a="traditional"===e.hillshadeType?0:1,i="none"===e.scalingType?1:3,s={HillshadeType:a,SlopeType:i,ZFactor:e.zFactor};return 0===a&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===i&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",s.Colormap=(0,colorRampUtils.Jw)(e.colorRamp,256)),r}(e,t)}}function imageryRendererUtils_p(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?imageryRendererUtils_p(t.functionArguments):e}const imageryRendererUtils_f={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function imageryRendererUtils_y(e,t){const n=i[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function S(e){if(!e)return;const{fields:t}=e,n=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return n&&n.name}function A(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else{if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e)}})),t}var MosaicRule_u,cast=__webpack_require__(60263);const MosaicRule_m=(0,jsonMap.wY)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),MosaicRule_h=(0,jsonMap.wY)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let MosaicRule_w=MosaicRule_u=class extends JSONSupport.wq{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function M(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return MosaicRule_h.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=o||(r?MosaicRule_m.toJSON(r):null);return MosaicRule_m.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new MosaicRule_u({ascending:this.ascending,itemRenderingRule:(0,lang.d9)(this.itemRenderingRule),lockRasterIds:(0,lang.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,lang.d9)(this.multidimensionalDefinition),objectIds:(0,lang.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,lang.d9)(this.viewpoint),where:this.where})}};(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],MosaicRule_w.prototype,"ascending",void 0),(0,tslib_es6._)([(0,reader.r)("ascending",["ascending","sortAscending"])],MosaicRule_w.prototype,"readAscending",null),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction,json:{write:!0}})],MosaicRule_w.prototype,"itemRenderingRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],MosaicRule_w.prototype,"lockRasterIds",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:MosaicRule_h.jsonValues,write:{target:"mosaicMethod",writer:MosaicRule_h.write}}})],MosaicRule_w.prototype,"method",void 0),(0,tslib_es6._)([(0,reader.r)("method",["mosaicMethod","defaultMosaicMethod"])],MosaicRule_w.prototype,"readMethod",null),(0,tslib_es6._)([(0,property.Cb)({type:[DimensionalDefinition.Z],json:{write:!0}})],MosaicRule_w.prototype,"multidimensionalDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{name:"fids",write:!0}})],MosaicRule_w.prototype,"objectIds",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:MosaicRule_m.jsonValues,read:{reader:MosaicRule_m.read},write:{target:"mosaicOperation",writer:MosaicRule_m.write}}})],MosaicRule_w.prototype,"operation",void 0),(0,tslib_es6._)([(0,reader.r)("operation",["mosaicOperation","mosaicOperator"])],MosaicRule_w.prototype,"readOperation",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],MosaicRule_w.prototype,"sortField",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],MosaicRule_w.prototype,"sortValue",void 0),(0,tslib_es6._)([(0,cast.p)("sortValue")],MosaicRule_w.prototype,"castSortValue",null),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],MosaicRule_w.prototype,"viewpoint",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],MosaicRule_w.prototype,"where",void 0),MosaicRule_w=MosaicRule_u=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.MosaicRule")],MosaicRule_w);const MosaicRule=MosaicRule_w,ExportImageServiceParameters_y=new jsonMap.Xn({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),ExportImageServiceParameters_u=new jsonMap.Xn({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let ExportImageServiceParameters_d=class extends JSONSupport.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,r,o){this.layer.version<10.3||(r[o]=e)}writeCompressionQuality(e,r,o){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(r[o]=e)}writeCompressionTolerance(e,r,o){"lerc"===this.format&&null!=e&&(r[o]=e)}writeLercVersion(e,r,o){"lerc"===this.format&&this.layer.version>=10.5&&(r[o]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const o=e.definitionExpression;return r?o&&o!==r.where&&(r=r.clone(),r.where=o):o&&(r=new MosaicRule({where:o})),r}get renderingRule(){const e=this.layer;let r=e.renderingRule;const o=e.pixelFilter,t=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return r=this._addResampleRasterFunction(r),t&&!o&&(r=this.combineRendererWithRenderingRule()),r}combineRendererWithRenderingRule(){var e;const r=this.layer,{rasterInfo:o,renderingRule:t,renderer:i}=r;return i&&imageryRendererUtils_l(i)?imageryRendererUtils_m(imageryRendererUtils_c(i,{rasterAttributeTable:o.attributeTable,pixelType:o.pixelType,dataType:o.dataType,bandProperties:null==(e=o.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:r.version<10.6}),t):t}_addResampleRasterFunction(e){var r;if("vector-field"!==(null==(r=this.layer.renderer)?void 0:r.type)||"Resample"===(null==e?void 0:e.functionName))return e;const o="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;return imageryRendererUtils_m(new RasterFunction({functionName:"Resample",functionArguments:{ResamplingType:o,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}),e)}};(0,tslib_es6._)([(0,property.Cb)()],ExportImageServiceParameters_d.prototype,"layer",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_d.prototype,"adjustAspectRatio",void 0),(0,tslib_es6._)([(0,writer.c)("adjustAspectRatio")],ExportImageServiceParameters_d.prototype,"writeAdjustAspectRatio",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}}),(0,aliasOf.B)("layer.bandIds")],ExportImageServiceParameters_d.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_d.prototype,"compression",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}}),(0,aliasOf.B)("layer.compressionQuality")],ExportImageServiceParameters_d.prototype,"compressionQuality",void 0),(0,tslib_es6._)([(0,writer.c)("compressionQuality")],ExportImageServiceParameters_d.prototype,"writeCompressionQuality",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}}),(0,aliasOf.B)("layer.compressionTolerance")],ExportImageServiceParameters_d.prototype,"compressionTolerance",void 0),(0,tslib_es6._)([(0,writer.c)("compressionTolerance")],ExportImageServiceParameters_d.prototype,"writeCompressionTolerance",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}}),(0,aliasOf.B)("layer.format")],ExportImageServiceParameters_d.prototype,"format",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:{reader:ExportImageServiceParameters_y.read},write:{writer:ExportImageServiceParameters_y.write}}}),(0,aliasOf.B)("layer.interpolation")],ExportImageServiceParameters_d.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}}),(0,aliasOf.B)("layer.noData")],ExportImageServiceParameters_d.prototype,"noData",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:{reader:ExportImageServiceParameters_u.read},write:{writer:ExportImageServiceParameters_u.write}}}),(0,aliasOf.B)("layer.noDataInterpretation")],ExportImageServiceParameters_d.prototype,"noDataInterpretation",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_d.prototype,"pixelType",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_d.prototype,"lercVersion",void 0),(0,tslib_es6._)([(0,writer.c)("lercVersion")],ExportImageServiceParameters_d.prototype,"writeLercVersion",null),(0,tslib_es6._)([(0,property.Cb)({type:Number})],ExportImageServiceParameters_d.prototype,"version",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_d.prototype,"mosaicRule",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_d.prototype,"renderingRule",null),ExportImageServiceParameters_d=(0,tslib_es6._)([(0,subclass.j)("esri.layers.mixins.ExportImageServiceParameters")],ExportImageServiceParameters_d);var RasterInfo=__webpack_require__(37172),RasterJobHandler=__webpack_require__(68509),RasterCodec=__webpack_require__(8985),rasterRendererHelper=__webpack_require__(92663),RasterSymbolizer=__webpack_require__(9628),normalizeUtils=__webpack_require__(91535),utils=__webpack_require__(66849);let ImageIdentifyResult_p=class extends JSONSupport.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"catalogItemVisibilities",void 0),(0,tslib_es6._)([(0,property.Cb)({type:FeatureSet.default,json:{write:!0}})],ImageIdentifyResult_p.prototype,"catalogItems",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageIdentifyResult_p.prototype,"location",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"name",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"objectId",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"processedValues",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"properties",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"value",void 0),ImageIdentifyResult_p=(0,tslib_es6._)([(0,subclass.j)("esri.tasks.support.ImageIdentifyResult")],ImageIdentifyResult_p);const ImageIdentifyResult=ImageIdentifyResult_p;async function imageService_m(s,a,m){const u=(0,utils.en)(s),c=a.geometry?[a.geometry]:[],f=await(0,normalizeUtils.aX)(c),g=a.toJSON();!function imageService_i(t){const s=null==t?void 0:t.time;if(s&&(null!=s.start||null!=s.end)){const o=[];null!=s.start&&o.push(s.start),null!=s.end&&-1===o.indexOf(s.end)&&o.push(s.end),t.time=o.join(",")}}(g);const l=f&&f[0];(0,maybe.pC)(l)&&(g.geometry=l.toJSON());const p=(0,utils.cv)({...u.query,f:"json",...g});return(0,utils.lA)(p,m)}var Task=__webpack_require__(95986);let t=class extends Task.Z{execute(r,s){return async function imageService_f(i,m,u){const c=(0,utils.en)(i),f=m.geometry?[m.geometry]:[];return(0,normalizeUtils.aX)(f).then((o=>{const n=m.toJSON(),a=o&&o[0];(0,maybe.pC)(a)&&(n.geometry=JSON.stringify(a.toJSON()));const i=(0,utils.cv)({...c.query,f:"json",...n}),f=(0,utils.lA)(i,u);return(0,request.default)(c.path+"/identify",f)})).then((t=>ImageIdentifyResult.fromJSON(t.data)))}(this.url,r,s)}};t=(0,tslib_es6._)([(0,subclass.j)("esri.tasks.ImageIdentifyTask")],t);const ImageIdentifyTask=t;var ImageHistogramParameters_y,jsonUtils=__webpack_require__(56885),TimeExtent=__webpack_require__(87864);let j=ImageHistogramParameters_y=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,r,t){null!=e&&(r.geometryType=(0,jsonUtils.Ji)(e),r[t]=e.toJSON())}clone(){return new ImageHistogramParameters_y((0,lang.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,tslib_es6._)([(0,property.Cb)({types:geometry.qM,json:{read:jsonUtils.im}})],j.prototype,"geometry",void 0),(0,tslib_es6._)([(0,writer.c)("geometry")],j.prototype,"writeGeometry",null),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule,json:{write:!0}})],j.prototype,"mosaicRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction,json:{write:!0}})],j.prototype,"renderingRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],j.prototype,"pixelSize",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],j.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({type:TimeExtent.Z,json:{read:{source:"time"},write:{target:"time"}}})],j.prototype,"timeExtent",void 0),j=ImageHistogramParameters_y=(0,tslib_es6._)([(0,subclass.j)("esri.tasks.support.ImageHistogramParameters")],j);const ImageHistogramParameters=j;var ImageIdentifyParameters_a;let ImageIdentifyParameters_y=ImageIdentifyParameters_a=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,jsonUtils.Ji)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=MosaicRule.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=RasterFunction.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const o=e.start?e.start.getTime():null,i=e.end?e.end.getTime():null;t[r]=null!=o?null!=i?`${o},${i}`:`${o}`:null}}clone(){return new ImageIdentifyParameters_a((0,lang.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyParameters_y.prototype,"geometry",void 0),(0,tslib_es6._)([(0,writer.c)("geometry")],ImageIdentifyParameters_y.prototype,"writeGeometry",null),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"mosaicRule",null),(0,tslib_es6._)([(0,writer.c)("mosaicRule")],ImageIdentifyParameters_y.prototype,"writeMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"renderingRule",null),(0,tslib_es6._)([(0,writer.c)("renderingRule")],ImageIdentifyParameters_y.prototype,"writeRenderingRule",null),(0,tslib_es6._)([(0,property.Cb)({type:[RasterFunction],json:{write:!0}})],ImageIdentifyParameters_y.prototype,"renderingRules",void 0),(0,tslib_es6._)([(0,writer.c)("renderingRules")],ImageIdentifyParameters_y.prototype,"writeRenderingRules",null),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"pixelSize",void 0),(0,tslib_es6._)([(0,writer.c)("pixelSize")],ImageIdentifyParameters_y.prototype,"writePixelSize",null),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"returnGeometry",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"returnCatalogItems",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"returnPixelValues",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageIdentifyParameters_y.prototype,"maxItemCount",void 0),(0,tslib_es6._)([(0,property.Cb)({type:TimeExtent.Z,json:{write:{target:"time"}}})],ImageIdentifyParameters_y.prototype,"timeExtent",void 0),(0,tslib_es6._)([(0,writer.c)("timeExtent")],ImageIdentifyParameters_y.prototype,"writeTimeExtent",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyParameters_y.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyParameters_y.prototype,"viewId",void 0),ImageIdentifyParameters_y=ImageIdentifyParameters_a=(0,tslib_es6._)([(0,subclass.j)("esri.tasks.support.ImageIdentifyParameters")],ImageIdentifyParameters_y);const ImageIdentifyParameters=ImageIdentifyParameters_y,ee=Logger.Z.getLogger("esri.layers.mixins.ArcGISImageService"),te=(0,jsonMap.wY)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),re=(0,jsonMap.wY)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),ie=(0,jsonMap.wY)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),se=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ne=(0,property.Eg)(ensureType.q9,{min:0,max:255});const oe=s=>{let o=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new ExportImageServiceParameters_d({layer:this}))}readDefaultServiceMosaicRule(e,t){return MosaicRule.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}get queryTask(){return new QueryTask.Z({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new FieldsIndex.Z(this.fields):null}set format(e){e&&se.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=MosaicRule.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return MosaicRule.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new MosaicRule({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ne(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,urlUtils.mN)(this.url):null}readRenderer(e,t,r){var i,s;const n=null==t||null==(i=t.layerDefinition)||null==(s=i.drawingInfo)?void 0:s.renderer,a=(0,rasterRenderers.ij)(n,r);return null==a?null:("vector-field"===a.type&&t.symbolTileSize&&!n.symbolTileSize&&(a.symbolTileSize=t.symbolTileSize),imageryRendererUtils_l(a)||ee.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",r=new Field.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new Field.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new Field.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,lang.d9)(this.fields):[];n.push(i),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(r),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(s),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new Field.Z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new Field.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new Field.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){const r=a.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((r=>{const i=(0,lang.d9)(r);return i.name=e+r.name,i}));n=n.concat(r)}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=RasterFunction.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?RasterFunction.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?SpatialReference.Z.fromJSON(r):null}readPixelType(e){return ie.fromJSON(e)||e}writePixelType(e,t,i){((0,maybe.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=ie.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this._symbolizer.bind(),await s.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:a}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeHistograms)throw new Error.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageHistogramParameters,e).clone();const{raster:i,mosaicRule:s,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),s&&null==e.mosaicRule&&(e.mosaicRule=s),i&&null==e.raster&&(e.raster=i),async function imageService_c(t,o,r){const e=await imageService_m(t,o,r),a=(0,utils.en)(t),{data:i}=await(0,request.default)(`${a.path}/computeHistograms`,e);return{histograms:i.histograms}}(this.url,e,{signal:r})}async computeStatisticsHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new Error.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageHistogramParameters,e).clone();const{raster:i,mosaicRule:s,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),s&&null==e.mosaicRule&&(e.mosaicRule=s),i&&null==e.raster&&(e.raster=i),async function imageService_u(t,o,r){const e=await imageService_m(t,o,r),a=(0,utils.en)(t),{data:i}=await(0,request.default)(`${a.path}/computeStatisticsHistograms`,e),{statistics:u}=i;return null!=u&&u.length&&u.forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation})),{statistics:u,histograms:i.histograms}}(this.url,e,{signal:r})}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new Error.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return(0,promiseUtils.gx)(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return(0,request.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new Error.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,request.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>FeatureSet.default.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=(0,request.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=(0,request.default)(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const n=Extent.Z.fromJSON(s[0].extent),a=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new RasterInfo.Z({bandCount:s[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new Point.Z({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:n.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:a,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,request.default)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await(0,request.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?(0,request.default)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},l=(0,request.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then((e=>e.data)).catch((()=>({}))),p=(s.xmin+s.xmax)/2,c=(s.ymax-s.ymin)/6,m=s.ymin+c,d=[];for(let R=0;R<5;R++)d.push({x:p,y:m+c*R});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},f=(0,request.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(h),...t}).then((e=>e.data)).catch((()=>({}))),y=await Promise.all([n,l,f]);let g=y[0].ipxf;if(null==g){var v,b,S;const e=null==(v=i.geodataXform)?void 0:v.xf_0;"topup"===(null==e||null==(b=e.name)?void 0:b.toLowerCase())&&6===(null==e||null==(S=e.coefficients)?void 0:S.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const w=Extent.Z.fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);w&&(w.spatialReference=new SpatialReference.Z({wkid:0,imageCoordinateSystem:i}));const _=y[2].geometries?y[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],O=_.length;if(O<3)return{ics:i,icsToPixelTransform:g,icsExtent:w,northDirection:null};let N=0,P=0,F=0,T=0;for(let R=0;R<O;R++)N+=_[R].x,P+=_[R].y,F+=_[R].x*_[R].x,T+=_[R].x*_[R].y;const j=(O*T-N*P)/(O*F-N*N);let D=0;const C=_[4].x>_[0].x,J=_[4].y>_[0].y;return j===1/0?D=J?90:270:0===j?D=C?0:180:j>0?D=C?180*Math.atan(j)/Math.PI:180*Math.atan(j)/Math.PI+180:j<0&&(D=J?180+180*Math.atan(j)/Math.PI:360+180*Math.atan(j)/Math.PI),{ics:i,icsToPixelTransform:g,icsExtent:w,northDirection:D}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&(0,maybe.pC)(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function ae(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const s=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=s;try{return await s}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,s){const n=(e=e.clone().shiftCentralMeridian()).spatialReference;let a;if(n.imageCoordinateSystem){const{id:e,referenceServiceName:t}=n.imageCoordinateSystem;a=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:n.imageCoordinateSystem})}else a=n.wkid||JSON.stringify(n.toJSON());(0,maybe.pC)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:u,mosaicRule:p}=o;let{renderingRule:c}=o;if(l instanceof Array&&l.length>0&&!this.renderingRule?o.bandIds=l.join(","):o.bandIds=void 0,null!=l&&l.length&&this.renderingRule)if("Colormap"===c.rasterFunction){const e=new RasterFunction({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:c.rasterFunctionArguments.Raster}});c.rasterFunctionArguments.Raster=e}else c=new RasterFunction({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:c}});u instanceof Array&&u.length>0&&(o.noData=u.join(","));const m=this.timeInfo;p&&p.multidimensionalDefinition&&s&&m&&m.startField&&(p.multidimensionalDefinition=p.multidimensionalDefinition.filter((e=>e.dimensionName!==m.startField))),o.mosaicRule=p&&JSON.stringify(p),o.renderingRule=c&&JSON.stringify(c);const d={};if(s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...o,...d}}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new Error.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageIdentifyParameters,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),new ImageIdentifyTask({url:this.url}).execute(e,t)}async queryRasters(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new Error.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,ensureType.TJ)(Query.Z,e),this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new Error.Z("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:s,returnDomainValues:n,returnTopmostRaster:a,showNoDataRecords:o}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let l=!1,u=null,p=null;const c="raster.servicepixelvalue",m=this.rasterFunctionNamesIndex;if((0,maybe.pC)(e.outFields)&&(l=e.outFields.some((e=>-1===e.toLowerCase().indexOf(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(c)>-1&&e.length>c.length)).map((e=>{const t=e.slice(c.length+1);return[this._updateRenderingRulesFunctionName(t,m),t]}));u=t.map((e=>new RasterFunction({functionName:e[0]}))),p=t.map((e=>e[1])),0===u.length?this.renderingRule?(u.push(this.renderingRule),p.push(this.renderingRule.functionName)):u=null:this.renderingRule&&!u.some((e=>e.functionName===this.renderingRule.functionName))&&(u.push(this.renderingRule),p.push(this.renderingRule.functionName))}const d=(0,maybe.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),h=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:u,pixelSize:s,returnCatalogItems:l,returnGeometry:d,maxItemCount:a?1:null});delete h.f;const y=new ImageIdentifyParameters(h),g=new ImageIdentifyTask({url:this.url}),R=this.generateRasterInfo(this.renderingRule);return new Promise((t=>{R.then((()=>{g.execute(y).then((r=>{const i=e.outFields;if(l&&!d&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const s=this.objectIdField||"ObjectId",a=r.catalogItems.features,l=a.map((e=>e.attributes&&e.attributes[s])),u=new Query.Z({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[s]});return this.queryRasters(u).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{a.forEach((r=>{r.attributes[s]===t.attributes[s]&&(r.geometry=new Polygon.Z(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),t(this._processVisibleRastersResponse(r,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:i}))})).catch((()=>{throw new Error.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}t(this._processVisibleRastersResponse(r,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:i}))})).catch((()=>{throw new Error.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))}async fetchVariableStatisticsHistograms(e,t){const r=(0,request.default)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=(0,request.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),(0,maybe.pC)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=(0,maybe.pC)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),s=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Promise.all([r,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&(0,rasterRendererHelper.U0)(this.rasterInfo).indexOf(this.renderer.type)<0&&(this.renderer=null,ee.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=(0,maybe.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new RasterJobHandler.Z;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await(0,request.default)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new Error.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isVectorFieldResampleFunction(e){if(!(0,maybe.pC)(e))return!1;const{functionName:t,functionArguments:r}=e,s="resample"===t.toLowerCase(),n=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return s&&(7===n||10===n)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=(0,rasterRendererHelper.YD)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=(0,rasterRendererHelper.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=(0,rasterRendererHelper.ol)(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new RasterSymbolizer.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,RasterCodec.J)(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await(0,request.default)(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new Error.Z("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,s=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&(0,request.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>FeatureSet.default.fromJSON(e.data))).catch((()=>null)),n=!!(t.hasColormap&&this.version>=10.1)&&(0,request.default)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),a=!!(t.hasHistograms&&this.version>=10.1)&&(0,request.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),o=this.version>=10.3&&(0,request.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([s,n,a,o,l]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=SpatialReference.Z.fromJSON(t.spatialReference||t.extent.spatialReference);return new RasterInfo.Z({width:i,height:s,bandCount:t.bandCount,extent:Extent.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new Point.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return(0,request.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const s=this._initJobHandler(),n=(0,request.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([n,s]).then((e=>{const r=e[0].data,s=t.format||"jpgpng";let n=s;if("bsq"!==n&&"bip"!==n&&(n=(0,RasterCodec.y)(r)),!n)throw new Error.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const a="gif"===s||"bmp"===s||s.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:i};return a?(0,RasterCodec.J)(r,{useCanvas:!0,...t},o).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:s},o).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await(0,request.default)(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,i=[];for(const s in t)if(t.hasOwnProperty(s)){const e=t[s],n=e.extent;let a=!0,o=[n[0]];e.hasRanges&&!0===e.hasRanges?(a=!1,o=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),i.push(new DimensionalDefinition.Z({variableName:"",dimensionName:t[s].name,isSlice:a,values:o}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new MosaicRule;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(i=e,0)))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",m="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,d=[];if(r&&!u&&!m){const e={};e[c]=0,p=[r],u=[new Graphic.Z(this.fullExtent,null,e)]}if(!u)return[];let h,f,y;this._updateResponseFieldNames(u,o);for(let g=0;g<u.length;g++){if(h=u[g],null!=r&&!m){if(f=p[g],y=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?l[s.indexOf(this.renderingRule.functionName)]:r,"nodata"===f.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";h.attributes[e]=this._formatAttributeValue(f,e),h.attributes[t]=this._formatAttributeValue(y,t),this._updateFeatureWithMagDirValues(h,f);const a=this.fields&&this.fields.length>0;let o=this.renderingRule&&(0,maybe.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?f:r:y;this.renderingRule||(o=a?f:r),this._updateFeatureWithRasterAttributeTableValues(h,o)}if(h.sourceLayer=this,a&&this._updateFeatureWithDomainValues(h),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];h.attributes[t]=this._formatAttributeValue(l[e],t)}d.push(u[g])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,maybe.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,s=r&&r.features;if(!s)return;const n=r.fields,a=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=a&&a[0];if(!o)return;const l=s.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new PixelBlock.Z({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});this.pixelFilter({pixelBlock:n,extent:new Extent.Z(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=n.pixels[0][0],e.attributes["Raster.Direction"]=n.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:s}}}};return(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"_functionRasterInfos",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"_rasterJobHandler",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"_symbolizer",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"_defaultServiceMosaicRule",void 0),(0,tslib_es6._)([(0,reader.r)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],o.prototype,"readDefaultServiceMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"_cachedRendererJson",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"rasterFunctionNamesIndex",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"queryTask",null),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"adjustAspectRatio",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0}),(0,aliasOf.B)("serviceRasterInfo.bandCount")],o.prototype,"bandCount",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{write:!0}})],o.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,reader.r)("bandIds")],o.prototype,"readBandIds",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",void 0),(0,tslib_es6._)([(0,reader.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],o.prototype,"readCapabilities",null),(0,tslib_es6._)([(0,property.Cb)({type:Number})],o.prototype,"compressionQuality",void 0),(0,tslib_es6._)([(0,writer.c)("compressionQuality")],o.prototype,"writeCompressionQuality",null),(0,tslib_es6._)([(0,property.Cb)({type:Number})],o.prototype,"compressionTolerance",void 0),(0,tslib_es6._)([(0,writer.c)("compressionTolerance")],o.prototype,"writeCompressionTolerance",null),(0,tslib_es6._)([(0,property.Cb)({json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],o.prototype,"definitionExpression",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,constructOnly:!0})],o.prototype,"exportImageServiceParameters",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"rasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:[Field.Z]})],o.prototype,"fields",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"fieldsIndex",null),(0,tslib_es6._)([(0,property.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],o.prototype,"format",null),(0,tslib_es6._)([(0,reader.r)("service","format",["serviceDataType"])],o.prototype,"readFormat",null),(0,tslib_es6._)([(0,property.Cb)({type:Extent.Z})],o.prototype,"fullExtent",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"hasMultidimensions",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:{source:"maxImageHeight"}}})],o.prototype,"imageMaxHeight",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:{source:"maxImageWidth"}}})],o.prototype,"imageMaxWidth",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],o.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"minScale",void 0),(0,tslib_es6._)([(0,reader.r)("service","minScale")],o.prototype,"readMinScale",null),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"maxScale",void 0),(0,tslib_es6._)([(0,reader.r)("service","maxScale")],o.prototype,"readMaxScale",null),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule})],o.prototype,"mosaicRule",null),(0,tslib_es6._)([(0,reader.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],o.prototype,"readMosaicRule",null),(0,tslib_es6._)([(0,writer.c)("mosaicRule")],o.prototype,"writeMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0}),(0,aliasOf.B)("serviceRasterInfo.multidimensionalInfo")],o.prototype,"multidimensionalInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:ensureType.z8}})],o.prototype,"noData",void 0),(0,tslib_es6._)([(0,writer.c)("noData")],o.prototype,"writeNoData",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:re.jsonValues,read:re.read,write:re.write}})],o.prototype,"noDataInterpretation",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],o.prototype,"objectIdField",void 0),(0,tslib_es6._)([(0,reader.r)("objectIdField")],o.prototype,"readObjectIdField",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"parsedUrl",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0}),(0,aliasOf.B)("serviceRasterInfo.pixelSize.x")],o.prototype,"pixelSizeX",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0}),(0,aliasOf.B)("serviceRasterInfo.pixelSize.y")],o.prototype,"pixelSizeY",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Function})],o.prototype,"pixelFilter",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"viewId",void 0),(0,tslib_es6._)([(0,property.Cb)({types:rasterRenderers.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:rasterRenderers.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],o.prototype,"renderer",void 0),(0,tslib_es6._)([(0,reader.r)("renderer")],o.prototype,"readRenderer",null),(0,tslib_es6._)([(0,writer.c)("renderer")],o.prototype,"writeRenderer",null),(0,tslib_es6._)([(0,property.Cb)(commonProperties.Oh)],o.prototype,"opacity",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0}),(0,aliasOf.B)("serviceRasterInfo.attributeTable")],o.prototype,"rasterAttributeTable",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"rasterFields",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"rasterFunctionInfos",void 0),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction})],o.prototype,"renderingRule",null),(0,tslib_es6._)([(0,reader.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],o.prototype,"readRenderingRule",null),(0,tslib_es6._)([(0,writer.c)("renderingRule")],o.prototype,"writeRenderingRule",null),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"serviceDataType",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:SpatialReference.Z})],o.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,reader.r)("spatialReference",["spatialReference","extent"])],o.prototype,"readSpatialReference",null),(0,tslib_es6._)([(0,property.Cb)({json:{type:ie.jsonValues}})],o.prototype,"pixelType",void 0),(0,tslib_es6._)([(0,reader.r)("pixelType")],o.prototype,"readPixelType",null),(0,tslib_es6._)([(0,writer.c)("pixelType")],o.prototype,"writePixelType",null),(0,tslib_es6._)([(0,property.Cb)({constructOnly:!0,type:RasterInfo.Z})],o.prototype,"serviceRasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],o.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],o.prototype,"url",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],o.prototype,"version",void 0),(0,tslib_es6._)([(0,reader.r)("version",["currentVersion","fields","timeInfo"])],o.prototype,"readVersion",null),o=(0,tslib_es6._)([(0,subclass.j)("esri.layers.mixins.ArcGISImageService")],o),o};let ImageryLayer_S=class extends((0,BlendLayer.h)((0,TemporalLayer.n)((0,RefreshableLayer.Q)((0,ScaleRangeLayer.M)((0,OperationalLayer.q)((0,PortalLayer.I)(oe((0,ArcGISService.Y)((0,MultiOriginJSONSupport.R)(Layer.Z)))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const o=(0,maybe.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._fetchService(o)),(()=>this._fetchService(o)))),Promise.resolve(this)}writeOperationalLayerType(e,r,o){var t;const i="vector-field"===(null==(t=this.renderer)?void 0:t.type);r[o]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const r=this.rasterFields,o=this.title,t=new Set;let i=!1,p=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,p=i&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;i&&(s.add("raster.itempixelvalue"),p&&s.add("raster.magnitude").add("raster.direction"));for(const a of r){const e=a.name.toLowerCase();s.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||t.add(a.name)}return(0,popupUtils.eZ)({fields:r,title:o},{...e,visibleFieldNames:t})}redraw(){this.emit("redraw")}};(0,tslib_es6._)([(0,property.Cb)(commonProperties.rn)],ImageryLayer_S.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["show","hide"]})],ImageryLayer_S.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ImageryLayer_S.prototype,"isReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ImageryLayer_S.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,writer.c)("web-map","operationalLayerType")],ImageryLayer_S.prototype,"writeOperationalLayerType",null),(0,tslib_es6._)([(0,property.Cb)(commonProperties.C_)],ImageryLayer_S.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:PopupTemplate.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ImageryLayer_S.prototype,"popupTemplate",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],ImageryLayer_S.prototype,"defaultPopupTemplate",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{read:!1}})],ImageryLayer_S.prototype,"type",void 0),ImageryLayer_S=(0,tslib_es6._)([(0,subclass.j)("esri.layers.ImageryLayer")],ImageryLayer_S);const ImageryLayer=ImageryLayer_S}}]);
//# sourceMappingURL=3194.dc76f280.iframe.bundle.js.map