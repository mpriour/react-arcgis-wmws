(self.webpackChunkreact_arcgis_wmws=self.webpackChunkreact_arcgis_wmws||[]).push([[6230],{96230:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>WMSLayer});var tslib_es6=__webpack_require__(56140),lang=(__webpack_require__(95830),__webpack_require__(82550)),config=__webpack_require__(34926),maybe=__webpack_require__(59472),ensureType=(__webpack_require__(36544),__webpack_require__(68055)),property=__webpack_require__(79881),jsonMap=__webpack_require__(56274),reader=__webpack_require__(30590),subclass=__webpack_require__(87566),writer=__webpack_require__(60538),urlUtils=__webpack_require__(10923),write=(__webpack_require__(57002),__webpack_require__(86035),__webpack_require__(65131)),spatialReferenceUtils=__webpack_require__(27780),SpatialReference=__webpack_require__(73032),Extent=__webpack_require__(52937),Collection=__webpack_require__(28293),PopupTemplate=__webpack_require__(58484),request=__webpack_require__(36654),Graphic=__webpack_require__(15988),CollectionFlattener=__webpack_require__(78452),Layer=__webpack_require__(56700),MultiOriginJSONSupport=__webpack_require__(43072),arcgisLayerUrl=__webpack_require__(97849),commonProperties=__webpack_require__(18152),OperationalLayer=__webpack_require__(78910),BlendLayer=__webpack_require__(57407),PortalLayer=__webpack_require__(33716),RefreshableLayer=__webpack_require__(2194),ScaleRangeLayer=__webpack_require__(10113),TemporalLayer=__webpack_require__(2584),HandleOwner=__webpack_require__(77204),scaleUtils=__webpack_require__(66002),Error=__webpack_require__(32656);const a=[[4001,4999],[2044,2045],[2081,2083],[2085,2086],[2093,2093],[2096,2098],[2105,2132],[2169,2170],[2176,2180],[2193,2193],[2200,2200],[2206,2212],[2319,2319],[2320,2462],[2523,2549],[2551,2735],[2738,2758],[2935,2941],[2953,2953],[3006,3030],[3034,3035],[3058,3059],[3068,3068],[3114,3118],[3126,3138],[3300,3301],[3328,3335],[3346,3346],[3350,3352],[3366,3366],[3416,3416],[20004,20032],[20064,20092],[21413,21423],[21473,21483],[21896,21899],[22171,22177],[22181,22187],[22191,22197],[25884,25884],[27205,27232],[27391,27398],[27492,27492],[28402,28432],[28462,28492],[30161,30179],[30800,30800],[31251,31259],[31275,31279],[31281,31290],[31466,31700]],s={84:4326,83:4269,27:4267};function o(e){if(!e)return null;const n={idCounter:-1};"string"==typeof e&&(e=(new DOMParser).parseFromString(e,"text/xml"));const r=e.documentElement;if("ServiceExceptionReport"===r.nodeName){const e=Array.prototype.slice.call(r.childNodes).map((e=>e.textContent)).join("\r\n");throw new Error.Z("wmslayer:wms-capabilities-xml-is-not-valid","The server returned errors when the WMS capabilities were requested.",e)}const a=d("Capability",r),s=d("Service",r),o=d("Request",a);if(!a||!s||!o)return null;const l=d("Layer",a);if(!l)return null;const u="WMS_Capabilities"===r.nodeName||"WMT_MS_Capabilities"===r.nodeName?r.getAttribute("version"):"1.3.0",m=h("Title",s,"")||h("Name",s,""),f=h("AccessConstraints",s,""),p=h("Abstract",s,""),x=parseInt(h("MaxWidth",s,"5000"),10),b=parseInt(h("MaxHeight",s,"5000"),10),E=g(o,"GetMap"),S=N(o,"GetMap"),I=y(l,u,n);let w,M,O,C,F=0;if(Array.prototype.slice.call(a.childNodes).forEach((e=>{"Layer"===e.nodeName&&(0===F?w=e:1===F?(I.name&&(I.name="",I.sublayers.push(y(w,u,n))),I.sublayers.push(y(e,u,n))):I.sublayers.push(y(e,u,n)),F++)})),!I)return null;const T=I.fullExtents;if(M=I.sublayers,M||(M=[]),0===M.length&&M.push(I),O=I.extent,!O){const e=new Extent.Z(M[0].extent);I.extent=e.toJSON(),O=I.extent}if(C=I.spatialReferences,!C.length&&M.length>0){const e=t=>{let n=[];return t.sublayers.forEach((t=>{!n.length&&t.spatialReferences.length&&(n=t.spatialReferences||e(t))})),n};M.forEach((t=>{C.length||(C=t.spatialReferences||e(t))}))}const v=N(o,"GetFeatureInfo");let R;if(v){const e=g(o,"GetFeatureInfo");e.indexOf("text/html")>-1?R="text/html":e.indexOf("text/plain")>-1&&(R="text/plain")}if(!R){const e=function(t){t&&(t.queryable=!1,t.sublayers&&t.sublayers.forEach((t=>{e(t)})))};e(I)}const V=c(M),_=I.minScale||0,U=I.maxScale||0,q=I.dimensions,B=V.reduce(((e,t)=>e.concat(t.dimensions)),[]),D=q.concat(B).filter(L);let k=null;if(D.length>0){let e=Number.POSITIVE_INFINITY,t=Number.NEGATIVE_INFINITY;D.forEach((n=>{const{extent:r}=n;!function A(e){return Array.isArray(e)&&e.length>0&&e[0]instanceof Date}(r)?r.forEach((n=>{e=Math.min(e,n.min.getTime()),t=Math.max(t,n.max.getTime())})):r.forEach((n=>{e=Math.min(e,n.getTime()),t=Math.max(t,n.getTime())}))})),k={startTimeField:null,endTimeField:null,trackIdField:null,timeExtent:[e,t]}}return{copyright:f,description:p,dimensions:q,extent:O,fullExtents:T,featureInfoFormat:R,featureInfoUrl:v,mapUrl:S,maxWidth:x,maxHeight:b,maxScale:U,minScale:_,layers:V,spatialReferences:C,supportedImageFormatTypes:E,timeInfo:k,title:m,version:u}}function wmsUtils_l(e){return a.some((([t,n])=>e>=t&&e<=n))}function c(e){let t=[];return e.forEach((e=>{t.push(e),e.sublayers&&e.sublayers.length&&(t=t.concat(c(e.sublayers)),delete e.sublayers)})),t}function m(e,t,n){var r;return null!=(r=t.getAttribute(e))?r:n}function d(e,t){for(let n=0;n<t.childNodes.length;n++){const r=t.childNodes[n];if(E(r)&&r.nodeName===e)return r}return null}function p(e,t){const n=[];for(let r=0;r<t.childNodes.length;r++){const i=t.childNodes[r];E(i)&&i.nodeName===e&&n.push(i)}return n}function h(e,t,n){const r=d(e,t);return r?r.textContent:n}function x(e,t,n){if(!e)return null;const a=parseFloat(e.getAttribute("minx")),s=parseFloat(e.getAttribute("miny")),o=parseFloat(e.getAttribute("maxx")),l=parseFloat(e.getAttribute("maxy"));let u,c,m,f;n?(u=isNaN(s)?-Number.MAX_VALUE:s,c=isNaN(a)?-Number.MAX_VALUE:a,m=isNaN(l)?Number.MAX_VALUE:l,f=isNaN(o)?Number.MAX_VALUE:o):(u=isNaN(a)?-Number.MAX_VALUE:a,c=isNaN(s)?-Number.MAX_VALUE:s,m=isNaN(o)?Number.MAX_VALUE:o,f=isNaN(l)?Number.MAX_VALUE:l);const d=new SpatialReference.Z({wkid:t});return new Extent.Z({xmin:u,ymin:c,xmax:m,ymax:f,spatialReference:d})}function N(e,t){const n=d(t,e);if(n){const e=d("DCPType",n);if(e){const t=d("HTTP",e);if(t){const e=d("Get",t);if(e){let t=function f(e,t,n,r){const i=d(e,n);return i?m(t,i,r):r}("OnlineResource","xlink:href",e,null);if(t)return t.indexOf("&")===t.length-1&&(t=t.substring(0,t.length-1)),function F(e,t){const r=[],i=(0,urlUtils.mN)(e);for(const n in i.query)i.query.hasOwnProperty(n)&&-1===t.indexOf(n.toLowerCase())&&r.push(n+"="+i.query[n]);return i.path+(r.length?"?"+r.join("&"):"")}(t,["service","request"])}}}}return null}function g(e,t){const n=p("Operation",e);if(0===n.length)return p("Format",d(t,e)).map((e=>e.textContent));const r=[];return n.forEach((e=>{e.getAttribute("name")===t&&p("Format",e).forEach((e=>{r.push(e.textContent)}))})),r}function b(e,t,n){const r=d(t,e);if(!r)return n;const{textContent:i}=r;if(null==i||""===i)return n;const a=Number(i);return isNaN(a)?n:a}function y(e,t,n){var a;if(!e)return null;const o={id:n.idCounter++,fullExtents:[],parentLayerId:null,queryable:"1"===e.getAttribute("queryable"),spatialReferences:[],sublayers:null},u=d("LatLonBoundingBox",e),c=d("EX_GeographicBoundingBox",e);let f=null;u&&(f=x(u,4326)),c&&(f=new Extent.Z(0,0,0,0,new SpatialReference.Z({wkid:4326})),f.xmin=parseFloat(h("westBoundLongitude",c,"0")),f.ymin=parseFloat(h("southBoundLatitude",c,"0")),f.xmax=parseFloat(h("eastBoundLongitude",c,"0")),f.ymax=parseFloat(h("northBoundLatitude",c,"0"))),u||c||(f=new Extent.Z(-180,-90,180,90,new SpatialReference.Z({wkid:4326}))),o.minScale=b(e,"MaxScaleDenominator",0),o.maxScale=b(e,"MinScaleDenominator",0);const N=["1.0.0","1.1.0","1.1.1"].indexOf(t)>-1?"SRS":"CRS";return Array.prototype.slice.call(e.childNodes).forEach((e=>{if("Name"===e.nodeName)o.name=e.textContent||"";else if("Title"===e.nodeName)o.title=e.textContent||"";else if("Abstract"===e.nodeName)o.description=e.textContent||"";else if("BoundingBox"===e.nodeName){const n=e.getAttribute(N);if(n&&0===n.indexOf("EPSG:")){const r=parseInt(n.substring(5),10);0===r||isNaN(r)||f||(f="1.3.0"===t?x(e,r,wmsUtils_l(r)):x(e,r))}const r=n&&n.indexOf(":");if(r&&r>-1){let i=parseInt(n.substring(r+1,n.length),10);0===i||isNaN(i)||(i=s[i]?s[i]:i);const a="1.3.0"===t?x(e,i,wmsUtils_l(i)):x(e,i);o.fullExtents.push(a)}}else if(e.nodeName===N)e.textContent.split(" ").forEach((e=>{0===(e=e.indexOf(":")>-1?parseInt(e.split(":")[1],10):parseInt(e,10))||isNaN(e)||(s[e]&&(e=s[e]),-1===o.spatialReferences.indexOf(e)&&o.spatialReferences.push(e))}));else if("Style"!==e.nodeName||o.legendURL){if("Layer"===e.nodeName){const r=y(e,t,n);r&&(r.parentLayerId=o.id,o.sublayers||(o.sublayers=[]),o.sublayers.push(r))}}else{const t=d("LegendURL",e);if(t){const e=d("OnlineResource",t);e&&(o.legendURL=e.getAttribute("xlink:href"))}}})),o.extent=null==(a=f)?void 0:a.toJSON(),o.dimensions=p("Dimension",e).filter((e=>e.getAttribute("name")&&e.getAttribute("units")&&e.textContent)).map((e=>{const t=e.getAttribute("name"),n=e.getAttribute("units"),r=e.textContent,i=e.getAttribute("unitSymbol"),a=e.getAttribute("default"),s="0"!==m("default",e,"0"),o="0"!==m("nearestValue",e,"0"),l="0"!==m("current",e,"0");return/^time$/i.test(t)&&/^ISO8601$/i.test(n)?{name:"time",units:"ISO8601",extent:C(r),default:C(a),multipleValues:s,nearestValue:o,current:l}:/^elevation$/i.test(t)?{name:"elevation",units:n,extent:M(r),unitSymbol:i,default:M(a),multipleValues:s,nearestValue:o}:{name:t,units:n,extent:O(r),unitSymbol:i,default:O(a),multipleValues:s,nearestValue:o}})),o}function E(e){return e.nodeType===Node.ELEMENT_NODE}function L(e){return"time"===e.name}function M(e){if(!e)return null;const t=-1!==e.indexOf("/"),n=e.split(",");return t?n.map((e=>{const t=e.split("/");return t.length<2?null:{min:parseFloat(t[0]),max:parseFloat(t[1]),resolution:t.length>=3&&"0"!==t[2]?parseFloat(t[2]):void 0}})).filter((e=>e)):n.map((e=>parseFloat(e)))}function O(e){if(!e)return null;const t=-1!==e.indexOf("/"),n=e.split(",");return t?n.map((e=>{const t=e.split("/");return t.length<2?null:{min:t[0],max:t[1],resolution:t.length>=3&&"0"!==t[2]?t[2]:void 0}})).filter((e=>e)):n}function C(e){if(!e)return null;const t=-1!==e.indexOf("/"),n=e.split(",");return t?n.map((e=>{const t=e.split("/");return t.length<2?null:{min:new Date(t[0]),max:new Date(t[1]),resolution:t.length>=3&&"0"!==t[2]?T(t[2]):void 0}})).filter((e=>e)):n.map((e=>new Date(e)))}function T(e){const n=e.match(/(?:p(\d+y|\d+(?:.|,)\d+y)?(\d+m|\d+(?:.|,)\d+m)?(\d+d|\d+(?:.|,)\d+d)?)?(?:t(\d+h|\d+(?:.|,)\d+h)?(\d+m|\d+(?:.|,)\d+m)?(\d+s|\d+(?:.|,)\d+s)?)?/i);return n?{years:v(n[1]),months:v(n[2]),days:v(n[3]),hours:v(n[4]),minutes:v(n[5]),seconds:v(n[6])}:null}function v(e){if(!e)return 0;const n=e.match(/(?:\d+(?:.|,)\d+|\d+)/);if(!n)return 0;const r=n[0].replace(",",".");return Number(r)}function R(e){return e.toISOString().replace(/\.[0-9]{3}/,"")}const V=new Set([102100,3857,102113,900913]),_=new Set([3395,54004]);var u,ExportWMSImageParameters=__webpack_require__(58807),cast=__webpack_require__(60263),Handles=__webpack_require__(59691);let WMSSublayer_y=0,WMSSublayer_d=u=class extends MultiOriginJSONSupport.w{constructor(e){super(e),this._sublayersHandles=new Handles.Z,this.dimensions=null,this.fullExtents=null,this.featureInfoFormat=null,this.featureInfoUrl=null,this.legendUrl=null,this.legendEnabled=!0,this.maxScale=0,this.minScale=0,this.popupEnabled=!1,this.queryable=!1,this.spatialReferences=null}get description(){return this._get("description")}set description(e){this._set("description",e)}get fullExtent(){return this._get("fullExtent")}set fullExtent(e){this._set("fullExtent",e)}readExtent(e,t){return(e=t.extent)?Extent.Z.fromJSON(e):null}get id(){const e=this._get("id");return null==e?WMSSublayer_y++:e}set id(e){this._set("id",e)}readLegendUrl(e,t){return t?t.legendUrl||t.legendURL:null}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((t=>t.layer=e))}get name(){return this._get("name")}set name(e){this._set("name",e)}set sublayers(e){const t=this._get("sublayers");t&&(t.forEach((e=>{e.layer=null})),this._sublayersHandles.removeAll(),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this._sublayersHandles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))])),this._set("sublayers",e)}castSublayers(e){return(0,ensureType.se)(Collection.Z.ofType(u),e)}get title(){return this._get("title")}set title(e){this._set("title",e)}get visible(){return this._get("visible")}set visible(e){this._setAndNotifyLayer("visible",e)}clone(){const e=new u;return this.hasOwnProperty("description")&&(e.description=this.description),this.hasOwnProperty("fullExtent")&&(e.fullExtent=this.fullExtent.clone()),this.hasOwnProperty("fullExtents")&&(e.fullExtents=this.fullExtents.map((e=>e.clone()))),this.hasOwnProperty("featureInfoFormat")&&(e.featureInfoFormat=this.featureInfoFormat),this.hasOwnProperty("featureInfoUrl")&&(e.featureInfoUrl=this.featureInfoUrl),this.hasOwnProperty("legendUrl")&&(e.legendUrl=this.legendUrl),this.hasOwnProperty("legendEnabled")&&(e.legendEnabled=this.legendEnabled),this.hasOwnProperty("layer")&&(e.layer=this.layer),this.hasOwnProperty("name")&&(e.name=this.name),this.hasOwnProperty("parent")&&(e.parent=this.parent),this.hasOwnProperty("queryable")&&(e.queryable=this.queryable),this.hasOwnProperty("sublayers")&&(e.sublayers=this.sublayers&&this.sublayers.map((e=>e.clone()))),this.hasOwnProperty("spatialReferences")&&(e.spatialReferences=this.spatialReferences.map((e=>e))),this.hasOwnProperty("visible")&&(e.visible=this.visible),this.hasOwnProperty("title")&&(e.title=this.title),e}_setAndNotifyLayer(e,t){const r=this.layer;this._get(e)!==t&&(this._set(e,t),r&&r.emit("wms-sublayer-update",{propertyName:e,id:this.id}))}};(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"description",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],WMSSublayer_d.prototype,"dimensions",void 0),(0,tslib_es6._)([(0,property.Cb)({value:null})],WMSSublayer_d.prototype,"fullExtent",null),(0,tslib_es6._)([(0,reader.r)("fullExtent",["extent"])],WMSSublayer_d.prototype,"readExtent",null),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"fullExtents",void 0),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"featureInfoFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"featureInfoUrl",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:{enabled:!1,overridePolicy:()=>({ignoreOrigin:!0,enabled:!0})}}})],WMSSublayer_d.prototype,"id",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{origins:{"web-document":{read:{source:["legendUrl","legendURL"]},write:{target:"legendUrl",ignoreOrigin:!0}}},read:{source:"legendURL"},write:{ignoreOrigin:!0}}})],WMSSublayer_d.prototype,"legendUrl",void 0),(0,tslib_es6._)([(0,reader.r)(["web-document"],"legendUrl")],WMSSublayer_d.prototype,"readLegendUrl",null),(0,tslib_es6._)([(0,property.Cb)({value:!0,type:Boolean,json:{read:{source:"showLegend"},write:{target:"showLegend"},origins:{"web-map":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],WMSSublayer_d.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({value:null})],WMSSublayer_d.prototype,"layer",null),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"maxScale",void 0),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"minScale",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,value:null,json:{read:{source:"name"},write:{ignoreOrigin:!0}}})],WMSSublayer_d.prototype,"name",null),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"parent",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{read:{source:"showPopup"},write:{ignoreOrigin:!0,target:"showPopup"}}})],WMSSublayer_d.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:{ignoreOrigin:!0}}})],WMSSublayer_d.prototype,"queryable",void 0),(0,tslib_es6._)([(0,property.Cb)()],WMSSublayer_d.prototype,"sublayers",null),(0,tslib_es6._)([(0,cast.p)("sublayers")],WMSSublayer_d.prototype,"castSublayers",null),(0,tslib_es6._)([(0,property.Cb)({type:[Number],json:{read:{source:"spatialReferences"}}})],WMSSublayer_d.prototype,"spatialReferences",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,value:null,json:{write:{ignoreOrigin:!0}}})],WMSSublayer_d.prototype,"title",null),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"}}})],WMSSublayer_d.prototype,"visible",null),WMSSublayer_d=u=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.WMSSublayer")],WMSSublayer_d);const WMSSublayer=WMSSublayer_d,B=new jsonMap.Xn({bmp:"image/bmp",gif:"image/gif",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml"},{ignoreUnknown:!1});let k=class extends((0,HandleOwner.p)((0,BlendLayer.h)((0,TemporalLayer.n)((0,RefreshableLayer.Q)((0,ScaleRangeLayer.M)((0,OperationalLayer.q)((0,PortalLayer.I)((0,MultiOriginJSONSupport.R)(Layer.Z))))))))){constructor(...e){super(...e),this.allSublayers=new CollectionFlattener.Z({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.customParameters=null,this.customLayerParameters=null,this.copyright=null,this.description=null,this.dimensions=null,this.fullExtent=null,this.fullExtents=null,this.featureInfoFormat=null,this.featureInfoUrl=null,this.imageFormat=null,this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.legendEnabled=!0,this.mapUrl=null,this.isReference=null,this.operationalLayerType="WMS",this.spatialReference=null,this.spatialReferences=null,this.sublayers=null,this.type="wms",this.url=null,this.version=null,this.watch("sublayers",((e,r)=>{if(r){for(const e of r)e.layer=null;this.handles.remove("wms-sublayer")}if(e){for(const r of e)r.parent=this,r.layer=this;this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"wms-sublayer")}}),!0)}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,maybe.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]},e).then((()=>this._fetchService(r)),(()=>this._fetchService(r)))),Promise.resolve(this)}readFullExtentFromItemOrMap(e,r){const t=r.extent;return new Extent.Z({xmin:t[0][0],ymin:t[0][1],xmax:t[1][0],ymax:t[1][1]})}writeFullExtent(e,r){r.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.indexOf("image/png")>-1?"image/png":t&&t[0]}readSpatialReferenceFromItemOrDocument(e,r){return new SpatialReference.Z(r.spatialReferences[0])}writeSpatialReferences(e,r){const t=this.spatialReference&&this.spatialReference.wkid;e&&t?(r.spatialReferences=e.filter((e=>e!==t)),r.spatialReferences.unshift(t)):r.spatialReferences=e}readSublayersFromItemOrMap(e,r,t){return D(r.layers,t,r.visibleLayers)}readSublayers(e,r,t){return D(r.layers,t)}writeSublayers(e,r,t,s){r.layers=[];const o=new Map,i=e.flatten((({sublayers:e})=>e&&e.toArray())).toArray();i.forEach((e=>{"number"==typeof e.parent.id&&(o.has(e.parent.id)?o.get(e.parent.id).push(e.id):o.set(e.parent.id,[e.id]))})),i.forEach((e=>{const t={sublayer:e,...s},i=e.write({parentLayerId:"number"==typeof e.parent.id?e.parent.id:-1},t);if(o.has(e.id)&&(i.sublayerIds=o.get(e.id)),!e.sublayers&&e.name){const s=e.write({},t);delete s.id,r.layers.push(s)}})),r.visibleLayers=i.filter((e=>e.visible&&!e.sublayers)).map((e=>e.name))}createExportImageParameters(e,r,t,s){const o=s&&s.pixelRatio||1,i=(0,scaleUtils.yZ)({extent:e,width:r})*o,a=new ExportWMSImageParameters.j({layer:this,scale:i}),{xmin:n,ymin:l,xmax:p,ymax:m,spatialReference:u}=e,y=function U(t,n){let r=t.wkid;return(0,maybe.Wi)(n)?r:(!n.includes(r)&&t.latestWkid&&(r=t.latestWkid),V.has(r)?n.find((e=>V.has(e)))||n.find((e=>_.has(e)))||102100:r)}(u,this.spatialReferences),c="1.3.0"===this.version&&wmsUtils_l(y)?`${l},${n},${m},${p}`:`${n},${l},${p},${m}`,d=a.toJSON();return{bbox:c,["1.3.0"===this.version?"crs":"srs"]:isNaN(y)?void 0:"EPSG:"+y,...d}}async fetchImage(e,r,t,s){var o,i;const a=this.mapUrl,n=this.createExportImageParameters(e,r,t,s);if(!n.layers){const e=document.createElement("canvas");return e.width=r,e.height=t,e}const l=null==s||null==(o=s.timeExtent)?void 0:o.start,p=null==s||null==(i=s.timeExtent)?void 0:i.end,m=l&&p?l.getTime()===p.getTime()?R(l):`${R(l)}/${R(p)}`:void 0,u={responseType:"image",query:this._mixCustomParameters({width:r,height:t,...n,time:m}),signal:null==s?void 0:s.signal};return null!=s&&s.timestamp&&(u.query={_ts:s.timestamp,...u.query}),(0,request.default)(a,u).then((e=>e.data))}fetchFeatureInfo(e,r,t,s,o){const i=(0,scaleUtils.yZ)({extent:e,width:r}),n=function wmsUtils_u(e){return e.length?e.filter((e=>e.popupEnabled&&e.name&&e.queryable)).map((e=>e.name)).join(","):""}(new ExportWMSImageParameters.j({layer:this,scale:i}).visibleSublayers);if(!this.featureInfoUrl||!n)return null;const l="1.3.0"===this.version?{I:s,J:o}:{x:s,y:o},p={query_layers:n,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:r,height:t,...l},u={...this.createExportImageParameters(e,r,t),...p},y=this._mixCustomParameters(u),c=(0,urlUtils.fl)(this.featureInfoUrl,y),d=document.createElement("iframe");d.src=c,d.frameBorder="0",d.marginHeight="0",d.marginWidth="0",d.style.width="100%",d.setAttribute("sandbox","");const f=new PopupTemplate.Z({title:this.title,content:d});return new Graphic.Z({sourceLayer:this,popupTemplate:f})}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}findSublayerByName(e){return this.allSublayers.find((r=>r.name===e))}supportsSpatialReference(e){return(0,arcgisLayerUrl.G)(this.url)||this.spatialReferences.some((r=>{const t=900913===r?SpatialReference.Z.WebMercator:new SpatialReference.Z({wkid:r});return(0,spatialReferenceUtils.fS)(t,e)}))}async _fetchService(e){if(!this.resourceInfo){this.parsedUrl.query&&this.parsedUrl.query.service&&(this.parsedUrl.query.SERVICE=this.parsedUrl.query.service,delete this.parsedUrl.query.service),this.parsedUrl.query&&this.parsedUrl.query.request&&(this.parsedUrl.query.REQUEST=this.parsedUrl.query.request,delete this.parsedUrl.query.request);const r=await(0,request.default)(this.parsedUrl.path,{query:{SERVICE:"WMS",REQUEST:"GetCapabilities",...this.parsedUrl.query,...this.customParameters},responseType:"xml",signal:e});this.resourceInfo=o(r.data)}if(this.parsedUrl){const e=new urlUtils.R9(this.parsedUrl.path);"https"!==e.scheme||e.port&&"443"!==e.port||-1!==config.Z.request.httpsDomains.indexOf(e.host)||config.Z.request.httpsDomains.push(e.host)}this.read(this.resourceInfo,{origin:"service"})}_mixCustomParameters(e){if(!this.customLayerParameters&&!this.customParameters)return e;const r={...this.customParameters,...this.customLayerParameters};for(const t in r)e[t.toLowerCase()]=r[t];return e}};function D(e,t,s){const o=new Map;e.every((e=>null==e.id))&&(e=(0,lang.d9)(e)).forEach(((e,r)=>e.id=r));for(const r of e){const e=new WMSSublayer;e.read(r,t),-1===(null==s?void 0:s.indexOf(e.name))&&(e.visible=!1),o.set(e.id,e)}const i=[];for(const r of e){const e=o.get(r.id);if(null!=r.parentLayerId&&r.parentLayerId>=0){const t=o.get(r.parentLayerId);t.sublayers||(t.sublayers=new Collection.Z),t.sublayers.unshift(e)}else i.unshift(e)}return i}(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],k.prototype,"allSublayers",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:Object,write:!0}})],k.prototype,"customParameters",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:Object,write:!0}})],k.prototype,"customLayerParameters",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],k.prototype,"copyright",void 0),(0,tslib_es6._)([(0,property.Cb)()],k.prototype,"description",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],k.prototype,"dimensions",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:[[Number]],read:{source:"extent"},write:{target:"extent"},origins:{service:{read:{source:"extent"}}}}})],k.prototype,"fullExtent",void 0),(0,tslib_es6._)([(0,reader.r)(["web-document","portal-item"],"fullExtent",["extent"])],k.prototype,"readFullExtentFromItemOrMap",null),(0,tslib_es6._)([(0,writer.c)(["web-document","portal-item"],"fullExtent",{extent:{type:[[Number]]}})],k.prototype,"writeFullExtent",null),(0,tslib_es6._)([(0,property.Cb)()],k.prototype,"fullExtents",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:{ignoreOrigin:!0}}})],k.prototype,"featureInfoFormat",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:{ignoreOrigin:!0}}})],k.prototype,"featureInfoUrl",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{origins:{"web-document":{default:"image/png",type:B.jsonValues,read:{reader:B.read,source:"format"},write:{writer:B.write,target:"format"}}}}})],k.prototype,"imageFormat",void 0),(0,tslib_es6._)([(0,reader.r)("imageFormat",["supportedImageFormatTypes"])],k.prototype,"readImageFormat",null),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],k.prototype,"imageMaxHeight",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],k.prototype,"imageMaxWidth",void 0),(0,tslib_es6._)([(0,property.Cb)()],k.prototype,"imageTransparency",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.rn)],k.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["show","hide","hide-children"]})],k.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:{ignoreOrigin:!0}}})],k.prototype,"mapUrl",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],k.prototype,"isReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["WMS"]})],k.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,property.Cb)({type:SpatialReference.Z,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],k.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,reader.r)(["web-document","portal-item"],"spatialReference",["spatialReferences"])],k.prototype,"readSpatialReferenceFromItemOrDocument",null),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{read:{source:"spatialReferences"},write:{ignoreOrigin:!0}}})],k.prototype,"spatialReferences",void 0),(0,tslib_es6._)([(0,writer.c)(["web-document","portal-item"],"spatialReferences")],k.prototype,"writeSpatialReferences",null),(0,tslib_es6._)([(0,property.Cb)({type:Collection.Z.ofType(WMSSublayer),json:{write:{target:"layers",overridePolicy(e,r,t){if(function WMSLayer_A(e,r){return e.some((e=>{for(const t in e)if((0,write.df)(e,t,null,r))return!0;return!1}))}(this.allSublayers,t))return{ignoreOrigin:!0}}}}})],k.prototype,"sublayers",void 0),(0,tslib_es6._)([(0,reader.r)(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],k.prototype,"readSublayersFromItemOrMap",null),(0,tslib_es6._)([(0,reader.r)("service","sublayers",["layers"])],k.prototype,"readSublayers",null),(0,tslib_es6._)([(0,writer.c)("sublayers",{layers:{type:[WMSSublayer]},visibleLayers:{type:[String]}})],k.prototype,"writeSublayers",null),(0,tslib_es6._)([(0,property.Cb)({json:{read:!1},readOnly:!0,value:"wms"})],k.prototype,"type",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],k.prototype,"url",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:{ignoreOrigin:!0}}})],k.prototype,"version",void 0),k=(0,tslib_es6._)([(0,subclass.j)("esri.layers.WMSLayer")],k);const WMSLayer=k},58807:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{j:()=>l});var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(56140),_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(95830),__webpack_require__(36544),__webpack_require__(68055),__webpack_require__(79881)),_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(87566),_core_Accessor_js__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__(10923),__webpack_require__(57002),__webpack_require__(86035),__webpack_require__(82677)),_core_HandleOwner_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(77204);const a={visible:"visibleSublayers"};let l=class extends((0,_core_HandleOwner_js__WEBPACK_IMPORTED_MODULE_9__.p)(_core_Accessor_js__WEBPACK_IMPORTED_MODULE_8__.Z)){constructor(e){super(e),this.scale=0}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.sublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("wms-sublayer-update",(e=>this.notifyChange(a[e.propertyName])))],"layer"))}get layers(){const{visibleSublayers:e}=this;return e.filter((e=>e.name)).map((e=>e.name)).join(",")}get version(){this.commitProperty("layers");const e=this.layer;return e&&e.commitProperty("imageTransparency"),(this._get("version")||0)+1}get visibleSublayers(){const{layer:e,scale:r}=this,s=null==e?void 0:e.sublayers,t=[],o=e=>{const{minScale:s,maxScale:a,sublayers:l,visible:i}=e;i&&(0===r||(0===s||r<=s)&&(0===a||r>=a))&&(l?l.forEach(o):t.unshift(e))};return null==s||s.forEach(o),t}toJSON(){const{layer:e,layers:r}=this,{imageFormat:s,imageTransparency:t,version:o}=e;return{format:s,request:"GetMap",service:"WMS",styles:"",transparent:t,version:o,layers:r}}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.Cb)()],l.prototype,"layer",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.Cb)({readOnly:!0})],l.prototype,"layers",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.Cb)({type:Number})],l.prototype,"scale",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.Cb)({readOnly:!0})],l.prototype,"version",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_3__.Cb)({readOnly:!0})],l.prototype,"visibleSublayers",null),l=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_10__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_4__.j)("esri.layers.support.ExportWMSImageParameters")],l)}}]);
//# sourceMappingURL=6230.022adf0d.iframe.bundle.js.map