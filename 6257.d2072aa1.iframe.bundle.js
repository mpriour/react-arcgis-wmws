"use strict";(self.webpackChunkreact_arcgis_wmws=self.webpackChunkreact_arcgis_wmws||[]).push([[6257,8427,7700],{48427:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{hydratedAdapter:()=>r});var _Point_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(53446),_Extent_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(91772),_Multipoint_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(74304),_Polygon_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(89542),_Polyline_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(90819);const r={convertToGEGeometry:function s(e,n){if(null==n)return null;let t="cache"in n?n.cache._geVersion:void 0;return null==t&&(t=e.convertJSONToGeometry(n),"cache"in n&&(n.cache._geVersion=t)),t},exportPoint:function a(n,t,o){const i=n.hasZ(t),r=n.hasM(t),s=new _Point_js__WEBPACK_IMPORTED_MODULE_0__.Z({x:n.getPointX(t),y:n.getPointY(t),spatialReference:o});return i&&(s.z=n.getPointZ(t)),r&&(s.m=n.getPointM(t)),s.cache._geVersion=t,s},exportPolygon:function c(e,n,t){const i=new _Polygon_js__WEBPACK_IMPORTED_MODULE_3__.Z({rings:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return i.cache._geVersion=n,i},exportPolyline:function h(e,n,t){const o=new _Polyline_js__WEBPACK_IMPORTED_MODULE_4__.Z({paths:e.exportPaths(n),hasZ:e.hasZ(n),hasM:e.hasM(n),spatialReference:t});return o.cache._geVersion=n,o},exportMultipoint:function m(e,n,o){const i=new _Multipoint_js__WEBPACK_IMPORTED_MODULE_2__.Z({hasZ:e.hasZ(n),hasM:e.hasM(n),points:e.exportPoints(n),spatialReference:o});return i.cache._geVersion=n,i},exportExtent:function x(e,t,o){const i=e.hasZ(t),r=e.hasM(t),s=new _Extent_js__WEBPACK_IMPORTED_MODULE_1__.Z({xmin:e.getXMin(t),ymin:e.getYMin(t),xmax:e.getXMax(t),ymax:e.getYMax(t),spatialReference:o});if(i){const n=e.getZExtent(t);s.zmin=n.vmin,s.zmax=n.vmax}if(r){const n=e.getMExtent(t);s.mmin=n.vmin,s.mmax=n.vmax}return s.cache._geVersion=t,s}}},17700:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{buffer:()=>v,clip:()=>u,contains:()=>o,convexHull:()=>E,crosses:()=>c,cut:()=>i,densify:()=>H,difference:()=>h,disjoint:()=>g,distance:()=>f,equals:()=>l,extendedSpatialReferenceInfo:()=>t,flipHorizontal:()=>z,flipVertical:()=>B,generalize:()=>D,geodesicArea:()=>q,geodesicBuffer:()=>S,geodesicDensify:()=>L,geodesicLength:()=>C,intersect:()=>y,intersects:()=>a,isSimple:()=>x,nearestCoordinate:()=>j,nearestVertex:()=>J,nearestVertices:()=>N,offset:()=>I,overlaps:()=>m,planarArea:()=>b,planarLength:()=>k,relate:()=>d,rotate:()=>V,simplify:()=>w,symmetricDifference:()=>A,touches:()=>s,union:()=>R,within:()=>p});var _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(89067),_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(48427);function r(n){return Array.isArray(n)?n[0].spatialReference:n&&n.spatialReference}function t(e){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.extendedSpatialReferenceInfo(e)}function u(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.clip(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function i(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.cut(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function o(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.contains(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function c(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.crosses(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function f(t,u,i){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.distance(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i)}function l(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.equals(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function a(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.intersects(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function s(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.touches(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function p(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.within(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function g(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.disjoint(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function m(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.overlaps(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function d(t,u,i){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.relate(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i)}function x(t){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.isSimple(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t)}function w(t){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.simplify(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t)}function E(t,u=!1){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.convexHull(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function h(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.difference(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function A(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.symmetricDifference(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function y(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.intersect(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function R(t,u=null){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.union(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function I(t,u,i,o,c,f){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.offset(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i,o,c,f)}function v(t,u,i,o=!1){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.buffer(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i,o)}function S(t,u,i,o,c,f){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.geodesicBuffer(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i,o,c,f)}function j(t,u,i=!0){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.nearestCoordinate(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i)}function J(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.nearestVertex(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function N(t,u,i,o){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.nearestVertices(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i,o)}function O(n){return"xmin"in n?"center"in n?n.center:null:"x"in n?n:"extent"in n?n.extent.center:null}function V(e,r,t){var u;if(null==e)throw new Error("Illegal Argument Exception");const i=e.spatialReference;if(null==(t=null!=(u=t)?u:O(e)))throw new Error("Illegal Argument Exception");const o=e.constructor.fromJSON(_chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.rotate(e,r,t));return o.spatialReference=i,o}function z(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");const u=e.spatialReference;if(null==(r=null!=(t=r)?t:O(e)))throw new Error("Illegal Argument Exception");const i=e.constructor.fromJSON(_chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.flipHorizontal(e,r));return i.spatialReference=u,i}function B(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");const u=e.spatialReference;if(null==(r=null!=(t=r)?t:O(e)))throw new Error("Illegal Argument Exception");const i=e.constructor.fromJSON(_chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.flipVertical(e,r));return i.spatialReference=u,i}function D(t,u,i,o){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.generalize(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i,o)}function H(t,u,i){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.densify(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i)}function L(t,u,i,o=0){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.geodesicDensify(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i,o)}function b(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.planarArea(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function k(t,u){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.planarLength(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u)}function q(t,u,i){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.geodesicArea(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i)}function C(t,u,i){return _chunks_geometryEngineBase_js__WEBPACK_IMPORTED_MODULE_0__.a.geodesicLength(_geometryAdapters_hydrated_js__WEBPACK_IMPORTED_MODULE_1__.hydratedAdapter,r(t),t,u,i)}},6257:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DirectLineMeasurement3DController:()=>DirectLineMeasurement3DController_y});var tslib_es6=__webpack_require__(36663),maybe=(__webpack_require__(39994),__webpack_require__(61681)),property=(__webpack_require__(13802),__webpack_require__(7283),__webpack_require__(81977)),subclass=__webpack_require__(12571),Accessor=(__webpack_require__(3466),__webpack_require__(12173),__webpack_require__(51876),__webpack_require__(53443)),Polyline=__webpack_require__(90819),mathUtils=__webpack_require__(19431),vec3f64=__webpack_require__(8909),vec3=__webpack_require__(6766),Handles=__webpack_require__(44584),watchUtils=__webpack_require__(15071),projectionEllipsoid=__webpack_require__(225),projection=__webpack_require__(83614),unitUtils=__webpack_require__(17321);class Quantity_e{constructor(i,s){this.measure=(0,unitUtils.j3)(s),this.value=i,this.unit=s}get isBaseUnit(){return(0,unitUtils.YH)(this.unit)}toUnit(t){return new Quantity_e((0,unitUtils.En)(this.value,this.unit,t),t)}toBaseUnit(){return this.toUnit((0,unitUtils.WB)(this.unit))}}const Quantity=Quantity_e;var Error=__webpack_require__(70375),SpatialReference=__webpack_require__(14685),geodesicConstants=(__webpack_require__(53446),__webpack_require__(89542),__webpack_require__(91957),__webpack_require__(36285));function l(e){if(!e)return null;if(e.isGeographic&&e.wkid){const t=geodesicConstants.Dg[e.wkid];if(t)return t}if(e.wkt){const t=geodesicConstants.yB.exec(e.wkt);if(!t||2!==t.length)return null;const n=t[1].split(",");if(!n||n.length<3)return null;const s=parseFloat(n[1]),i=parseFloat(n[2]);return isNaN(s)||isNaN(i)?null:{a:s,f:0===i?0:1/i}}return null}function p(e){const n=l(e||SpatialReference.Z.WGS84);if(function h(e){return"b"in e&&"eSq"in e&&"radius"in e}(n))return n;const s=n.a*(1-n.f);return Object.assign(n,{b:s,eSq:1-(s/n.a)**2,radius:(2*n.a+s)/3,densificationRatio:1e4/((2*n.a+s)/3)})}function u(e){return null!==l(e)}function w(e,t,n,s){const i=t[0]*geodesicConstants.Yr,a=t[1]*geodesicConstants.Yr,o=n[0]*geodesicConstants.Yr,c=n[1]*geodesicConstants.Yr,{a:l,b:h,f,radius:u}=p(s),d=o-i,m=Math.atan((1-f)*Math.tan(a)),g=Math.atan((1-f)*Math.tan(c)),M=Math.sin(m),w=Math.cos(m),y=Math.sin(g),R=Math.cos(g);let v,b,q,z,j,x,N,S,k,A,P=1e3,F=d;do{if(N=Math.sin(F),S=Math.cos(F),q=Math.sqrt(R*N*(R*N)+(w*y-M*R*S)*(w*y-M*R*S)),0===q)return e.distance=0,e.azimuth=void 0,e.reverseAzimuth=void 0,e;j=M*y+w*R*S,x=Math.atan2(q,j),k=w*R*N/q,b=1-k*k,z=j-2*M*y/b,isNaN(z)&&(z=0),A=f/16*b*(4+f*(4-3*b)),v=F,F=d+(1-A)*f*k*(x+A*q*(z+A*j*(2*z*z-1)))}while(Math.abs(F-v)>1e-12&&--P>0);if(0===P){const t=u,n=Math.acos(Math.sin(a)*Math.sin(c)+Math.cos(a)*Math.cos(c)*Math.cos(o-i))*t,s=o-i,l=Math.sin(s)*Math.cos(c),h=Math.cos(a)*Math.sin(c)-Math.sin(a)*Math.cos(c)*Math.cos(s),p=Math.atan2(l,h);return e.azimuth=p/geodesicConstants.Yr,e.distance=n,e.reverseAzimuth=void 0,e}const G=b*(l*l-h*h)/(h*h),C=G/1024*(256+G*(G*(74-47*G)-128)),E=h*(1+G/16384*(4096+G*(G*(320-175*G)-768)))*(x-C*q*(z+C/4*(j*(2*z*z-1)-C/6*z*(4*q*q-3)*(4*z*z-3)))),I=Math.atan2(R*Math.sin(F),w*y-M*R*Math.cos(F)),O=Math.atan2(w*Math.sin(F),w*y*Math.cos(F)-M*R);return e.azimuth=I/geodesicConstants.Yr,e.distance=E,e.reverseAzimuth=O/geodesicConstants.Yr,e}var geometryEngine=__webpack_require__(17700);const UnitNormalizer=class t{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=(0,unitUtils.c9)(this._spatialReference,1),this._metersPerElevationUnit=(0,unitUtils.c9)(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}};let DirectLineMeasurement3DController_y=class extends Accessor.Z{constructor(e){super(e),this._tempStartPosition=(0,vec3f64.c)(),this._tempEndPosition=(0,vec3f64.c)(),this._tempCornerPosition=(0,vec3f64.c)(),this._unitNormalizer=new UnitNormalizer,this._handles=new Handles.Z}initialize(){this._handles.add((0,watchUtils.N1)(this.view,"ready",(()=>this._initialize()),!0))}_initialize(){const e=this.view.spatialReference,t=(0,projectionEllipsoid.rS)(e),s=t===projectionEllipsoid.GG?projectionEllipsoid.wY:t;this._sphericalPCPF=s;const i=(0,projection.Up)(e,s);this._unitNormalizer.spatialReference=i?s:e,this._handles.add([this.dataObject.watch("startPoint",(()=>this._updateMeasurement()),!0),this.dataObject.watch("endPoint",(()=>this._updateMeasurement()),!0),this.dataObject.watch("settings",(()=>this._updateMeasurement()),!0)],"model"),this._updateMeasurement()}_updateMeasurement(){const e=this.dataObject.startPoint,s=this.dataObject.endPoint;if((0,maybe.Wi)(e)||(0,maybe.Wi)(s))return void(this.dataObject.measurement=null);const i=this._euclideanDistances(e,s),r=this._exactGeodesicDistanceAndAngle(e,s,i.horizontal.value);this.dataObject.measurement={directDistance:i.direct,horizontalDistance:i.horizontal,verticalDistance:i.vertical,geodesicDistance:r.distance,geodesicAngle:r.angle}}_euclideanDistances(e,t){e.z>t.z&&(e=[e,e=t][0]);const s=e.clone();s.z=t.z;const i=this._tempStartPosition,r=this._tempEndPosition,o=this._tempCornerPosition,a=this.view.spatialReference,n=this._sphericalPCPF,c=(0,projection.Up)(a,n)?n:a;(0,projection.KC)(e,i,c),(0,projection.KC)(t,r,c),(0,projection.KC)(s,o,c);const m=(0,vec3.k)(i,r),p=(0,vec3.k)(o,r),d=Math.abs(t.z-e.z),h=e=>this._unitNormalizer.normalizeDistance(e),u=h(m),j=h(p),f=h(d);return{direct:new Quantity(u,"meters"),horizontal:new Quantity(j,"meters"),vertical:new Quantity(f,"meters")}}_exactGeodesicDistanceAndAngle(e,t,s){const i=e.spatialReference,r=new Polyline.Z({paths:[e,t],spatialReference:i}),a=i.isGeographic&&u(i)?function m(t,n="meters"){const s=t,i=t;if(!s&&!i)throw new Error.Z("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(s?s.some((e=>!u(e.spatialReference))):i.some((e=>!u(e.spatialReference))))throw new Error.Z("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const r=[];for(let e=0;e<t.length;e++){const s=t[e],{spatialReference:i}=s,o="polyline"===s.type?s.paths:s.rings;let c=0;for(let e=0;e<o.length;e++){const t=o[e];let n=0;for(let e=1;e<t.length;e++){const s=t[e-1][0],a=t[e][0],r=t[e-1][1],o=t[e][1];if(r!==o||s!==a){const e={distance:null};w(e,[s,r],[a,o],i),n+=e.distance}}c+=n}c=(0,unitUtils.En)(c,"meters",n),r.push(c)}return r}([r],"meters")[0]:i.isWebMercator?(0,geometryEngine.geodesicLength)(r,"meters"):void 0,{distance:n,angle:c}=a?{distance:a,angle:this._fallbackGeodesicAngle(a,i)}:this._fallbackGeodesicDistance(e,t,s);return{distance:new Quantity(n,"meters"),angle:new Quantity(c,"degrees")}}_fallbackGeodesicAngle(e,t){return e/(0,projectionEllipsoid.Iu)(t).metersPerDegree}_fallbackGeodesicDistance(e,t,s){if((0,projection.UY)(e,k)){(0,projection.UY)(t,A);const e=(0,mathUtils.Vl)(k[0]),s=(0,mathUtils.Vl)(k[1]),i=(0,mathUtils.Vl)(A[0]),r=(0,mathUtils.Vl)(A[1]),o=Math.abs(i-e),m=(0,mathUtils.ZF)(Math.sin(s)*Math.sin(r)+Math.cos(s)*Math.cos(r)*Math.cos(o)),l=(0,mathUtils.BV)(m),p={distance:0};return w(p,[k[0],k[1]],[A[0],A[1]]),{distance:p.distance,angle:l}}{const t=e.spatialReference,i=s;return{distance:i,angle:this._fallbackGeodesicAngle(i,t)}}}};(0,tslib_es6._)([(0,property.Cb)()],DirectLineMeasurement3DController_y.prototype,"view",void 0),(0,tslib_es6._)([(0,property.Cb)()],DirectLineMeasurement3DController_y.prototype,"dataObject",void 0),DirectLineMeasurement3DController_y=(0,tslib_es6._)([(0,subclass.j)("esri.views.3d.interactive.graphics.DirectLineMeasurement3D.DirectLineMeasurement3DController")],DirectLineMeasurement3DController_y);const k=(0,vec3f64.c)(),A=(0,vec3f64.c)()}}]);