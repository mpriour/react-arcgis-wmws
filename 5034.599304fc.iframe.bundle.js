(self.webpackChunkreact_arcgis_wmws=self.webpackChunkreact_arcgis_wmws||[]).push([[5034],{65034:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>StreamLayer});var t,tslib_es6=__webpack_require__(56140),global=__webpack_require__(7584),maybe=(__webpack_require__(95830),__webpack_require__(59472)),Logger=__webpack_require__(36544),ensureType=__webpack_require__(68055),property=__webpack_require__(79881),jsonMap=__webpack_require__(56274),reader=__webpack_require__(30590),serializableProperty_reader=__webpack_require__(84300),subclass=__webpack_require__(87566),writer=__webpack_require__(60538),Error=__webpack_require__(32656),SpatialReference=(__webpack_require__(10923),__webpack_require__(57002),__webpack_require__(86035),__webpack_require__(73032)),Extent=__webpack_require__(52937),fieldUtils=(__webpack_require__(36348),__webpack_require__(4665)),PopupTemplate=__webpack_require__(58484),request=__webpack_require__(36654),symbols=__webpack_require__(99702),Layer=__webpack_require__(56700),MultiOriginJSONSupport=__webpack_require__(43072),ElevationInfo=__webpack_require__(79710),commonProperties=__webpack_require__(18152),OperationalLayer=__webpack_require__(78910),UniqueValueRenderer=(__webpack_require__(34341),__webpack_require__(38474),__webpack_require__(42952)),SimpleRenderer=(__webpack_require__(43925),__webpack_require__(3642),__webpack_require__(57415),__webpack_require__(4037)),types=__webpack_require__(89772),jsonUtils=__webpack_require__(142),Field=__webpack_require__(70834),FieldsIndex=__webpack_require__(61121),ArcGISService=__webpack_require__(48899),BlendLayer=__webpack_require__(57407),PortalLayer=__webpack_require__(33716),RefreshableLayer=__webpack_require__(2194),ScaleRangeLayer=__webpack_require__(10113),TemporalLayer=__webpack_require__(2584),LabelClass=__webpack_require__(26360),featureReductionUtils=__webpack_require__(47679),labelingInfo=__webpack_require__(68510),styleUtils=__webpack_require__(79663),popupUtils=__webpack_require__(43551),Query=__webpack_require__(31518),JSONSupport=__webpack_require__(58385);let p=t=class extends JSONSupport.wq{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new t({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],p.prototype,"age",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],p.prototype,"ageReceived",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],p.prototype,"displayCount",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],p.prototype,"maxObservations",void 0),p=t=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.PurgeOptions")],p);const PurgeOptions=p,$=Logger.Z.getLogger("esri.layers.StreamLayer"),ee=new jsonMap.Xn({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon"});let re=class extends((0,BlendLayer.h)((0,TemporalLayer.n)((0,ScaleRangeLayer.M)((0,RefreshableLayer.Q)((0,ArcGISService.Y)((0,OperationalLayer.q)((0,PortalLayer.I)((0,MultiOriginJSONSupport.R)(Layer.Z))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new PurgeOptions,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=SpatialReference.Z.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){if(!("WebSocket"in global.Z))return this.addResolvingPromise(Promise.reject(new Error.Z("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=(0,maybe.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service"]},e).catch((e=>e)).then((()=>this._fetchService(o)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}readFeatureReduction(e,r){return(0,featureReductionUtils.ij)(e,r)}writeWebSceneFeatureReduction(e,r,t,o){(0,featureReductionUtils.Q6)(e,r,"layerDefinition.featureReduction",o)}get fieldsIndex(){return new FieldsIndex.Z(this.fields)}set renderer(e){(0,fieldUtils.YN)(e,this.fields),this._set("renderer",e)}readRenderer(e,r,t){const o=(r=r.layerDefinition||r).drawingInfo&&r.drawingInfo.renderer||void 0;if(o){const e=(0,jsonUtils.ij)(o,r,t)||void 0;return e||$.error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:t}),e}if(r.defaultSymbol)return r.types&&r.types.length?new UniqueValueRenderer.Z({defaultSymbol:te(r.defaultSymbol,r,t),field:r.typeIdField,uniqueValueInfos:r.types.map((e=>({id:e.id,symbol:te(e.symbol,e,t)})))}):new SimpleRenderer.Z({symbol:te(r.defaultSymbol,r,t)})}writeRenderer(e,r,t,o){(0,jsonUtils.cW)(e,r,t,o)}writeWebSceneRenderer(e,r,t,o){(0,jsonUtils.cW)(e,r,"layerDefinition.drawingInfo.renderer",o)}createPopupTemplate(e){return(0,popupUtils.eZ)(this,e)}createQuery(){const e=new Query.Z;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,r){if(!this.fields)return null;let t=null;return this.fields.some((r=>(r.name===e&&(t=r.domain),!!t))),t}getField(e){return this.fieldsIndex.get(e)}async _fetchService(e){var r;if(this.webSocketUrl){var t;if(null==(t=this.timeInfo)||!t.trackIdField)throw new Error.Z("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new Error.Z("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new Error.Z("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new Error.Z("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:r}=await(0,request.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=r}return this.sourceJSON={...null!=(r=this.sourceJSON)?r:{},objectIdField:"__esri_stream_id__"},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),(0,fieldUtils.YN)(this.renderer,this.fields),(0,fieldUtils.UF)(this.timeInfo,this.fields),(0,styleUtils.y)(this,{origin:"service"})}};(0,tslib_es6._)([(0,property.Cb)({type:String})],re.prototype,"copyright",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],re.prototype,"defaultPopupTemplate",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],re.prototype,"definitionExpression",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String})],re.prototype,"displayField",void 0),(0,tslib_es6._)([(0,property.Cb)({type:ElevationInfo.Z})],re.prototype,"elevationInfo",void 0),(0,tslib_es6._)([(0,reader.r)("featureReduction",["layerDefinition.featureReduction"])],re.prototype,"readFeatureReduction",null),(0,tslib_es6._)([(0,writer.c)("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:featureReductionUtils.Gx}})],re.prototype,"writeWebSceneFeatureReduction",null),(0,tslib_es6._)([(0,property.Cb)({type:[Field.Z]})],re.prototype,"fields",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],re.prototype,"fieldsIndex",null),(0,tslib_es6._)([(0,property.Cb)({type:Extent.Z})],re.prototype,"geometryDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["point","polygon","polyline","multipoint"],json:{read:{reader:ee.read}}})],re.prototype,"geometryType",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.iR)],re.prototype,"labelsVisible",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[LabelClass.Z],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:labelingInfo.r},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],re.prototype,"labelingInfo",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.rn)],re.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["show","hide"]})],re.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.Cb)({type:ensureType.z8})],re.prototype,"maxReconnectionAttempts",void 0),(0,tslib_es6._)([(0,property.Cb)({type:ensureType.z8})],re.prototype,"maxReconnectionInterval",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.u1)],re.prototype,"maxScale",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.rO)],re.prototype,"minScale",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String})],re.prototype,"objectIdField",void 0),(0,tslib_es6._)([(0,property.Cb)({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],re.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.C_)],re.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:PopupTemplate.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],re.prototype,"popupTemplate",void 0),(0,tslib_es6._)([(0,property.Cb)({type:PurgeOptions})],re.prototype,"purgeOptions",void 0),(0,tslib_es6._)([(0,property.Cb)({types:types.A,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],re.prototype,"renderer",null),(0,tslib_es6._)([(0,reader.r)("service","renderer",["drawingInfo.renderer","defaultSymbol"]),(0,reader.r)("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],re.prototype,"readRenderer",null),(0,tslib_es6._)([(0,writer.c)("renderer")],re.prototype,"writeRenderer",null),(0,tslib_es6._)([(0,writer.c)("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:types.o}})],re.prototype,"writeWebSceneRenderer",null),(0,tslib_es6._)([(0,property.Cb)(commonProperties.YI)],re.prototype,"screenSizePerspectiveEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:SpatialReference.Z,json:{origins:{service:{read:{source:"spatialReference"}}}}})],re.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:!1}})],re.prototype,"type",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],re.prototype,"url",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number})],re.prototype,"updateInterval",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String})],re.prototype,"webSocketUrl",void 0),re=(0,tslib_es6._)([(0,subclass.j)("esri.layers.StreamLayer")],re);const te=(0,serializableProperty_reader.d)({types:symbols.QT});const StreamLayer=re}}]);
//# sourceMappingURL=5034.599304fc.iframe.bundle.js.map